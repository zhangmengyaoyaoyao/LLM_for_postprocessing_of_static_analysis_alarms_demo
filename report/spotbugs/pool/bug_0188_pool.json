{
    "category": "DODGY_CODE",
    "vtype": "REC_CATCH_EXCEPTION",
    "priority": "3",
    "rank": "20",
    "project": "pool",
    "warning_line": "} catch(Exception e) {\n",
    "warning_method": "public synchronized void evict() throws Exception {\nObject key = null;\nif (_evictionKeyCursor != null && _evictionKeyCursor._lastReturned != null) {\nkey = _evictionKeyCursor._lastReturned.value();\n}\nfor (int i = 0, m = getNumTests(); i < m; i++) {\nif (_poolMap == null || _poolMap.size() == 0) {\ncontinue;\n}\nif (null == _evictionKeyCursor) {\nresetEvictionKeyCursor();\nkey = null;\n}\nif (null == _evictionCursor) {\nif (_evictionKeyCursor.hasNext()) {\nkey = _evictionKeyCursor.next();\nresetEvictionObjectCursor(key);\n} else {\nresetEvictionKeyCursor();\nif (_evictionKeyCursor != null) {\nif (_evictionKeyCursor.hasNext()) {\nkey = _evictionKeyCursor.next();\nresetEvictionObjectCursor(key);\n}\n}\n}\n}\nif (_evictionCursor == null) {\ncontinue;\n}\nif ((_lifo && !_evictionCursor.hasPrevious()) || (!_lifo && !_evictionCursor.hasNext())) {\nif (_evictionKeyCursor != null) {\nif (_evictionKeyCursor.hasNext()) {\nkey = _evictionKeyCursor.next();\nresetEvictionObjectCursor(key);\n} else {\nresetEvictionKeyCursor();\nif (_evictionKeyCursor != null) {\nif (_evictionKeyCursor.hasNext()) {\nkey = _evictionKeyCursor.next();\nresetEvictionObjectCursor(key);\n}\n}\n}\n}\n}\nif ((_lifo && !_evictionCursor.hasPrevious()) || (!_lifo && !_evictionCursor.hasNext())) {\ncontinue;\n}\nObjectTimestampPair pair = _lifo ? (ObjectTimestampPair) _evictionCursor.previous() : (ObjectTimestampPair) _evictionCursor.next();\nboolean removeObject = false;\nif ((_minEvictableIdleTimeMillis > 0) && (System.currentTimeMillis() - pair.tstamp > _minEvictableIdleTimeMillis)) {\nremoveObject = true;\n}\nif (_testWhileIdle && removeObject == false) {\nboolean active = false;\ntry {\n_factory.activateObject(key, pair.value);\nactive = true;\n} catch (Exception e) {\nremoveObject = true;\n}\nif (active) {\nif (!_factory.validateObject(key, pair.value)) {\nremoveObject = true;\n} else {\ntry {\n_factory.passivateObject(key, pair.value);\n} catch (Exception e) {\nremoveObject = true;\n}\n}\n}\n}\nif (removeObject) {\ntry {\n_evictionCursor.remove();\n_totalIdle--;\n_factory.destroyObject(key, pair.value);\nif (_minIdle == 0) {\nObjectQueue objectQueue = (ObjectQueue) _poolMap.get(key);\nif (objectQueue != null && objectQueue.queue.isEmpty()) {\n_poolMap.remove(key);\n_poolList.remove(key);\n}\n}\n} catch (Exception e) {\n}\n}\n}\n}"
}