{
    "category": "BAD_PRACTICE",
    "vtype": "DE_MIGHT_IGNORE",
    "priority": "3",
    "rank": "19",
    "project": "pool",
    "warning_line": "} catch (final Exception ignored) {\n",
    "warning_method": "public T borrowObject(final K key, final long borrowMaxWaitMillis) throws E {\nassertOpen();\nfinal AbandonedConfig ac = this.abandonedConfig;\nif (ac != null && ac.getRemoveAbandonedOnBorrow() && getNumIdle() < 2 && getNumActive() > getMaxTotal() - 3) {\nremoveAbandoned(ac);\n}\nPooledObject<T> p = null;\nfinal boolean blockWhenExhausted = getBlockWhenExhausted();\nboolean create;\nfinal long waitTimeMillis = System.currentTimeMillis();\nfinal ObjectDeque<T> objectDeque = register(key);\ntry {\nwhile (p == null) {\ncreate = false;\np = objectDeque.getIdleObjects().pollFirst();\nif (p == null) {\np = create(key);\nif (p != null) {\ncreate = true;\n}\n}\nif (blockWhenExhausted) {\nif (p == null) {\ntry {\np = borrowMaxWaitMillis < 0 ? objectDeque.getIdleObjects().takeFirst() : objectDeque.getIdleObjects().pollFirst(borrowMaxWaitMillis, TimeUnit.MILLISECONDS);\n} catch (InterruptedException e) {\nthrow cast(e);\n}\n}\nif (p == null) {\nthrow new NoSuchElementException(appendStats(\"Timeout waiting for idle object, borrowMaxWaitMillis=\" + borrowMaxWaitMillis));\n}\n} else if (p == null) {\nthrow new NoSuchElementException(appendStats(\"Pool exhausted\"));\n}\nif (!p.allocate()) {\np = null;\n}\nif (p != null) {\ntry {\nfactory.activateObject(key, p);\n} catch (final Exception e) {\ntry {\ndestroy(key, p, true, DestroyMode.NORMAL);\n} catch (final Exception ignored) {\n}\np = null;\nif (create) {\nfinal NoSuchElementException nsee = new NoSuchElementException(appendStats(\"Unable to activate object\"));\nnsee.initCause(e);\nthrow nsee;\n}\n}\nif (p != null && getTestOnBorrow()) {\nboolean validate = false;\nThrowable validationThrowable = null;\ntry {\nvalidate = factory.validateObject(key, p);\n} catch (final Throwable t) {\nPoolUtils.checkRethrow(t);\nvalidationThrowable = t;\n}\nif (!validate) {\ntry {\ndestroy(key, p, true, DestroyMode.NORMAL);\ndestroyedByBorrowValidationCount.incrementAndGet();\n} catch (final Exception ignored) {\n}\np = null;\nif (create) {\nfinal NoSuchElementException nsee = new NoSuchElementException(appendStats(\"Unable to validate object\"));\nnsee.initCause(validationThrowable);\nthrow nsee;\n}\n}\n}\n}\n}\n} finally {\nderegister(key);\n}\nupdateStatsBorrow(p, Duration.ofMillis(System.currentTimeMillis() - waitTimeMillis));\nreturn p.getObject();\n}"
}