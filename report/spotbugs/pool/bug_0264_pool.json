{
    "category": "DODGY_CODE",
    "vtype": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
    "priority": "3",
    "rank": "20",
    "project": "pool",
    "warning_line": "if (objectDeque != null) {\n",
    "warning_method": "public T borrowObject(K key, long borrowMaxWait) throws Exception {\nassertOpen();\nPooledObject<T> p = null;\nWhenExhaustedAction whenExhaustedAction = _whenExhaustedAction;\nboolean create;\nObjectDeque<T> objectDeque = register(key);\ntry {\nwhile (p == null) {\ncreate = false;\nif (whenExhaustedAction == WhenExhaustedAction.FAIL) {\nif (objectDeque != null) {\np = objectDeque.getIdleObjects().pollFirst();\n}\nif (p == null) {\ncreate = true;\np = create(key);\n}\nif (p == null) {\nthrow new NoSuchElementException(\"Pool exhausted\");\n}\nif (!p.allocate()) {\np = null;\n}\n} else if (whenExhaustedAction == WhenExhaustedAction.BLOCK) {\nif (objectDeque != null) {\np = objectDeque.getIdleObjects().pollFirst();\n}\nif (p == null) {\ncreate = true;\np = create(key);\n}\nif (p == null && objectDeque != null) {\nif (borrowMaxWait < 1) {\np = objectDeque.getIdleObjects().takeFirst();\n} else {\np = objectDeque.getIdleObjects().pollFirst(borrowMaxWait, TimeUnit.MILLISECONDS);\n}\n}\nif (p == null) {\nthrow new NoSuchElementException(\"Timeout waiting for idle object\");\n}\nif (!p.allocate()) {\np = null;\n}\n}\nif (p != null) {\ntry {\n_factory.activateObject(key, p.getObject());\n} catch (Exception e) {\ntry {\ndestroy(key, p, true);\n} catch (Exception e1) {\n}\np = null;\nif (create) {\nNoSuchElementException nsee = new NoSuchElementException(\"Unable to activate object\");\nnsee.initCause(e);\nthrow nsee;\n}\n}\nif (p != null && getTestOnBorrow()) {\nboolean validate = false;\nThrowable validationThrowable = null;\ntry {\nvalidate = _factory.validateObject(key, p.getObject());\n} catch (Throwable t) {\nPoolUtils.checkRethrow(t);\n}\nif (!validate) {\ntry {\ndestroy(key, p, true);\n} catch (Exception e) {\n}\np = null;\nif (create) {\nNoSuchElementException nsee = new NoSuchElementException(\"Unable to validate object\");\nnsee.initCause(validationThrowable);\nthrow nsee;\n}\n}\n}\n}\n}\n} finally {\nderegister(key);\n}\nreturn p.getObject();\n}"
}