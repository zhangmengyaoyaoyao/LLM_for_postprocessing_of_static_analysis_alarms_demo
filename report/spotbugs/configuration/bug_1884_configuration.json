{
    "category": "BAD_PRACTICE",
    "vtype": "SE_NO_SERIALVERSIONID",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "private static ThreadLocal recursive = new ThreadLocal()\n{\nprotected synchronized Object initialValue()\n{\nreturn Boolean.FALSE;\n}\n};\nprivate Map configs = new HashMap();\nprivate List configurations = new ArrayList();\nprivate Map namedConfigurations = new HashMap();\nprivate String keyPattern;\nprivate NodeCombiner nodeCombiner;\npublic DynamicCombinedConfiguration(NodeCombiner comb)\n{\nsuper();\nsetNodeCombiner(comb);\n}\npublic DynamicCombinedConfiguration()\n{\nsuper();\n}\npublic void setKeyPattern(String pattern)\n{\nthis.keyPattern = pattern;\n}\npublic String getKeyPattern()\n{\nreturn this.keyPattern;\n}\npublic NodeCombiner getNodeCombiner()\n{\nreturn nodeCombiner;\n}\npublic void setNodeCombiner(NodeCombiner nodeCombiner)\n{\nif (nodeCombiner == null)\n{\nthrow new IllegalArgumentException(\n\"Node combiner must not be null!\");\n}\nthis.nodeCombiner = nodeCombiner;\ninvalidateAll();\n}\npublic void addConfiguration(AbstractConfiguration config, String name,\nString at)\n{\nConfigData cd = new ConfigData(config, name, at);\nconfigurations.add(cd);\nif (name != null)\n{\nnamedConfigurations.put(name, config);\n}\n}\npublic int getNumberOfConfigurations()\n{\nreturn configurations.size();\n}\npublic Configuration getConfiguration(int index)\n{\nConfigData cd = (ConfigData) configurations.get(index);\nreturn cd.getConfiguration();\n}\npublic Configuration getConfiguration(String name)\n{\nreturn (Configuration) namedConfigurations.get(name);\n}\npublic Set getConfigurationNames()\n{\nreturn namedConfigurations.keySet();\n}\npublic Configuration removeConfiguration(String name)\n{\nConfiguration conf = getConfiguration(name);\nif (conf != null)\n{\nremoveConfiguration(conf);\n}\nreturn conf;\n}\npublic boolean removeConfiguration(Configuration config)\n{\nfor (int index = 0; index < getNumberOfConfigurations(); index++)\n{\nif (((ConfigData) configurations.get(index)).getConfiguration() == config)\n{\nremoveConfigurationAt(index);\n}\n}\nreturn super.removeConfiguration(config);\n}\npublic Configuration removeConfigurationAt(int index)\n{\nConfigData cd = (ConfigData) configurations.remove(index);\nif (cd.getName() != null)\n{\nnamedConfigurations.remove(cd.getName());\n}\nreturn super.removeConfigurationAt(index);\n}\npublic ConfigurationNode getRootNode()\n{\nreturn getCurrentConfig().getRootNode();\n}\npublic void setRootNode(ConfigurationNode rootNode)\n{\nif (configs != null)\n{\nthis.getCurrentConfig().setRootNode(rootNode);\n}\nelse\n{\nsuper.setRootNode(rootNode);\n}\n}\npublic void addProperty(String key, Object value)\n{\nthis.getCurrentConfig().addProperty(key, value);\n}\npublic void clear()\n{\nif (configs != null)\n{\nthis.getCurrentConfig().clear();\n}\n}\npublic void clearProperty(String key)\n{\nthis.getCurrentConfig().clearProperty(key);\n}\npublic boolean containsKey(String key)\n{\nreturn this.getCurrentConfig().containsKey(key);\n}\npublic BigDecimal getBigDecimal(String key, BigDecimal defaultValue)\n{\nreturn this.getCurrentConfig().getBigDecimal(key, defaultValue);\n}\npublic BigDecimal getBigDecimal(String key)\n{\nreturn this.getCurrentConfig().getBigDecimal(key);\n}\npublic BigInteger getBigInteger(String key, BigInteger defaultValue)\n{\nreturn this.getCurrentConfig().getBigInteger(key, defaultValue);\n}\npublic BigInteger getBigInteger(String key)\n{\nreturn this.getCurrentConfig().getBigInteger(key);\n}\npublic boolean getBoolean(String key, boolean defaultValue)\n{\nreturn this.getCurrentConfig().getBoolean(key, defaultValue);\n}\npublic Boolean getBoolean(String key, Boolean defaultValue)\n{\nreturn this.getCurrentConfig().getBoolean(key, defaultValue);\n}\npublic boolean getBoolean(String key)\n{\nreturn this.getCurrentConfig().getBoolean(key);\n}\npublic byte getByte(String key, byte defaultValue)\n{\nreturn this.getCurrentConfig().getByte(key, defaultValue);\n}\npublic Byte getByte(String key, Byte defaultValue)\n{\nreturn this.getCurrentConfig().getByte(key, defaultValue);\n}\npublic byte getByte(String key)\n{\nreturn this.getCurrentConfig().getByte(key);\n}\npublic double getDouble(String key, double defaultValue)\n{\nreturn this.getCurrentConfig().getDouble(key, defaultValue);\n}\npublic Double getDouble(String key, Double defaultValue)\n{\nreturn this.getCurrentConfig().getDouble(key, defaultValue);\n}\npublic double getDouble(String key)\n{\nreturn this.getCurrentConfig().getDouble(key);\n}\npublic float getFloat(String key, float defaultValue)\n{\nreturn this.getCurrentConfig().getFloat(key, defaultValue);\n}\npublic Float getFloat(String key, Float defaultValue)\n{\nreturn this.getCurrentConfig().getFloat(key, defaultValue);\n}\npublic float getFloat(String key)\n{\nreturn this.getCurrentConfig().getFloat(key);\n}\npublic int getInt(String key, int defaultValue)\n{\nreturn this.getCurrentConfig().getInt(key, defaultValue);\n}\npublic int getInt(String key)\n{\nreturn this.getCurrentConfig().getInt(key);\n}\npublic Integer getInteger(String key, Integer defaultValue)\n{\nreturn this.getCurrentConfig().getInteger(key, defaultValue);\n}\npublic Iterator getKeys()\n{\nreturn this.getCurrentConfig().getKeys();\n}\npublic Iterator getKeys(String prefix)\n{\nreturn this.getCurrentConfig().getKeys(prefix);\n}\npublic List getList(String key, List defaultValue)\n{\nreturn this.getCurrentConfig().getList(key, defaultValue);\n}\npublic List getList(String key)\n{\nreturn this.getCurrentConfig().getList(key);\n}\npublic long getLong(String key, long defaultValue)\n{\nreturn this.getCurrentConfig().getLong(key, defaultValue);\n}\npublic Long getLong(String key, Long defaultValue)\n{\nreturn this.getCurrentConfig().getLong(key, defaultValue);\n}\npublic long getLong(String key)\n{\nreturn this.getCurrentConfig().getLong(key);\n}\npublic Properties getProperties(String key)\n{\nreturn this.getCurrentConfig().getProperties(key);\n}\npublic Object getProperty(String key)\n{\nreturn this.getCurrentConfig().getProperty(key);\n}\npublic short getShort(String key, short defaultValue)\n{\nreturn this.getCurrentConfig().getShort(key, defaultValue);\n}\npublic Short getShort(String key, Short defaultValue)\n{\nreturn this.getCurrentConfig().getShort(key, defaultValue);\n}\npublic short getShort(String key)\n{\nreturn this.getCurrentConfig().getShort(key);\n}\npublic String getString(String key, String defaultValue)\n{\nreturn this.getCurrentConfig().getString(key, defaultValue);\n}\npublic String getString(String key)\n{\nreturn this.getCurrentConfig().getString(key);\n}\npublic String[] getStringArray(String key)\n{\nreturn this.getCurrentConfig().getStringArray(key);\n}\npublic boolean isEmpty()\n{\nreturn this.getCurrentConfig().isEmpty();\n}\npublic void setProperty(String key, Object value)\n{\nif (configs != null)\n{\nthis.getCurrentConfig().setProperty(key, value);\n}\n}\npublic Configuration subset(String prefix)\n{\nreturn this.getCurrentConfig().subset(prefix);\n}\npublic Node getRoot()\n{\nreturn this.getCurrentConfig().getRoot();\n}\npublic void setRoot(Node node)\n{\nif (configs != null)\n{\nthis.getCurrentConfig().setRoot(node);\n}\nelse\n{\nsuper.setRoot(node);\n}\n}\npublic ExpressionEngine getExpressionEngine()\n{\nreturn super.getExpressionEngine();\n}\npublic void setExpressionEngine(ExpressionEngine expressionEngine)\n{\nsuper.setExpressionEngine(expressionEngine);\n}\npublic void addNodes(String key, Collection nodes)\n{\nthis.getCurrentConfig().addNodes(key, nodes);\n}\npublic SubnodeConfiguration configurationAt(String key, boolean supportUpdates)\n{\nreturn this.getCurrentConfig().configurationAt(key, supportUpdates);\n}\npublic SubnodeConfiguration configurationAt(String key)\n{\nreturn this.getCurrentConfig().configurationAt(key);\n}\npublic List configurationsAt(String key)\n{\nreturn this.getCurrentConfig().configurationsAt(key);\n}\npublic void clearTree(String key)\n{\nthis.getCurrentConfig().clearTree(key);\n}\npublic int getMaxIndex(String key)\n{\nreturn this.getCurrentConfig().getMaxIndex(key);\n}\npublic Configuration interpolatedConfiguration()\n{\nreturn this.getCurrentConfig().interpolatedConfiguration();\n}\npublic Configuration getSource(String key)\n{\nif (key == null)\n{\nthrow new IllegalArgumentException(\"Key must not be null!\");\n}\nreturn getCurrentConfig().getSource(key);\n}\npublic void addConfigurationListener(ConfigurationListener l)\n{\nsuper.addConfigurationListener(l);\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.addConfigurationListener(l);\n}\n}\npublic boolean removeConfigurationListener(ConfigurationListener l)\n{\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.removeConfigurationListener(l);\n}\nreturn super.removeConfigurationListener(l);\n}\npublic Collection getConfigurationListeners()\n{\nreturn super.getConfigurationListeners();\n}\npublic void clearConfigurationListeners()\n{\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.clearConfigurationListeners();\n}\nsuper.clearConfigurationListeners();\n}\npublic void addErrorListener(ConfigurationErrorListener l)\n{\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.addErrorListener(l);\n}\nsuper.addErrorListener(l);\n}\npublic boolean removeErrorListener(ConfigurationErrorListener l)\n{\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.removeErrorListener(l);\n}\nreturn super.removeErrorListener(l);\n}\npublic void clearErrorListeners()\n{\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.clearErrorListeners();\n}\nsuper.clearErrorListeners();\n}\npublic Collection getErrorListeners()\n{\nreturn super.getErrorListeners();\n}\npublic Object clone()\n{\nreturn super.clone();\n}\npublic void invalidate()\n{\ngetCurrentConfig().invalidate();\n}\npublic void invalidateAll()\n{\nif (configs == null)\n{\nreturn;\n}\nIterator iter = configs.values().iterator();\nwhile (iter.hasNext())\n{\nCombinedConfiguration config = (CombinedConfiguration) iter.next();\nconfig.invalidate();\n}\n}\nprotected Object resolveContainerStore(String key)\n{\nif (((Boolean) recursive.get()).booleanValue())\n{\nreturn null;\n}\nrecursive.set(Boolean.TRUE);\ntry\n{\nreturn super.resolveContainerStore(key);\n}\nfinally\n{\nrecursive.set(Boolean.FALSE);\n}\n}\nprivate CombinedConfiguration getCurrentConfig()\n{\nString key = getSubstitutor().replace(keyPattern);\nCombinedConfiguration config;\nsynchronized (getNodeCombiner())\n{\nconfig = (CombinedConfiguration) configs.get(key);\nif (config == null)\n{\nconfig = new CombinedConfiguration(getNodeCombiner());\nconfig.setExpressionEngine(this.getExpressionEngine());\nIterator iter = config.getErrorListeners().iterator();\nwhile (iter.hasNext())\n{\nConfigurationErrorListener listener = (ConfigurationErrorListener) iter.next();\nconfig.addErrorListener(listener);\n}\niter = config.getConfigurationListeners().iterator();\nwhile (iter.hasNext())\n{\nConfigurationListener listener = (ConfigurationListener) iter.next();\nconfig.addConfigurationListener(listener);\n}\nconfig.setForceReloadCheck(isForceReloadCheck());\niter = configurations.iterator();\nwhile (iter.hasNext())\n{\nConfigData data = (ConfigData) iter.next();\nconfig.addConfiguration(data.getConfiguration(), data.getName(),\ndata.getAt());\n}\nconfigs.put(key, config);\n}\n}\nreturn config;\n",
    "warning_method": "public void setRootNode(ConfigurationNode rootNode) {\nif (configs != null) {\nthis.getCurrentConfig().setRootNode(rootNode);\n} else {\nsuper.setRootNode(rootNode);\n}\n}"
}