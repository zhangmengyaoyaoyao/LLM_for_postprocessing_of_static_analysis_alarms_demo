{
    "category": "DODGY_CODE",
    "vtype": "DB_DUPLICATE_SWITCH_CLAUSES",
    "priority": "3",
    "rank": "20",
    "project": "configuration",
    "warning_line": "if ((jjbitVec0[i2] & l2) == 0L)\n{\nbreak;\n}\nif (kind > 21)\n{\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\n",
    "warning_method": "private int jjMoveNfa_0(int startState, int curPos) {\nint startsAt = 0;\njjnewStateCnt = 14;\nint i = 1;\njjstateSet[0] = startState;\nint kind = 0x7fffffff;\nfor (; ; ) {\nif (++jjround == 0x7fffffff) {\nReInitRounds();\n}\nif (curChar < 64) {\nlong l = 1L << curChar;\ndo {\nswitch(jjstateSet[--i]) {\ncase 15:\nif ((0xd7ffecfaffffd9ffL & l) != 0L) {\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\n}\nif ((0x7ff280100000000L & l) != 0L) {\njjCheckNAddTwoStates(4, 5);\n} else if (curChar == 62) {\nif (kind > 20) {\nkind = 20;\n}\n}\nbreak;\ncase 6:\nif ((0xd7ffecfaffffd9ffL & l) != 0L) {\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\n}\nif ((0x3ff000100002600L & l) != 0L) {\njjCheckNAddTwoStates(1, 2);\n} else if (curChar == 42) {\njjstateSet[jjnewStateCnt++] = 3;\n} else if (curChar == 62) {\nif (kind > 19) {\nkind = 19;\n}\n}\nbreak;\ncase 14:\nif ((0xfffffffbffffffffL & l) != 0L) {\njjCheckNAddStates(0, 2);\n} else if (curChar == 34) {\nif (kind > 22) {\nkind = 22;\n}\n}\nbreak;\ncase 3:\ncase 8:\nif ((0xd7ffecfaffffd9ffL & l) == 0L) {\nbreak;\n}\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\ncase 0:\nif ((0xd7ffecfaffffd9ffL & l) != 0L) {\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\n} else if (curChar == 34) {\njjCheckNAddStates(0, 2);\n}\nif (curChar == 60) {\njjstateSet[jjnewStateCnt++] = 6;\n}\nif (curChar == 60) {\njjCheckNAddTwoStates(1, 2);\n}\nbreak;\ncase 1:\nif ((0x3ff000100002600L & l) != 0L) {\njjCheckNAddTwoStates(1, 2);\n}\nbreak;\ncase 2:\nif (curChar == 62 && kind > 19) {\nkind = 19;\n}\nbreak;\ncase 4:\nif ((0x7ff280100000000L & l) != 0L) {\njjCheckNAddTwoStates(4, 5);\n}\nbreak;\ncase 5:\nif (curChar == 62 && kind > 20) {\nkind = 20;\n}\nbreak;\ncase 7:\nif (curChar == 60) {\njjstateSet[jjnewStateCnt++] = 6;\n}\nbreak;\ncase 9:\ncase 11:\nif (curChar == 34) {\njjCheckNAddStates(0, 2);\n}\nbreak;\ncase 10:\nif ((0xfffffffbffffffffL & l) != 0L) {\njjCheckNAddStates(0, 2);\n}\nbreak;\ncase 13:\nif (curChar == 34 && kind > 22) {\nkind = 22;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);\n} else if (curChar < 128) {\nlong l = 1L << (curChar & 077);\ndo {\nswitch(jjstateSet[--i]) {\ncase 15:\nif ((0xd7ffffffffffffffL & l) != 0L) {\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\n}\nif (curChar == 90) {\njjCheckNAddTwoStates(4, 5);\n}\nbreak;\ncase 6:\nif ((0xd7ffffffffffffffL & l) != 0L) {\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\n}\nif ((0x7e0000007eL & l) != 0L) {\njjCheckNAddTwoStates(1, 2);\n}\nbreak;\ncase 14:\njjCheckNAddStates(0, 2);\nif (curChar == 92) {\njjstateSet[jjnewStateCnt++] = 11;\n}\nbreak;\ncase 3:\nif ((0xd7ffffffffffffffL & l) != 0L) {\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\n}\nif (curChar == 68) {\njjCheckNAddTwoStates(4, 5);\n}\nbreak;\ncase 0:\ncase 8:\nif ((0xd7ffffffffffffffL & l) == 0L) {\nbreak;\n}\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\ncase 1:\nif ((0x7e0000007eL & l) != 0L) {\njjCheckNAddTwoStates(1, 2);\n}\nbreak;\ncase 4:\nif (curChar == 90) {\njjCheckNAddTwoStates(4, 5);\n}\nbreak;\ncase 10:\njjCheckNAddStates(0, 2);\nbreak;\ncase 12:\nif (curChar == 92) {\njjstateSet[jjnewStateCnt++] = 11;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);\n} else {\nint i2 = (curChar & 0xff) >> 6;\nlong l2 = 1L << (curChar & 077);\ndo {\nswitch(jjstateSet[--i]) {\ncase 15:\ncase 8:\nif ((jjbitVec0[i2] & l2) == 0L) {\nbreak;\n}\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\ncase 6:\nif ((jjbitVec0[i2] & l2) == 0L) {\nbreak;\n}\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\ncase 14:\ncase 10:\nif ((jjbitVec0[i2] & l2) != 0L) {\njjCheckNAddStates(0, 2);\n}\nbreak;\ncase 3:\nif ((jjbitVec0[i2] & l2) == 0L) {\nbreak;\n}\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\ncase 0:\nif ((jjbitVec0[i2] & l2) == 0L) {\nbreak;\n}\nif (kind > 21) {\nkind = 21;\n}\njjCheckNAdd(8);\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);\n}\nif (kind != 0x7fffffff) {\njjmatchedKind = kind;\njjmatchedPos = curPos;\nkind = 0x7fffffff;\n}\n++curPos;\nif ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt))) {\nreturn curPos;\n}\ntry {\ncurChar = input_stream.readChar();\n} catch (java.io.IOException e) {\nreturn curPos;\n}\n}\n}"
}