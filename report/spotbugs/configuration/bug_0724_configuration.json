{
    "category": "PERFORMANCE",
    "vtype": "SIC_INNER_SHOULD_BE_STATIC",
    "priority": "2",
    "rank": "18",
    "project": "configuration",
    "warning_line": "private StringBuffer buffer = new StringBuffer();\nprivate List stack = new ArrayList();\npublic XMLPropertyListHandler(Node root)\n{\npush(root);\n}\nprivate Node peek()\n{\nif (!stack.isEmpty())\n{\nreturn (Node) stack.get(stack.size() - 1);\n}\nelse\n{\nreturn null;\n}\n}\nprivate Node pop()\n{\nif (!stack.isEmpty())\n{\nreturn (Node) stack.remove(stack.size() - 1);\n}\nelse\n{\nreturn null;\n}\n}\nprivate void push(Node node)\n{\nstack.add(node);\n}\npublic void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException\n{\nif (\"array\".equals(qName))\n{\npush(new ArrayNode());\n}\nelse if (\"dict\".equals(qName))\n{\nif (peek() instanceof ArrayNode)\n{\nXMLPropertyListConfiguration config = new XMLPropertyListConfiguration();\nArrayNode node = (ArrayNode) peek();\nnode.addValue(config);\npush(config.getRoot());\n}\n}\n}\npublic void endElement(String uri, String localName, String qName) throws SAXException\n{\nif (\"key\".equals(qName))\n{\nPListNode node = new PListNode();\nnode.setName(buffer.toString());\npeek().addChild(node);\npush(node);\n}\nelse if (\"dict\".equals(qName))\n{\npop();\n}\nelse\n{\nif (\"string\".equals(qName))\n{\n((PListNode) peek()).addValue(buffer.toString());\n}\nelse if (\"integer\".equals(qName))\n{\n((PListNode) peek()).addIntegerValue(buffer.toString());\n}\nelse if (\"real\".equals(qName))\n{\n((PListNode) peek()).addRealValue(buffer.toString());\n}\nelse if (\"true\".equals(qName))\n{\n((PListNode) peek()).addTrueValue();\n}\nelse if (\"false\".equals(qName))\n{\n((PListNode) peek()).addFalseValue();\n}\nelse if (\"data\".equals(qName))\n{\n((PListNode) peek()).addDataValue(buffer.toString());\n}\nelse if (\"date\".equals(qName))\n{\n((PListNode) peek()).addDateValue(buffer.toString());\n}\nelse if (\"array\".equals(qName))\n{\nArrayNode array = (ArrayNode) pop();\n((PListNode) peek()).addList(array);\n}\nif (!(peek() instanceof ArrayNode))\n{\npop();\n}\n}\nbuffer.setLength(0);\n}\npublic void characters(char[] ch, int start, int length) throws SAXException\n{\nbuffer.append(ch, start, length);\n}\n",
    "warning_method": "public void load(Reader in) throws ConfigurationException {\nEntityResolver resolver = new EntityResolver() {\npublic InputSource resolveEntity(String publicId, String systemId) {\nreturn new InputSource(getClass().getClassLoader().getResourceAsStream(\"PropertyList-1.0.dtd\"));\n}\n};\nXMLPropertyListHandler handler = new XMLPropertyListHandler(getRoot());\ntry {\nSAXParserFactory factory = SAXParserFactory.newInstance();\nfactory.setValidating(true);\nSAXParser parser = factory.newSAXParser();\nparser.getXMLReader().setEntityResolver(resolver);\nparser.getXMLReader().setContentHandler(handler);\nparser.getXMLReader().parse(new InputSource(in));\n} catch (Exception e) {\nthrow new ConfigurationException(\"Unable to parse the configuration file\", e);\n}\n}"
}