{
    "category": "BAD_PRACTICE",
    "vtype": "NM_METHOD_NAMING_CONVENTION",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "if (maxNextCharInd == available)\n{\nif (available == bufsize)\n{\nif (tokenBegin > 2048)\n{\nbufpos = maxNextCharInd = 0;\navailable = tokenBegin;\n}\nelse if (tokenBegin < 0)\nbufpos = maxNextCharInd = 0;\nelse\nExpandBuff(false);\n}\nelse if (available > tokenBegin)\navailable = bufsize;\nelse if ((tokenBegin - available) < 2048)\nExpandBuff(true);\nelse\navailable = tokenBegin;\n}\nint i;\ntry {\nif ((i = inputStream.read(buffer, maxNextCharInd,\navailable - maxNextCharInd)) == -1)\n{\ninputStream.close();\nthrow new java.io.IOException();\n}\nelse\nmaxNextCharInd += i;\nreturn;\n}\ncatch(java.io.IOException e) {\n--bufpos;\nbackup(0);\nif (tokenBegin == -1)\ntokenBegin = bufpos;\nthrow e;\n",
    "warning_method": "protected void FillBuff() throws java.io.IOException {\nif (maxNextCharInd == available) {\nif (available == bufsize) {\nif (tokenBegin > 2048) {\nbufpos = maxNextCharInd = 0;\navailable = tokenBegin;\n} else if (tokenBegin < 0)\nbufpos = maxNextCharInd = 0;\nelse\nExpandBuff(false);\n} else if (available > tokenBegin)\navailable = bufsize;\nelse if ((tokenBegin - available) < 2048)\nExpandBuff(true);\nelse\navailable = tokenBegin;\n}\nint i;\ntry {\nif ((i = inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) == -1) {\ninputStream.close();\nthrow new java.io.IOException();\n} else\nmaxNextCharInd += i;\nreturn;\n} catch (java.io.IOException e) {\n--bufpos;\nbackup(0);\nif (tokenBegin == -1)\ntokenBegin = bufpos;\nthrow e;\n}\n}"
}