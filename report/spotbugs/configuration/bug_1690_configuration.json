{
    "category": "BAD_PRACTICE",
    "vtype": "NM_METHOD_NAMING_CONVENTION",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "List children = new ArrayList();\nConfigurationNode child = null;\njj_consume_token(OBJECT_BEGIN);\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase STRING:\nchild = Property();\nif (child != null) children.add(child);\nlabel_1:\nwhile (true) {\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase LIST_SEPARATOR:\n;\nbreak;\ndefault:\njj_la1[0] = jj_gen;\nbreak label_1;\n}\njj_consume_token(LIST_SEPARATOR);\nchild = Property();\nif (child != null) children.add(child);\n}\nbreak;\ndefault:\njj_la1[1] = jj_gen;\n;\n}\njj_consume_token(OBJECT_END);\nJSONConfiguration configuration = new JSONConfiguration();\nConfigurationNode root = configuration.getRootNode();\nfor (int i = 0; i < children.size(); i++)\n{\nchild = (ConfigurationNode) children.get(i);\nroot.addChild(child);\n}\n{if (true) return configuration;}\n",
    "warning_method": "final public JSONConfiguration Object() throws ParseException {\nList children = new ArrayList();\nConfigurationNode child = null;\njj_consume_token(OBJECT_BEGIN);\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase STRING:\nchild = Property();\nif (child != null)\nchildren.add(child);\nlabel_1: while (true) {\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase LIST_SEPARATOR:\n;\nbreak;\ndefault:\njj_la1[0] = jj_gen;\nbreak label_1;\n}\njj_consume_token(LIST_SEPARATOR);\nchild = Property();\nif (child != null)\nchildren.add(child);\n}\nbreak;\ndefault:\njj_la1[1] = jj_gen;\n;\n}\njj_consume_token(OBJECT_END);\nJSONConfiguration configuration = new JSONConfiguration();\nConfigurationNode root = configuration.getRootNode();\nfor (int i = 0; i < children.size(); i++) {\nchild = (ConfigurationNode) children.get(i);\nroot.addChild(child);\n}\n{\nif (true)\nreturn configuration;\n}\nthrow new Error(\"Missing return statement in function\");\n}"
}