{
    "category": "BAD_PRACTICE",
    "vtype": "NM_METHOD_NAMING_CONVENTION",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "List list = new ArrayList();\nObject element = null;\njj_consume_token(ARRAY_BEGIN);\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase ARRAY_BEGIN:\ncase OBJECT_BEGIN:\ncase STRING:\ncase INTEGER:\ncase REAL:\ncase TRUE:\ncase FALSE:\ncase NULL:\nelement = Value();\nlist.add(element);\nlabel_2:\nwhile (true) {\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase LIST_SEPARATOR:\n;\nbreak;\ndefault:\njj_la1[3] = jj_gen;\nbreak label_2;\n}\njj_consume_token(LIST_SEPARATOR);\nelement = Value();\nlist.add(element);\n}\nbreak;\ndefault:\njj_la1[4] = jj_gen;\n;\n}\njj_consume_token(ARRAY_END);\n{if (true) return list;}\n",
    "warning_method": "final public List Array() throws ParseException {\nList list = new ArrayList();\nObject element = null;\njj_consume_token(ARRAY_BEGIN);\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase ARRAY_BEGIN:\ncase OBJECT_BEGIN:\ncase STRING:\ncase INTEGER:\ncase REAL:\ncase TRUE:\ncase FALSE:\ncase NULL:\nelement = Value();\nlist.add(element);\nlabel_2: while (true) {\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase LIST_SEPARATOR:\n;\nbreak;\ndefault:\njj_la1[3] = jj_gen;\nbreak label_2;\n}\njj_consume_token(LIST_SEPARATOR);\nelement = Value();\nlist.add(element);\n}\nbreak;\ndefault:\njj_la1[4] = jj_gen;\n;\n}\njj_consume_token(ARRAY_END);\n{\nif (true)\nreturn list;\n}\nthrow new Error(\"Missing return statement in function\");\n}"
}