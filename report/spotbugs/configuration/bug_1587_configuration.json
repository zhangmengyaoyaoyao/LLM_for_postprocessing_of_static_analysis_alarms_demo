{
    "category": "PERFORMANCE",
    "vtype": "SIC_INNER_SHOULD_BE_STATIC",
    "priority": "2",
    "rank": "18",
    "project": "configuration",
    "warning_line": "{\nsuper(methodName);\n}\npublic void end(String namespace, String name) throws Exception\n{\nsuper.end(namespace, name);\ndigester.pop();\n}\n",
    "warning_method": "public void load(Reader in) throws ConfigurationException {\nDigester digester = new Digester();\ndigester.setEntityResolver(new EntityResolver() {\npublic InputSource resolveEntity(String publicId, String systemId) {\nreturn new InputSource(getClass().getClassLoader().getResourceAsStream(\"PropertyList-1.0.dtd\"));\n}\n});\ndigester.setValidating(true);\ndigester.addRule(\"*/key\", new ObjectCreateRule(PListNode.class) {\npublic void end() throws Exception {\n}\n});\ndigester.addCallMethod(\"*/key\", \"setName\", 0);\ndigester.addRule(\"*/dict/string\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/data\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/integer\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/real\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/true\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/false\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/date\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/dict\", new SetNextAndPopRule(\"addChild\"));\ndigester.addCallMethod(\"*/dict/string\", \"addValue\", 0);\ndigester.addCallMethod(\"*/dict/data\", \"addDataValue\", 0);\ndigester.addCallMethod(\"*/dict/integer\", \"addIntegerValue\", 0);\ndigester.addCallMethod(\"*/dict/real\", \"addRealValue\", 0);\ndigester.addCallMethod(\"*/dict/true\", \"addTrueValue\");\ndigester.addCallMethod(\"*/dict/false\", \"addFalseValue\");\ndigester.addCallMethod(\"*/dict/date\", \"addDateValue\", 0);\ndigester.addRule(\"*/dict/array\", new SetNextAndPopRule(\"addChild\"));\ndigester.addRule(\"*/dict/array\", new ObjectCreateRule(ArrayNode.class));\ndigester.addSetNext(\"*/dict/array\", \"addList\");\ndigester.addRule(\"*/array/array\", new ObjectCreateRule(ArrayNode.class));\ndigester.addSetNext(\"*/array/array\", \"addList\");\ndigester.addCallMethod(\"*/array/string\", \"addValue\", 0);\ndigester.addCallMethod(\"*/array/data\", \"addDataValue\", 0);\ndigester.addCallMethod(\"*/array/integer\", \"addIntegerValue\", 0);\ndigester.addCallMethod(\"*/array/real\", \"addRealValue\", 0);\ndigester.addCallMethod(\"*/array/true\", \"addTrueValue\");\ndigester.addCallMethod(\"*/array/false\", \"addFalseValue\");\ndigester.addCallMethod(\"*/array/date\", \"addDateValue\", 0);\ndigester.addFactoryCreate(\"*/array/dict\", new AbstractObjectCreationFactory() {\npublic Object createObject(Attributes attributes) throws Exception {\nXMLPropertyListConfiguration config = new XMLPropertyListConfiguration();\nArrayNode node = (ArrayNode) getDigester().peek();\nnode.addValue(config);\nreturn config.getRoot();\n}\n});\ndigester.push(getRoot());\ntry {\ndigester.parse(in);\n} catch (Exception e) {\nthrow new ConfigurationException(\"Unable to parse the configuration file\", e);\n}\n}"
}