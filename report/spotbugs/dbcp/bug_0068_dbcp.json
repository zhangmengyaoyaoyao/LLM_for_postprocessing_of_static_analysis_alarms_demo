{
    "category": "DODGY_CODE",
    "vtype": "REC_CATCH_EXCEPTION",
    "priority": "3",
    "rank": "20",
    "project": "dbcp",
    "warning_line": "} catch (final Exception t) {\n",
    "warning_method": "static Driver createDriver(final BasicDataSource basicDataSource) throws SQLException {\nDriver driverToUse = basicDataSource.getDriver();\nfinal String driverClassName = basicDataSource.getDriverClassName();\nfinal ClassLoader driverClassLoader = basicDataSource.getDriverClassLoader();\nfinal String url = basicDataSource.getUrl();\nif (driverToUse == null) {\nClass<?> driverFromCCL = null;\nif (driverClassName != null) {\ntry {\ntry {\nif (driverClassLoader == null) {\ndriverFromCCL = Class.forName(driverClassName);\n} else {\ndriverFromCCL = Class.forName(driverClassName, true, driverClassLoader);\n}\n} catch (final ClassNotFoundException cnfe) {\ndriverFromCCL = Thread.currentThread().getContextClassLoader().loadClass(driverClassName);\n}\n} catch (final Exception t) {\nfinal String message = \"Cannot load JDBC driver class '\" + driverClassName + \"'\";\nbasicDataSource.log(message, t);\nthrow new SQLException(message, t);\n}\n}\ntry {\nif (driverFromCCL == null) {\ndriverToUse = DriverManager.getDriver(url);\n} else {\ndriverToUse = (Driver) driverFromCCL.getConstructor().newInstance();\nif (!driverToUse.acceptsURL(url)) {\nthrow new SQLException(\"No suitable driver\", \"08001\");\n}\n}\n} catch (final Exception t) {\nfinal String message = \"Cannot create JDBC driver of class '\" + (driverClassName != null ? driverClassName : \"\") + \"' for connect URL '\" + url + \"'\";\nbasicDataSource.log(message, t);\nthrow new SQLException(message, t);\n}\n}\nreturn driverToUse;\n}"
}