{
    "category": "BAD_PRACTICE",
    "vtype": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
    "priority": "2",
    "rank": "16",
    "project": "fileupload",
    "warning_line": "dfosFile.delete();\n",
    "warning_method": "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\nif (!Boolean.getBoolean(SERIALIZABLE_PROPERTY)) {\nthrow new IllegalStateException(\"Property \" + SERIALIZABLE_PROPERTY + \" is not true, rejecting to deserialize a DiskFileItem.\");\n}\nin.defaultReadObject();\nif (repository != null) {\nif (repository.isDirectory()) {\nif (repository.getPath().contains(\"\\0\")) {\nthrow new IOException(format(\"The repository [%s] contains a null character\", repository.getPath()));\n}\n} else {\nthrow new IOException(format(\"The repository [%s] is not a directory\", repository.getAbsolutePath()));\n}\n}\nOutputStream output = getOutputStream();\nif (cachedContent != null) {\noutput.write(cachedContent);\n} else {\nFileInputStream input = new FileInputStream(dfosFile);\nIOUtils.copy(input, output);\ndfosFile.delete();\ndfosFile = null;\n}\noutput.close();\ncachedContent = null;\n}"
}