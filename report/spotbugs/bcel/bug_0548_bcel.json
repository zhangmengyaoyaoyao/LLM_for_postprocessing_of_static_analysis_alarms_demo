{
    "category": "DODGY_CODE",
    "vtype": "PZLA_PREFER_ZERO_LENGTH_ARRAYS",
    "priority": "3",
    "rank": "20",
    "project": "bcel",
    "warning_line": "return null;\n",
    "warning_method": "static Attribute[] getAnnotationAttributes(final ConstantPoolGen cp, final AnnotationEntryGen[] annotationEntryGens) {\nif (annotationEntryGens.length == 0) {\nreturn new Attribute[0];\n}\ntry {\nint countVisible = 0;\nint countInvisible = 0;\nfor (AnnotationEntryGen a : annotationEntryGens) {\nif (a.isRuntimeVisible()) {\ncountVisible++;\n} else {\ncountInvisible++;\n}\n}\nByteArrayOutputStream rvaBytes = new ByteArrayOutputStream();\nByteArrayOutputStream riaBytes = new ByteArrayOutputStream();\nDataOutputStream rvaDos = new DataOutputStream(rvaBytes);\nDataOutputStream riaDos = new DataOutputStream(riaBytes);\nrvaDos.writeShort(countVisible);\nriaDos.writeShort(countInvisible);\nfor (AnnotationEntryGen a : annotationEntryGens) {\nif (a.isRuntimeVisible()) {\na.dump(rvaDos);\n} else {\na.dump(riaDos);\n}\n}\nrvaDos.close();\nriaDos.close();\nbyte[] rvaData = rvaBytes.toByteArray();\nbyte[] riaData = riaBytes.toByteArray();\nint rvaIndex = -1;\nint riaIndex = -1;\nif (rvaData.length > 2) {\nrvaIndex = cp.addUtf8(\"RuntimeVisibleAnnotations\");\n}\nif (riaData.length > 2) {\nriaIndex = cp.addUtf8(\"RuntimeInvisibleAnnotations\");\n}\nList<Attribute> newAttributes = new ArrayList<>();\nif (rvaData.length > 2) {\nnewAttributes.add(new RuntimeVisibleAnnotations(rvaIndex, rvaData.length, new DataInputStream(new ByteArrayInputStream(rvaData)), cp.getConstantPool()));\n}\nif (riaData.length > 2) {\nnewAttributes.add(new RuntimeInvisibleAnnotations(riaIndex, riaData.length, new DataInputStream(new ByteArrayInputStream(riaData)), cp.getConstantPool()));\n}\nreturn newAttributes.toArray(new Attribute[newAttributes.size()]);\n} catch (IOException e) {\nSystem.err.println(\"IOException whilst processing annotations\");\ne.printStackTrace();\n}\nreturn null;\n}"
}