{
    "category": "DODGY_CODE",
    "vtype": "SF_SWITCH_NO_DEFAULT",
    "priority": "2",
    "rank": "19",
    "project": "codec",
    "warning_line": "switch (unprocessedLength) {\ncase 3:\nk1 ^= unprocessed[2] << 16;\ncase 2:\nk1 ^= unprocessed[1] << 8;\ncase 1:\nk1 ^= unprocessed[0];\nk1 *= C1_32;\nk1 = Integer.rotateLeft(k1, R1_32);\nk1 *= C2_32;\nresult ^= k1;\n",
    "warning_method": "@Override\n@Deprecated\nint finalise(final int hash, final int unprocessedLength, final byte[] unprocessed, final int totalLen) {\nint result = hash;\n// Note: This fails to apply masking using 0xff to the 3 remaining bytes.\nint k1 = 0;\nswitch(unprocessedLength) {\ncase 3:\nk1 ^= unprocessed[2] << 16;\ncase 2:\nk1 ^= unprocessed[1] << 8;\ncase 1:\nk1 ^= unprocessed[0];\nk1 *= C1_32;\nk1 = Integer.rotateLeft(k1, R1_32);\nk1 *= C2_32;\nresult ^= k1;\n}\nresult ^= totalLen;\nreturn fmix32(result);\n}"
}