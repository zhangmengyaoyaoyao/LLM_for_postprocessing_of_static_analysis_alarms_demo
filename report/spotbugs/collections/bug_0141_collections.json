{
    "category": "DODGY_CODE",
    "vtype": "RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT",
    "priority": "2",
    "rank": "17",
    "project": "collections",
    "warning_line": "map.size();  \n",
    "warning_method": "@SuppressWarnings(\"unchecked\")\npublic static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array) {\nmap.size();\nif (array == null || array.length == 0) {\nreturn map;\n}\nfinal Object obj = array[0];\nif (obj instanceof Map.Entry) {\nfor (final Object element : array) {\nfinal Map.Entry<K, V> entry = (Map.Entry<K, V>) element;\nmap.put(entry.getKey(), entry.getValue());\n}\n} else if (obj instanceof KeyValue) {\nfor (final Object element : array) {\nfinal KeyValue<K, V> keyval = (KeyValue<K, V>) element;\nmap.put(keyval.getKey(), keyval.getValue());\n}\n} else if (obj instanceof Object[]) {\nfor (int i = 0; i < array.length; i++) {\nfinal Object[] sub = (Object[]) array[i];\nif (sub == null || sub.length < 2) {\nthrow new IllegalArgumentException(\"Invalid array element: \" + i);\n}\nmap.put((K) sub[0], (V) sub[1]);\n}\n} else {\nfor (int i = 0; i < array.length - 1; ) {\nmap.put((K) array[i++], (V) array[i++]);\n}\n}\nreturn map;\n}"
}