{
    "category": "BAD_PRACTICE",
    "vtype": "THROWS_METHOD_THROWS_CLAUSE_THROWABLE",
    "priority": "2",
    "rank": "16",
    "project": "net",
    "warning_line": "CodeSource codeSource = Main.class.getProtectionDomain().getCodeSource();\nMap<String, String> map = new HashMap<String, String>();\nfinal boolean noArgsProvided = args.length == 0;\nif ( codeSource != null) {\nfinal String sourceFile = codeSource.getLocation().getFile();\nif (sourceFile.endsWith(\".jar\")) {\nif (noArgsProvided) {\nSystem.out.println(\"Usage: java -jar commons-net-examples-m.n.jar <exampleClass> <exampleClass parameters>\");\nSystem.out.println(\"\\nClasses found in the jar:\");\n}\nJarFile jf = new JarFile(sourceFile);\nEnumeration<JarEntry> e = jf.entries();\nwhile (e.hasMoreElements()) {\nJarEntry je = e.nextElement();\nString name = je.getName();\nprocessFileName(name, map, noArgsProvided);\n}\njf.close();\n} else {\nif (noArgsProvided) {\nSystem.out.println(\"Usage: mvn -q exec:java  -Dexec.arguments=<exampleClass>,<exampleClass parameters>\");\nSystem.out.println(\"\\nClasses found in the jar:\");\n}\nFile examples = new File(sourceFile, \"examples\");\nif (examples.exists()) {\nscanForClasses(sourceFile.length(), examples, map, noArgsProvided);\n}\n}\n} else {\nif (noArgsProvided) {\nSystem.out.println(\"Usage: java -jar commons-net-examples-m.n.jar <exampleClass> <exampleClass parameters>\");\n}\n}\nif (noArgsProvided) {\nreturn;\n}\nString shortName = args[0];\nString fullName = map.get(shortName);\nif (fullName == null) {\nfullName = shortName;\n}\nfullName = fullName.replace('/', '.');\ntry {\nClass<?> clazz = Class.forName(fullName);\nMethod m = clazz.getDeclaredMethod(\"main\", new Class[]{args.getClass()});\nString[] args2 = new String[args.length-1];\nSystem.arraycopy(args, 1, args2, 0, args2.length);\ntry {\nm.invoke(null, (Object)args2);\n} catch (InvocationTargetException ite) {\nThrowable cause = ite.getCause();\nif (cause != null) {\nthrow cause;\n} else {\nthrow ite;\n}\n}\n} catch (ClassNotFoundException e) {\nSystem.out.println(e);\n}\n}\n",
    "warning_method": "public static void main(String[] args) throws Throwable {\nCodeSource codeSource = Main.class.getProtectionDomain().getCodeSource();\nMap<String, String> map = new HashMap<String, String>();\nfinal boolean noArgsProvided = args.length == 0;\nif (codeSource != null) {\nfinal String sourceFile = codeSource.getLocation().getFile();\nif (sourceFile.endsWith(\".jar\")) {\nif (noArgsProvided) {\nSystem.out.println(\"Usage: java -jar commons-net-examples-m.n.jar <exampleClass> <exampleClass parameters>\");\nSystem.out.println(\"\\nClasses found in the jar:\");\n}\nJarFile jf = new JarFile(sourceFile);\nEnumeration<JarEntry> e = jf.entries();\nwhile (e.hasMoreElements()) {\nJarEntry je = e.nextElement();\nString name = je.getName();\nprocessFileName(name, map, noArgsProvided);\n}\njf.close();\n} else {\nif (noArgsProvided) {\nSystem.out.println(\"Usage: mvn -q exec:java  -Dexec.arguments=<exampleClass>,<exampleClass parameters>\");\nSystem.out.println(\"\\nClasses found in the jar:\");\n}\nFile examples = new File(sourceFile, \"examples\");\nif (examples.exists()) {\nscanForClasses(sourceFile.length(), examples, map, noArgsProvided);\n}\n}\n} else {\nif (noArgsProvided) {\nSystem.out.println(\"Usage: java -jar commons-net-examples-m.n.jar <exampleClass> <exampleClass parameters>\");\n}\n}\nif (noArgsProvided) {\nreturn;\n}\nString shortName = args[0];\nString fullName = map.get(shortName);\nif (fullName == null) {\nfullName = shortName;\n}\nfullName = fullName.replace('/', '.');\ntry {\nClass<?> clazz = Class.forName(fullName);\nMethod m = clazz.getDeclaredMethod(\"main\", new Class[] { args.getClass() });\nString[] args2 = new String[args.length - 1];\nSystem.arraycopy(args, 1, args2, 0, args2.length);\ntry {\nm.invoke(null, (Object) args2);\n} catch (InvocationTargetException ite) {\nThrowable cause = ite.getCause();\nif (cause != null) {\nthrow cause;\n} else {\nthrow ite;\n}\n}\n} catch (ClassNotFoundException e) {\nSystem.out.println(e);\n}\n}"
}