{
    "category": "Multithreaded correctness",
    "vtype": "NO_NOTIFY_NOT_NOTIFYALL",
    "priority": "3",
    "rank": "17",
    "project": "net",
    "warning_line": "__queue.notify();\n",
    "warning_method": "private boolean __processChar(int ch) throws InterruptedException {\nboolean bufferWasEmpty;\nsynchronized (__queue) {\nbufferWasEmpty = (__bytesAvailable == 0);\nwhile (__bytesAvailable >= __queue.length - 1) {\nif (__threaded) {\n__queue.notify();\ntry {\n__queue.wait();\n} catch (InterruptedException e) {\nthrow e;\n}\n} else {\nthrow new IllegalStateException(\"Queue is full! Cannot process another character.\");\n}\n}\nif (__readIsWaiting && __threaded) {\n__queue.notify();\n}\n__queue[__queueTail] = ch;\n++__bytesAvailable;\nif (++__queueTail >= __queue.length) {\n__queueTail = 0;\n}\n}\nreturn bufferWasEmpty;\n}"
}