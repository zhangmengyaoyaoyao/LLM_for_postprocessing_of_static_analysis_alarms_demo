{
    "category": "DODGY_CODE",
    "vtype": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
    "priority": "3",
    "rank": "20",
    "project": "net",
    "warning_line": "(SSLSocket) ssf.createSocket(_socket_, host, port, false);\n",
    "warning_method": "protected void sslNegotiation() throws IOException {\nplainSocket = _socket_;\ninitSslContext();\nSSLSocketFactory ssf = context.getSocketFactory();\nString host = (_hostname_ != null) ? _hostname_ : getRemoteAddress().getHostAddress();\nint port = _socket_.getPort();\nSSLSocket socket = (SSLSocket) ssf.createSocket(_socket_, host, port, false);\nsocket.setEnableSessionCreation(isCreation);\nsocket.setUseClientMode(isClientMode);\nif (isClientMode) {\nif (tlsEndpointChecking) {\nSSLSocketUtils.enableEndpointNameVerification(socket);\n}\n} else {\nsocket.setNeedClientAuth(isNeedClientAuth);\nsocket.setWantClientAuth(isWantClientAuth);\n}\nif (protocols != null) {\nsocket.setEnabledProtocols(protocols);\n}\nif (suites != null) {\nsocket.setEnabledCipherSuites(suites);\n}\nsocket.startHandshake();\n_socket_ = socket;\n_controlInput_ = new BufferedReader(new InputStreamReader(socket.getInputStream(), getControlEncoding()));\n_controlOutput_ = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), getControlEncoding()));\nif (isClientMode) {\nif (hostnameVerifier != null && !hostnameVerifier.verify(host, socket.getSession())) {\nthrow new SSLHandshakeException(\"Hostname doesn't match certificate\");\n}\n}\n}"
}