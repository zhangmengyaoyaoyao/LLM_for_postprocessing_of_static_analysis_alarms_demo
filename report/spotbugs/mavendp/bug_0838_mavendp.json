{
    "category": "DODGY_CODE",
    "vtype": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
    "priority": "2",
    "rank": "18",
    "project": "mavendp",
    "warning_line": "if ( artifact != null )\n",
    "warning_method": "private ProjectBuildingRequest makeBuildingRequest() throws MojoExecutionException, MojoFailureException {\nif (artifact == null) {\nthrow new MojoFailureException(\"You must specify an artifact, \" + \"e.g. -Dartifact=org.apache.maven.plugins:maven-downloader-plugin:1.0\");\n}\nif (artifact != null) {\nString[] tokens = artifact.split(\":\");\nif (tokens.length < 3 || tokens.length > 5) {\nthrow new MojoFailureException(\"Invalid artifact, you must specify \" + \"groupId:artifactId:version[:packaging[:classifier]] \" + artifact);\n}\ncoordinate.setGroupId(tokens[0]);\ncoordinate.setArtifactId(tokens[1]);\ncoordinate.setVersion(tokens[2]);\nif (tokens.length >= 4) {\ncoordinate.setType(tokens[3]);\n}\nif (tokens.length == 5) {\ncoordinate.setClassifier(tokens[4]);\n}\n}\nArtifactRepositoryPolicy always = new ArtifactRepositoryPolicy(true, ArtifactRepositoryPolicy.UPDATE_POLICY_ALWAYS, ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN);\nList<ArtifactRepository> repoList = new ArrayList<>();\nif (pomRemoteRepositories != null) {\nrepoList.addAll(pomRemoteRepositories);\n}\nif (remoteRepositories != null) {\n// Use the same format as in the deploy plugin id::layout::url\nString[] repos = remoteRepositories.split(\",\");\nfor (String repo : repos) {\nrepoList.add(parseRepository(repo, always));\n}\n}\nProjectBuildingRequest buildingRequest = new DefaultProjectBuildingRequest(session.getProjectBuildingRequest());\nSettings settings = session.getSettings();\nrepositorySystem.injectMirror(repoList, settings.getMirrors());\nrepositorySystem.injectProxy(repoList, settings.getProxies());\nrepositorySystem.injectAuthentication(repoList, settings.getServers());\nbuildingRequest.setRemoteRepositories(repoList);\nreturn buildingRequest;\n}"
}