{
    "Project": "tiff",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Code_line": "\t\t\tif (!TIFFWriteRationalArray(tif, dir, fp))",
    "Code_function": "TIFFWriteNormalTag(TIFF* tif, TIFFDirEntry* dir, const TIFFFieldInfo* fip)\n{\n\tuint16 wc = (uint16) fip->field_writecount;\n\tuint32 wc2;\n\n\tdir->tdir_tag = (uint16) fip->field_tag;\n\tdir->tdir_type = (uint16) fip->field_type;\n\tdir->tdir_count = wc;\n\n\tswitch (fip->field_type) {\n\tcase TIFF_SHORT:\n\tcase TIFF_SSHORT:\n\t\tif (fip->field_passcount) {\n\t\t\tuint16* wp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &wp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &wp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteShortArray(tif, dir, wp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tuint16 sv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &sv);\n\t\t\t\tdir->tdir_offset =\n\t\t\t\t\tTIFFInsertData(tif, dir->tdir_type, sv);\n\t\t\t} else {\n\t\t\t\tuint16* wp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wp);\n\t\t\t\tif (!TIFFWriteShortArray(tif, dir, wp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_LONG:\n\tcase TIFF_SLONG:\n\tcase TIFF_IFD:\n\t\tif (fip->field_passcount) {\n\t\t\tuint32* lp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &lp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &lp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteLongArray(tif, dir, lp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\t/* XXX handle LONG->SHORT conversion */\n\t\t\t\tTIFFGetField(tif, fip->field_tag,\n\t\t\t\t\t     &dir->tdir_offset);\n\t\t\t} else {\n\t\t\t\tuint32* lp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &lp);\n\t\t\t\tif (!TIFFWriteLongArray(tif, dir, lp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_RATIONAL:\n\tcase TIFF_SRATIONAL:\n\t\tif (fip->field_passcount) {\n\t\t\tfloat* fp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &fp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &fp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteRationalArray(tif, dir, fp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tfloat fv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &fv);\n\t\t\t\tif (!TIFFWriteRationalArray(tif, dir, &fv))\n\t\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tfloat* fp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &fp);\n\t\t\t\tif (!TIFFWriteRationalArray(tif, dir, fp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_FLOAT:\n\t\tif (fip->field_passcount) {\n\t\t\tfloat* fp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &fp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &fp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteFloatArray(tif, dir, fp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tfloat fv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &fv);\n\t\t\t\tif (!TIFFWriteFloatArray(tif, dir, &fv))\n\t\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tfloat* fp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &fp);\n\t\t\t\tif (!TIFFWriteFloatArray(tif, dir, fp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_DOUBLE:\n\t\tif (fip->field_passcount) {\n\t\t\tdouble* dp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &dp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &dp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteDoubleArray(tif, dir, dp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tdouble dv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &dv);\n\t\t\t\tif (!TIFFWriteDoubleArray(tif, dir, &dv))\n\t\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tdouble* dp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &dp);\n\t\t\t\tif (!TIFFWriteDoubleArray(tif, dir, dp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_ASCII:\n\t\t{\n                    char* cp;\n                    if (fip->field_passcount)\n                    {\n                        if( wc == (uint16) TIFF_VARIABLE2 )\n                            TIFFGetField(tif, fip->field_tag, &wc2, &cp);\n                        else\n                            TIFFGetField(tif, fip->field_tag, &wc, &cp);\n                    }\n                    else\n                        TIFFGetField(tif, fip->field_tag, &cp);\n\n                    dir->tdir_count = (uint32) (strlen(cp) + 1);\n                    if (!TIFFWriteByteArray(tif, dir, cp))\n                        return (0);\n\t\t}\n\t\tbreak;\n\n        case TIFF_BYTE:\n        case TIFF_SBYTE:\n\t\tif (fip->field_passcount) {\n\t\t\tchar* cp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &cp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &cp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteByteArray(tif, dir, cp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tchar cv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &cv);\n\t\t\t\tif (!TIFFWriteByteArray(tif, dir, &cv))\n\t\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tchar* cp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &cp);\n\t\t\t\tif (!TIFFWriteByteArray(tif, dir, cp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n                break;\n\n\tcase TIFF_UNDEFINED:\n\t\t{ char* cp;\n\t\t  if (wc == (unsigned short) TIFF_VARIABLE) {\n\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &cp);\n\t\t\tdir->tdir_count = wc;\n\t\t  } else if (wc == (unsigned short) TIFF_VARIABLE2) {\n\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &cp);\n\t\t\tdir->tdir_count = wc2;\n\t\t  } else\n\t\t\tTIFFGetField(tif, fip->field_tag, &cp);\n\t\t  if (!TIFFWriteByteArray(tif, dir, cp))\n\t\t\treturn (0);\n\t\t}\n\t\tbreak;\n\n        case TIFF_NOTYPE:\n                break;\n\t}\n\treturn (1);\n}"
}