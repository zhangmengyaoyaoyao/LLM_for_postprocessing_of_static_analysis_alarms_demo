{
    "Project": "bash",
    "Tool": "Infer",
    "category": "NULL_DEREFERENCE",
    "file": "bashline.c",
    "message": "pointer `globtext` last assigned on line 3578 could be null and is dereferenced by call to `strcpy()` at line 3579, column 4.",
    "warning_function_name": "bash_directory_completion_hook",
    "warning_line": "strcpy (globtext, ttext);",
    "warning_context": "}\n\nstatic int\nbash_complete_variable (ignore, ignore2)\n     int ignore, ignore2;\n{\n  return bash_complete_variable_internal (rl_completion_mode (bash_complete_variable));\n}\n\nstatic int\nbash_possible_variable_completions (ignore, ignore2)\n     int ignore, ignore2;\n{\n  return bash_complete_variable_internal ('?');\n}\n\nstatic int\nbash_complete_command (ignore, ignore2)\n     int ignore, ignore2;\n{\n  return bash_complete_command_internal (rl_completion_mode (bash_complete_command));\n}\n\nstatic int\nbash_possible_command_completions (ignore, ignore2)\n     int ignore, ignore2;\n{\n  return bash_complete_command_internal ('?');\n}\n\nstatic int\nbash_complete_hostname_internal (what_to_do)\n     int what_to_do;\n{\n  return bash_specific_completion (what_to_do, hostname_completion_function);\n}\n\nstatic int\nbash_complete_variable_internal (what_to_do)\n     int what_to_do;\n{\n  return bash_specific_completion (what_to_do, variable_completion_function);\n}\n\nstatic int\nbash_complete_command_internal (what_to_do)\n     int what_to_do;\n{\n  return bash_specific_completion (what_to_do, command_word_completion_function);\n}\n\nstatic char *globtext;\nstatic char *globorig;\n\nstatic char *\nglob_complete_word (text, state)\n     const char *text;\n     int state;\n{\n  static char **matches = (char **)NULL;\n  static int ind;\n  int glen;\n  char *ret, *ttext;\n\n  if (state == 0)\n    {\n      rl_filename_completion_desired = 1;\n      FREE (matches);\n      if (globorig != globtext)\n\tFREE (globorig);\n      FREE (globtext);\n\n      ttext = bash_tilde_expand (text, 0);\n\n      if (rl_explicit_arg)\n\t{\n\t  globorig = savestring (ttext);\n\t  glen = strlen (ttext);\n\t  globtext = (char *)xmalloc (glen + 2);\n\t  strcpy (globtext, ttext);\n\t  globtext[glen] = '*';\n\t  globtext[glen+1] = '\\0';\n\t}\n      else\n        globtext = globorig = savestring (ttext);\n\n      if (ttext != text)\n\tfree (ttext);\n\n      matches = shell_glob_filename (globtext);\n      if (GLOB_FAILED (matches))\n\tmatches = (char **)NULL;\n      ind = 0;\n    }\n\n  ret = matches ? matches[ind] : (char *)NULL;\n  ind++;\n  return ret;\n}\n\nstatic int\n"
}