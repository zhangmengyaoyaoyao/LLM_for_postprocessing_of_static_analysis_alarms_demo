{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L1",
    "Message": "Offset: [1+max(489, `info->vars.tail->c`), +oo] Size: 490 by call to `ieee_real_write_byte`.",
    "Code_line": "      || ! ieee_write_byte (info, 11)",
    "Code_function": "ieee_add_bb11 (struct ieee_handle *info, asection *sec, bfd_vma low,\n\t       bfd_vma high)\n{\n  int kind;\n\n  if (! ieee_buffer_emptyp (&info->vars))\n    {\n      if (! ieee_change_buffer (info, &info->vars))\n\treturn FALSE;\n    }\n  else\n    {\n      const char *filename, *modname;\n#ifdef HAVE_DOS_BASED_FILE_SYSTEM\n      const char *backslash;\n#endif\n      char *c, *s;\n\n      /* Start the enclosing BB10 block.  */\n      filename = bfd_get_filename (info->abfd);\n      modname = strrchr (filename, '/');\n#ifdef HAVE_DOS_BASED_FILE_SYSTEM\n      backslash = strrchr (filename, '\\\\');\n      if (modname == NULL || (backslash != NULL && backslash > modname))\n\tmodname = backslash;\n#endif\n\n      if (modname != NULL)\n\t++modname;\n#ifdef HAVE_DOS_BASED_FILE_SYSTEM\n      else if (filename[0] && filename[1] == ':')\n\tmodname = filename + 2;\n#endif\n      else\n\tmodname = filename;\n\n      c = xstrdup (modname);\n      s = strrchr (c, '.');\n      if (s != NULL)\n\t*s = '\\0';\n\n      if (! ieee_change_buffer (info, &info->vars)\n\t  || ! ieee_write_byte (info, (int) ieee_bb_record_enum)\n\t  || ! ieee_write_byte (info, 10)\n\t  || ! ieee_write_number (info, 0)\n\t  || ! ieee_write_id (info, c)\n\t  || ! ieee_write_id (info, \"\")\n\t  || ! ieee_write_number (info, 0)\n\t  || ! ieee_write_id (info, \"GNU objcopy\"))\n\t{\n\t  free (c);\n\t  return FALSE;\n\t}\n\n      free (c);\n    }\n\n  if ((sec->flags & SEC_CODE) != 0)\n    kind = 1;\n  else if ((sec->flags & SEC_READONLY) != 0)\n    kind = 3;\n  else\n    kind = 2;\n\n  if (! ieee_write_byte (info, (int) ieee_bb_record_enum)\n      || ! ieee_write_byte (info, 11)\n      || ! ieee_write_number (info, 0)\n      || ! ieee_write_id (info, \"\")\n      || ! ieee_write_number (info, kind)\n      || ! ieee_write_number (info, sec->index + IEEE_SECTION_NUMBER_BASE)\n      || ! ieee_write_number (info, low)\n      || ! ieee_write_byte (info, (int) ieee_be_record_enum)\n      || ! ieee_write_number (info, high - low))\n    return FALSE;\n\n  return TRUE;\n}"
}