{
    "Project": "bash",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L2",
    "file": "pcomplete.c",
    "message": "Offset: [2, 31] Size: 30 by call to `sh_xfree`.",
    "warning_function_name": "gen_compspec_completions",
    "warning_line": "FREE (ret);",
    "warning_context": "      if (tmatches)\n\t{\n#ifdef DEBUG\n\t  if (progcomp_debug)\n\t    {\n\t      debug_printf (\"gen_shell_function_matches (%p, %s, %s, %p, %d, %d) -->\", cs, cmd, word, lwords, nw, cw);\n\t      strlist_print (tmatches, \"\\t\");\n\t      rl_on_new_line ();\n\t    }\n#endif\n\t  ret = strlist_append (ret, tmatches);\n\t  strlist_dispose (tmatches);\n\t}\n    }\n\n  if (cs->command)\n    {\n      tmatches = gen_command_matches (cs, cmd, word, line, rl_point - start, lwords, nw, cw);\n      if (tmatches)\n\t{\n#ifdef DEBUG\n\t  if (progcomp_debug)\n\t    {\n\t      debug_printf (\"gen_command_matches (%p, %s, %s, %p, %d, %d) -->\", cs, cmd, word, lwords, nw, cw);\n\t      strlist_print (tmatches, \"\\t\");\n\t      rl_on_new_line ();\n\t    }\n#endif\n\t  ret = strlist_append (ret, tmatches);\n\t  strlist_dispose (tmatches);\n\t}\n    }\n\n  if (cs->command || cs->funcname)\n    {\n      if (lwords)\n\tdispose_words (lwords);\n      FREE (line);\n    }\n\n  if (foundp)\n    *foundp = found;\n\n  if (found == 0 || (found & PCOMP_RETRYFAIL))\n    {\n      strlist_dispose (ret);\n      return NULL;\n    }\n\n  if (cs->filterpat)\n    {\n      tmatches = filter_stringlist (ret, cs->filterpat, word);\n#ifdef DEBUG\n      if (progcomp_debug)\n\t{\n\t  debug_printf (\"filter_stringlist (%p, %s, %s) -->\", ret, cs->filterpat, word);\n\t  strlist_print (tmatches, \"\\t\");\n\t  rl_on_new_line ();\n\t}\n#endif\n      if (ret && ret != tmatches)\n\t{\n\t  FREE (ret->list);\n\t  free (ret);\n\t}\n      ret = tmatches;\n    }\n\n  if (cs->prefix || cs->suffix)\n    ret = strlist_prefix_suffix (ret, cs->prefix, cs->suffix);\n\n  /* If no matches have been generated and the user has specified that\n      directory completion should be done as a default, call\n      gen_action_completions again to generate a list of matching directory\n      names. */\n  if ((ret == 0 || ret->list_len == 0) && (cs->options & COPT_DIRNAMES))\n    {\n      tcs = compspec_create ();\n      tcs->actions = CA_DIRECTORY;\n      FREE (ret);\n      ret = gen_action_completions (tcs, word);\n      compspec_dispose (tcs);\n    }\n  else if (cs->options & COPT_PLUSDIRS)\n    {\n      tcs = compspec_create ();\n      tcs->actions = CA_DIRECTORY;\n      tmatches = gen_action_completions (tcs, word);\n      ret = strlist_append (ret, tmatches);\n      strlist_dispose (tmatches);\n      compspec_dispose (tcs);\n    }\n\n  return (ret);\n}\n\nvoid\npcomp_set_readline_variables (flags, nval)\n     int flags, nval;\n{\n  /* If the user specified that the compspec returns filenames, make\n"
}