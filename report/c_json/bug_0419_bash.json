{
    "project": "bash",
    "tool": "CSA",
    "category": "core.NullDereference",
    "file": "findcmd.c",
    "message": "Array access (from variable 'match_list') results in a null pointer dereference",
    "warning_function_name": "user_command_matches",
    "warning_line": "match = match_list[match_index];",
    "warning_context": "char *\nuser_command_matches (name, flags, state)\n     const char *name;\n     int flags, state;\n{\n  register int i;\n  int  path_index, name_len;\n  char *path_list, *path_element, *match;\n  struct stat dotinfo;\n  static char **match_list = NULL;\n  static int match_list_size = 0;\n  static int match_index = 0;\n\n  if (state == 0)\n    {\n      /* Create the list of matches. */\n      if (match_list == 0)\n\t{\n\t  match_list_size = 5;\n\t  match_list = strvec_create (match_list_size);\n\t}\n\n      /* Clear out the old match list. */\n      for (i = 0; i < match_list_size; i++)\n\tmatch_list[i] = 0;\n\n      /* We haven't found any files yet. */\n      match_index = 0;\n\n      if (absolute_program (name))\n\t{\n\t  match_list[0] = find_absolute_program (name, flags);\n\t  match_list[1] = (char *)NULL;\n\t  path_list = (char *)NULL;\n\t}\n      else\n\t{\n\t  name_len = strlen (name);\n\t  file_to_lose_on = (char *)NULL;\n\t  dot_found_in_search = 0;\n\t  if (stat (\".\", &dotinfo) < 0)\n\t    dotinfo.st_dev = dotinfo.st_ino = 0;\t/* so same_file won't match */\n\t  path_list = get_string_value (\"PATH\");\n      \t  path_index = 0;\n\t}\n\n      while (path_list && path_list[path_index])\n\t{\n\t  path_element = get_next_path_element (path_list, &path_index);\n\n\t  if (path_element == 0)\n\t    break;\n\n\t  match = find_in_path_element (name, path_element, flags, name_len, &dotinfo);\n\n\t  free (path_element);\n\n\t  if (match == 0)\n\t    continue;\n\n\t  if (match_index + 1 == match_list_size)\n\t    {\n\t      match_list_size += 10;\n\t      match_list = strvec_resize (match_list, (match_list_size + 1));\n\t    }\n\n\t  match_list[match_index++] = match;\n\t  match_list[match_index] = (char *)NULL;\n\t  FREE (file_to_lose_on);\n\t  file_to_lose_on = (char *)NULL;\n\t}\n\n      /* We haven't returned any strings yet. */\n      match_index = 0;\n    }\n\n  match = match_list[match_index];\n\n  if (match)\n    match_index++;\n\n  return (match);\n}\n"
}