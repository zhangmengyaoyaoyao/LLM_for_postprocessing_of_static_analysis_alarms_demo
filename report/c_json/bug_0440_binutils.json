{
    "project": "binutils",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L2",
    "file": "bfd/elflink.c",
    "message": "Offset: [21, 22] (⇐ [0, 1] + 21) Size: 22 by call to `_bfd_elf_define_linkage_sym`.",
    "warning_function_name": "_bfd_elf_create_got_section",
    "warning_line": "h = _bfd_elf_define_linkage_sym (abfd, info, s,",
    "warning_context": "bfd_boolean\n_bfd_elf_create_got_section (bfd *abfd, struct bfd_link_info *info)\n{\n  flagword flags;\n  asection *s;\n  struct elf_link_hash_entry *h;\n  const struct elf_backend_data *bed = get_elf_backend_data (abfd);\n  struct elf_link_hash_table *htab = elf_hash_table (info);\n\n  /* This function may be called more than once.  */\n  s = bfd_get_linker_section (abfd, \".got\");\n  if (s != NULL)\n    return TRUE;\n\n  flags = bed->dynamic_sec_flags;\n\n  s = bfd_make_section_anyway_with_flags (abfd,\n\t\t\t\t\t  (bed->rela_plts_and_copies_p\n\t\t\t\t\t   ? \".rela.got\" : \".rel.got\"),\n\t\t\t\t\t  (bed->dynamic_sec_flags\n\t\t\t\t\t   | SEC_READONLY));\n  if (s == NULL\n      || ! bfd_set_section_alignment (abfd, s, bed->s->log_file_align))\n    return FALSE;\n  htab->srelgot = s;\n\n  s = bfd_make_section_anyway_with_flags (abfd, \".got\", flags);\n  if (s == NULL\n      || !bfd_set_section_alignment (abfd, s, bed->s->log_file_align))\n    return FALSE;\n  htab->sgot = s;\n\n  if (bed->want_got_plt)\n    {\n      s = bfd_make_section_anyway_with_flags (abfd, \".got.plt\", flags);\n      if (s == NULL\n\t  || !bfd_set_section_alignment (abfd, s,\n\t\t\t\t\t bed->s->log_file_align))\n\treturn FALSE;\n      htab->sgotplt = s;\n    }\n\n  /* The first bit of the global offset table is the header.  */\n  s->size += bed->got_header_size;\n\n  if (bed->want_got_sym)\n    {\n      /* Define the symbol _GLOBAL_OFFSET_TABLE_ at the start of the .got\n\t (or .got.plt) section.  We don't do this in the linker script\n\t because we don't want to define the symbol if we are not creating\n\t a global offset table.  */\n      h = _bfd_elf_define_linkage_sym (abfd, info, s,\n\t\t\t\t       \"_GLOBAL_OFFSET_TABLE_\");\n      elf_hash_table (info)->hgot = h;\n      if (h == NULL)\n\treturn FALSE;\n    }\n\n  return TRUE;\n}\n"
}