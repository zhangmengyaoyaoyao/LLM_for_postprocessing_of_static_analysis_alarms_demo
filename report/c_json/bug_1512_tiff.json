{
    "project": "tiff",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "libtiff/tif_dirwrite.c",
    "message": "Offset: [1, +oo] (⇐ [0, +oo] + 1) Size: [0, +oo] by call to `TIFFWriteRationalArray`.",
    "warning_function_name": "TIFFWriteNormalTag",
    "warning_line": "if (!TIFFWriteRationalArray(tif, dir, fp))",
    "warning_context": "static int\nTIFFWriteNormalTag(TIFF* tif, TIFFDirEntry* dir, const TIFFFieldInfo* fip)\n{\n\tuint16 wc = (uint16) fip->field_writecount;\n\tuint32 wc2;\n\n\tdir->tdir_tag = (uint16) fip->field_tag;\n\tdir->tdir_type = (uint16) fip->field_type;\n\tdir->tdir_count = wc;\n\t\n\tswitch (fip->field_type) {\n\tcase TIFF_SHORT:\n\tcase TIFF_SSHORT:\n\t\tif (fip->field_passcount) {\n\t\t\tuint16* wp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &wp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &wp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteShortArray(tif, dir, wp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tuint16 sv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &sv);\n\t\t\t\tdir->tdir_offset =\n\t\t\t\t\tTIFFInsertData(tif, dir->tdir_type, sv);\n\t\t\t} else {\n\t\t\t\tuint16* wp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wp);\n\t\t\t\tif (!TIFFWriteShortArray(tif, dir, wp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_LONG:\n\tcase TIFF_SLONG:\n\tcase TIFF_IFD:\n\t\tif (fip->field_passcount) {\n\t\t\tuint32* lp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &lp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &lp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteLongArray(tif, dir, lp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\t/* XXX handle LONG->SHORT conversion */\n\t\t\t\tTIFFGetField(tif, fip->field_tag,\n\t\t\t\t\t     &dir->tdir_offset);\n\t\t\t} else {\n\t\t\t\tuint32* lp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &lp);\n\t\t\t\tif (!TIFFWriteLongArray(tif, dir, lp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_RATIONAL:\n\tcase TIFF_SRATIONAL:\n\t\tif (fip->field_passcount) {\n\t\t\tfloat* fp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &fp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &fp);\n\t\t\t\tdir->tdir_count = wc;\n\t\t\t}\n\t\t\tif (!TIFFWriteRationalArray(tif, dir, fp))\n\t\t\t\treturn 0;\n\t\t} else {\n\t\t\tif (wc == 1) {\n\t\t\t\tfloat fv;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &fv);\n\t\t\t\tif (!TIFFWriteRationalArray(tif, dir, &fv))\n\t\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tfloat* fp;\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &fp);\n\t\t\t\tif (!TIFFWriteRationalArray(tif, dir, fp))\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase TIFF_FLOAT:\n\t\tif (fip->field_passcount) {\n\t\t\tfloat* fp;\n\t\t\tif (wc == (uint16) TIFF_VARIABLE2) {\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc2, &fp);\n\t\t\t\tdir->tdir_count = wc2;\n\t\t\t} else {\t/* Assume TIFF_VARIABLE */\n\t\t\t\tTIFFGetField(tif, fip->field_tag, &wc, &fp);\n\t\t\t\tdir->tdir_count = wc;\n"
}