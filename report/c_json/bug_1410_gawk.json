{
    "project": "gawk",
    "tool": "CSA",
    "category": "core.NullDereference",
    "file": "debug.c",
    "message": "Access to field 'type' results in a dereference of a null pointer (loaded from variable 't2')",
    "warning_function_name": "watchpoint_triggered",
    "warning_line": "if (t2->type == Node_val)",
    "warning_context": "static int\nwatchpoint_triggered(struct list_item *w)\n{\n\tNODE *symbol;\n\tNODE *t1, *t2;\n\n\tsymbol = w->symbol;\n\tif (IS_PARAM(w) && (w->fcall_count != (fcall_count - cur_frame)))\n\t\treturn 0; /* parameter with same name in a different function */\n\tif (! condition_triggered(&w->cndn))\n\t\treturn 0;\n\n\tt1 = w->cur_value;\n\tt2 = (NODE *) 0;\n\tif (IS_SUBSCRIPT(w))\n\t\t(void) find_subscript(w, &t2);\n\telse if (IS_FIELD(w)) {\n\t\tlong field_num;\n\t\tfield_num = get_number_si(w->symbol);\n\t\tt2 = *get_field(field_num, NULL);\n\t} else {\n\t\tswitch (symbol->type) {\n\t\tcase Node_var:\n\t\t\tt2 = symbol->var_value;\n\t\t\tbreak;\n\t\tcase Node_var_array:\n\t\t\tt2 = symbol;\n\t\t\tbreak;\n\t\tcase Node_var_new:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcant_happen();\n\t\t}\n\t}\n\n\tif (! cmp_val(w, t1, t2))\n\t\treturn 0;\n\n\t/* update old and current values */\n\n\tif ((w->flags & OLD_IS_ARRAY) == 0)\n\t\tunref(w->old_value);\n\tw->flags &= ~OLD_IS_ARRAY;\n\tif (WATCHING_ARRAY(w)) {\t/* 7, 8, 9 */\n\t\tw->old_size = w->cur_size;\n\t\tw->flags |= OLD_IS_ARRAY;\n\t\tif (! t2) {\n\t\t\tw->flags &= ~CUR_IS_ARRAY;\n\t\t\tw->cur_value = 0;\n\t\t} else if (t2->type == Node_val) {\n\t\t\tw->flags &= ~CUR_IS_ARRAY;\n\t\t\tw->cur_value = dupnode(t2);\n\t\t} else\n\t\t\tw->cur_size = (t2->type == Node_var_array) ? assoc_length(t2) : 0;\n\t} else if (! t1) { /* 1, 2 */\n\t\tw->old_value = 0;\n\t\t/* new != NULL */\n\t\tif (t2->type == Node_val)\n\t\t\tw->cur_value = dupnode(t2);\n\t\telse {\n\t\t\tw->flags |= CUR_IS_ARRAY;\n\t\t\tw->cur_size = (t2->type == Node_var_array) ? assoc_length(t2) : 0;\n\t\t}\n\t} else /* if (t1->type == Node_val) */ {\t/* 4, 5, 6 */\n\t\tw->old_value = w->cur_value;\n\t\tif (! t2)\n\t\t\tw->cur_value = 0;\n\t\telse if (t2->type == Node_var_array) {\n\t\t\tw->flags |= CUR_IS_ARRAY;\n\t\t\tw->cur_size = assoc_length(t2);\n\t\t} else\n\t\t\tw->cur_value = dupnode(t2);\n\t}\n\n\treturn w->number;\n}\n"
}