{
    "project": "binutils",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "binutils/stabs.c",
    "message": "Offset: [-1, +oo] (⇐ [0, +oo] + -1) Size: [1, +oo].",
    "warning_function_name": "stab_demangle_template",
    "warning_line": "|| (from[1] == '>' && from > s3 && from[-1] == '>'))",
    "warning_context": "\t\t}\n\t    }\n\t  else if (boolp)\n\t    {\n\t      unsigned int val;\n\n\t      val = stab_demangle_count (pp);\n\t      if (val != 0 && val != 1)\n\t\t{\n\t\t  stab_bad_demangle (orig);\n\t\t  return FALSE;\n\t\t}\n\t    }\n\t  else if (realp)\n\t    {\n\t      if (**pp == 'm')\n\t\t++*pp;\n\t      while (ISDIGIT (**pp))\n\t\t++*pp;\n\t      if (**pp == '.')\n\t\t{\n\t\t  ++*pp;\n\t\t  while (ISDIGIT (**pp))\n\t\t    ++*pp;\n\t\t}\n\t      if (**pp == 'e')\n\t\t{\n\t\t  ++*pp;\n\t\t  while (ISDIGIT (**pp))\n\t\t    ++*pp;\n\t\t}\n\t    }\n\t  else if (pointerp)\n\t    {\n\t      unsigned int len;\n\n\t      len = stab_demangle_count (pp);\n\t      if (len == 0)\n\t\t{\n\t\t  stab_bad_demangle (orig);\n\t\t  return FALSE;\n\t\t}\n\t      *pp += len;\n\t    }\n\t}\n    }\n\n  /* We can translate this to a string fairly easily by invoking the\n     regular demangling routine.  */\n  if (pname != NULL)\n    {\n      char *s1, *s2, *s3, *s4 = NULL;\n      char *from, *to;\n\n      s1 = savestring (orig, *pp - orig);\n\n      s2 = concat (\"NoSuchStrinG__\", s1, (const char *) NULL);\n\n      free (s1);\n\n      s3 = cplus_demangle (s2, DMGL_ANSI);\n\n      free (s2);\n\n      if (s3 != NULL)\n\ts4 = strstr (s3, \"::NoSuchStrinG\");\n      if (s3 == NULL || s4 == NULL)\n\t{\n\t  stab_bad_demangle (orig);\n\t  if (s3 != NULL)\n\t    free (s3);\n\t  return FALSE;\n\t}\n\n      /* Eliminating all spaces, except those between > characters,\n         makes it more likely that the demangled name will match the\n         name which g++ used as the structure name.  */\n      for (from = to = s3; from != s4; ++from)\n\tif (*from != ' '\n\t    || (from[1] == '>' && from > s3 && from[-1] == '>'))\n\t  *to++ = *from;\n\n      *pname = savestring (s3, to - s3);\n\n      free (s3);\n    }\n\n  return TRUE;\n}\n\n/* Demangle a class name.  */\n\nstatic bfd_boolean\nstab_demangle_class (struct stab_demangle_info *minfo ATTRIBUTE_UNUSED,\n\t\t     const char **pp, const char **pstart)\n{\n  const char *orig;\n  unsigned int n;\n\n  orig = *pp;\n\n"
}