{
    "Project": "gawk",
    "Tool": "CSA",
    "category": "core.NullDereference",
    "file": "debug.c",
    "message": "Dereference of null pointer",
    "warning_function_name": "print_memory",
    "warning_line": "print_func(fp, \"%s\", func->fparms[m->param_cnt].param);",
    "warning_context": "static void \nprint_memory(NODE *m, NODE *func, Func_print print_func, FILE *fp)\n{\n\tswitch (m->type) {\n\tcase Node_val:\n\t\tif (m == Nnull_string)\n\t\t\tprint_func(fp, \"Nnull_string\");\n\t\telse if ((m->flags & NUMBER) != 0) {\n#ifdef HAVE_MPFR\n\t\t\tif ((m->flags & MPFN) != 0)\n\t\t\t\tprint_func(fp, \"%s\", mpg_fmt(\"%R*g\", ROUND_MODE, m->mpg_numbr));\n\t\t\telse if ((m->flags & MPZN) != 0)\n\t\t\t\tprint_func(fp, \"%s\", mpg_fmt(\"%Zd\", m->mpg_i));\n\t\t\telse\n#endif\n\t\t\t\tprint_func(fp, \"%g\", m->numbr);\n\t\t} else if ((m->flags & STRING) != 0)\n\t\t\tpp_string_fp(print_func, fp, m->stptr, m->stlen, '\"', false);\n\t\telse if ((m->flags & NUMCUR) != 0) {\n#ifdef HAVE_MPFR\n\t\t\tif ((m->flags & MPFN) != 0)\n\t\t\t\tprint_func(fp, \"%s\", mpg_fmt(\"%R*g\", ROUND_MODE, m->mpg_numbr));\n\t\t\telse if ((m->flags & MPZN) != 0)\n\t\t\t\tprint_func(fp, \"%s\", mpg_fmt(\"%Zd\", m->mpg_i));\n\t\t\telse\n#endif\n\t\t\t\tprint_func(fp, \"%g\", m->numbr);\n\t\t} else if ((m->flags & STRCUR) != 0)\n\t\t\tpp_string_fp(print_func, fp, m->stptr, m->stlen, '\"', false);\n\t\telse\n\t\t\tprint_func(fp, \"-?-\");\n\t\tprint_func(fp, \" [%s]\", flags2str(m->flags));\n\t\tbreak;\n\n\tcase Node_regex:\n\t\tpp_string_fp(print_func, fp, m->re_exp->stptr, m->re_exp->stlen, '/', false);\n\t\tbreak;\n\n\tcase Node_dynregex:\n\t\tbreak;\n\t\t\n\tcase Node_param_list:\n\t\tassert(func != NULL);\n\t\tprint_func(fp, \"%s\", func->fparms[m->param_cnt].param);\n\t\tbreak;\n\n\tcase Node_var:\n\tcase Node_var_new:\n\tcase Node_var_array:\n\t\tprint_func(fp, \"%s\", m->vname);\n\t\tbreak;\n\n\tdefault:\n\t\tprint_func(fp, \"?\");  /* can't happen */\n\t}\n}\n"
}