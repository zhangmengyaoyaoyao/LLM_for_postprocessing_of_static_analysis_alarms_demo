{
    "project": "gawk",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "gawkapi.c",
    "message": "Offset: [1, +oo] Size: [0, +oo] by call to `install_symbol`.",
    "warning_function_name": "api_sym_update",
    "warning_line": "node = install_symbol(estrdup((char *) name, strlen(name)),",
    "warning_context": "static awk_bool_t\napi_sym_update(awk_ext_id_t id,\n\t\tconst char *name,\n\t\tawk_value_t *value)\n{\n\tNODE *node;\n\tNODE *array_node;\n\n\tif (   name == NULL\n\t    || *name == '\\0'\n\t    || value == NULL)\n\t\treturn awk_false;\n\n\tswitch (value->val_type) {\n\tcase AWK_NUMBER:\n\tcase AWK_STRING:\n\tcase AWK_UNDEFINED:\n\tcase AWK_ARRAY:\n\tcase AWK_SCALAR:\n\tcase AWK_VALUE_COOKIE:\n\t\tbreak;\n\n\tdefault:\n\t\t/* fatal(_(\"api_sym_update: invalid value for type of new value (%d)\"), value->val_type); */\n\t\treturn awk_false;\n\t}\n\n\tnode = lookup(name);\n\n\tif (node == NULL) {\n\t\t/* new value to be installed */\n\t\tif (value->val_type == AWK_ARRAY) {\n\t\t\tarray_node = awk_value_to_node(value);\n\t\t\tnode = install_symbol(estrdup((char *) name, strlen(name)),\n\t\t\t\t\tNode_var_array);\n\t\t\tarray_node->vname = node->vname;\n\t\t\t*node = *array_node;\n\t\t\tfreenode(array_node);\n\t\t\tvalue->array_cookie = node;\t/* pass new cookie back to extension */\n\t\t} else {\n\t\t\t/* regular variable */\n\t\t\tnode = install_symbol(estrdup((char *) name, strlen(name)),\n\t\t\t\t\tNode_var);\n\t\t\tnode->var_value = awk_value_to_node(value);\n\t\t}\n\n\t\treturn awk_true;\n\t}\n\n\t/*\n\t * If we get here, then it exists already.  Any valid type is\n\t * OK except for AWK_ARRAY.\n\t */\n\tif (   (node->flags & NO_EXT_SET) != 0\n\t    || is_off_limits_var(name)) {\t/* most built-in vars not allowed */\n\t\tnode->flags |= NO_EXT_SET;\n\t\treturn awk_false;\n\t}\n\n\tif (    value->val_type != AWK_ARRAY\n\t    && (node->type == Node_var || node->type == Node_var_new)) {\n\t\tunref(node->var_value);\n\t\tnode->var_value = awk_value_to_node(value);\n\t\tif (node->type == Node_var_new && value->val_type != AWK_UNDEFINED)\n\t\t\tnode->type = Node_var;\n\n\t\treturn awk_true;\n\t}\n\n\treturn awk_false;\n}\n"
}