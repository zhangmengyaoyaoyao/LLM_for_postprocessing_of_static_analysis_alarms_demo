{
    "Project": "bash",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_S2",
    "file": "lib/readline/display.c",
    "message": "Offset: [`rl_prompt->strlen` + 1, +oo] Size: [`rl_prompt->strlen` + 1, +oo] by call to `init_line_structures`.",
    "warning_function_name": "rl_on_new_line_with_prompt",
    "warning_line": "init_line_structures (prompt_size);",
    "warning_context": "int\nrl_on_new_line_with_prompt ()\n{\n  int prompt_size, i, l, real_screenwidth, newlines;\n  char *prompt_last_line, *lprompt;\n\n  /* Initialize visible_line and invisible_line to ensure that they can hold\n     the already-displayed prompt. */\n  prompt_size = strlen (rl_prompt) + 1;\n  init_line_structures (prompt_size);\n\n  /* Make sure the line structures hold the already-displayed prompt for\n     redisplay. */\n  lprompt = local_prompt ? local_prompt : rl_prompt;\n  strcpy (visible_line, lprompt);\n  strcpy (invisible_line, lprompt);\n\n  /* If the prompt contains newlines, take the last tail. */\n  prompt_last_line = strrchr (rl_prompt, '\\n');\n  if (!prompt_last_line)\n    prompt_last_line = rl_prompt;\n\n  l = strlen (prompt_last_line);\n  if (MB_CUR_MAX > 1 && rl_byte_oriented == 0)\n    _rl_last_c_pos = _rl_col_width (prompt_last_line, 0, l, 1);\t/* XXX */\n  else\n    _rl_last_c_pos = l;\n\n  /* Dissect prompt_last_line into screen lines. Note that here we have\n     to use the real screenwidth. Readline's notion of screenwidth might be\n     one less, see terminal.c. */\n  real_screenwidth = _rl_screenwidth + (_rl_term_autowrap ? 0 : 1);\n  _rl_last_v_pos = l / real_screenwidth;\n  /* If the prompt length is a multiple of real_screenwidth, we don't know\n     whether the cursor is at the end of the last line, or already at the\n     beginning of the next line. Output a newline just to be safe. */\n  if (l > 0 && (l % real_screenwidth) == 0)\n    _rl_output_some_chars (\"\\n\", 1);\n  last_lmargin = 0;\n\n  newlines = 0; i = 0;\n  while (i <= l)\n    {\n      _rl_vis_botlin = newlines;\n      vis_lbreaks[newlines++] = i;\n      i += real_screenwidth;\n    }\n  vis_lbreaks[newlines] = l;\n  visible_wrap_offset = 0;\n\n  rl_display_prompt = rl_prompt;\t/* XXX - make sure it's set */\n\n  return 0;\n}\n"
}