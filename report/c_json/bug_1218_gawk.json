{
    "project": "gawk",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "command.c",
    "message": "Offset: [1, +oo] Size: [0, +oo] by call to `concat_args`.",
    "warning_function_name": NaN,
    "warning_line": "static const yytype_uint16 yytoknum[] =",
    "warning_context": "       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,    55,     2,    56,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,\n       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,\n      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,\n      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,\n      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,\n      45,    46,    47,    48\n};\n\n#if YYDEBUG\n  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */\nstatic const yytype_uint16 yyrline[] =\n{\n       0,   106,   106,   108,   126,   127,   177,   184,   185,   186,\n     187,   188,   192,   193,   194,   195,   199,   200,   201,   202,\n     206,   207,   212,   216,   236,   243,   243,   250,   266,   280,\n     281,   282,   283,   284,   285,   291,   303,   304,   305,   305,\n     306,   306,   307,   308,   309,   310,   311,   311,   312,   313,\n     313,   314,   314,   315,   315,   316,   317,   318,   323,   328,\n     354,   364,   369,   381,   381,   389,   403,   416,   417,   423,\n     424,   428,   429,   430,   431,   437,   438,   439,   444,   455,\n     456,   461,   469,   486,   487,   488,   489,   490,   495,   496,\n     496,   497,   498,   498,   499,   504,   505,   510,   511,   516,\n     517,   520,   522,   526,   527,   542,   543,   548,   556,   557,\n     558,   559,   563,   564,   568,   569,   570,   575,   576,   578,\n     585,   586,   587,   588,   589,   590,   594,   607,   608,   609,\n     613,   614,   615,   616,   620,   622,   624,   628,   643,   647,\n     649,   654,   655,   664,   674,   676,   683,   696,   697,   703,\n     704,   709,   715,   724,   726,   728,   736\n};\n#endif\n\n#if YYDEBUG || YYERROR_VERBOSE || 0\n/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.\n   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */\nstatic const char *const yytname[] =\n{\n  \"$end\", \"error\", \"$undefined\", \"D_BACKTRACE\", \"D_BREAK\", \"D_CLEAR\",\n  \"D_CONTINUE\", \"D_DELETE\", \"D_DISABLE\", \"D_DOWN\", \"D_ENABLE\", \"D_FINISH\",\n  \"D_FRAME\", \"D_HELP\", \"D_IGNORE\", \"D_INFO\", \"D_LIST\", \"D_NEXT\", \"D_NEXTI\",\n  \"D_PRINT\", \"D_PRINTF\", \"D_QUIT\", \"D_RETURN\", \"D_RUN\", \"D_SET\", \"D_STEP\",\n  \"D_STEPI\", \"D_TBREAK\", \"D_UP\", \"D_UNTIL\", \"D_DISPLAY\", \"D_UNDISPLAY\",\n  \"D_WATCH\", \"D_UNWATCH\", \"D_DUMP\", \"D_TRACE\", \"D_INT\", \"D_STRING\",\n  \"D_NODE\", \"D_VARIABLE\", \"D_OPTION\", \"D_COMMANDS\", \"D_END\", \"D_SILENT\",\n  \"D_SOURCE\", \"D_SAVE\", \"D_EVAL\", \"D_CONDITION\", \"D_STATEMENT\", \"'='\",\n  \"','\", \"':'\", \"'@'\", \"'+'\", \"'-'\", \"'['\", \"']'\", \"'$'\", \"'\\\\n'\",\n  \"$accept\", \"input\", \"line\", \"control_cmd\", \"d_cmd\", \"frame_cmd\",\n  \"break_cmd\", \"set_want_nodeval\", \"eval_prologue\", \"statement_list\", \"@1\",\n  \"eval_cmd\", \"command\", \"$@2\", \"$@3\", \"$@4\", \"$@5\", \"$@6\", \"$@7\", \"$@8\",\n  \"condition_exp\", \"commands_arg\", \"opt_param_list\", \"param_list\",\n  \"opt_string_node\", \"string_node\", \"option_args\", \"func_name\", \"location\",\n  \"break_args\", \"$@9\", \"$@10\", \"opt_variable\", \"opt_string\", \"opt_node\",\n  \"help_args\", \"enable_args\", \"print_exp\", \"print_args\", \"printf_exp\",\n  \"printf_args\", \"list_args\", \"integer_range\", \"opt_integer_list\",\n  \"integer_list\", \"exp_list\", \"subscript\", \"subscript_list\", \"variable\",\n  \"node\", \"opt_plus_integer\", \"opt_integer\", \"plus_integer\", \"integer\",\n  \"nls\", YY_NULLPTR\n};\n#endif\n\n# ifdef YYPRINT\n/* YYTOKNUM[NUM] -- (External) token number corresponding to the\n   (internal) symbol number NUM (which must be that of a token).  */\nstatic const yytype_uint16 yytoknum[] =\n{\n       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,\n     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,\n     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,\n     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,\n     295,   296,   297,   298,   299,   300,   301,   302,   303,    61,\n      44,    58,    64,    43,    45,    91,    93,    36,    10\n};\n# endif\n\n#define YYPACT_NINF -151\n\n#define yypact_value_is_default(Yystate) \\\n  (!!((Yystate) == (-151)))\n\n#define YYTABLE_NINF -148\n\n#define yytable_value_is_error(Yytable_value) \\\n  0\n\n  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing\n"
}