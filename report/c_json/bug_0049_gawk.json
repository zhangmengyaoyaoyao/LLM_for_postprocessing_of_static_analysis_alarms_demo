{
    "Project": "gawk",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Code_line": "\ttmp = make_str_node(ops, tlen, ALREADY_MALLOCED);",
    "Code_function": "rebuild_record()\n{\n\t/*\n\t * use explicit unsigned longs for lengths, in case\n\t * a size_t isn't big enough.\n\t */\n\tunsigned long tlen;\n\tNODE *tmp;\n\tchar *ops;\n\tchar *cops;\n\tlong i;\n\n\tassert(NF != -1);\n\n\ttlen = 0;\n\tfor (i = NF; i > 0; i--) {\n\t\ttmp = fields_arr[i];\n\t\ttmp = force_string(tmp);\n\t\ttlen += tmp->stlen;\n\t}\n\ttlen += (NF - 1) * OFSlen;\n\tif ((long) tlen < 0)\n\t\ttlen = 0;\n\temalloc(ops, char *, tlen + 2, \"rebuild_record\");\n\tcops = ops;\n\tops[0] = '\\0';\n\tfor (i = 1;  i <= NF; i++) {\n\t\tfree_wstr(fields_arr[i]);\n\t\ttmp = fields_arr[i];\n\t\t/* copy field */\n\t\tif (tmp->stlen == 1)\n\t\t\t*cops++ = tmp->stptr[0];\n\t\telse if (tmp->stlen != 0) {\n\t\t\tmemcpy(cops, tmp->stptr, tmp->stlen);\n\t\t\tcops += tmp->stlen;\n\t\t}\n\t\t/* copy OFS */\n\t\tif (i != NF) {\n\t\t\tif (OFSlen == 1)\n\t\t\t\t*cops++ = *OFS;\n\t\t\telse if (OFSlen != 0) {\n\t\t\t\tmemcpy(cops, OFS, OFSlen);\n\t\t\t\tcops += OFSlen;\n\t\t\t}\n\t\t}\n\t}\n\ttmp = make_str_node(ops, tlen, ALREADY_MALLOCED);\n\n\t/*\n\t * Since we are about to unref fields_arr[0], we want to find\n\t * any fields that still point into it, and have them point\n\t * into the new field zero.  This has to be done intelligently,\n\t * so that unrefing a field doesn't try to unref into the old $0.\n\t */\n\tfor (cops = ops, i = 1; i <= NF; i++) {\n\t\tNODE *r = fields_arr[i];\n\t\tif (r->stlen > 0) {\n\t\t\tNODE *n;\n\t\t\tgetnode(n);\n\n\t\t\tif ((r->flags & FIELD) == 0) {\n\t\t\t\t*n = *Null_field;\n\t\t\t\tn->stlen = r->stlen;\n\t\t\t\tif ((r->flags & (NUMCUR|NUMBER)) != 0) {\n\t\t\t\t\tn->flags |= (r->flags & (MPFN|MPZN|NUMCUR|NUMBER));\n#ifdef HAVE_MPFR\n\t\t\t\t\tif (is_mpg_float(r)) {\n\t\t\t\t\t        mpfr_init(n->mpg_numbr);\n\t\t\t\t\t\tmpfr_set(n->mpg_numbr, r->mpg_numbr, ROUND_MODE);\n\t\t\t\t\t} else if (is_mpg_integer(r)) {\n\t\t\t\t\t        mpz_init(n->mpg_i);\n\t\t\t\t\t\tmpz_set(n->mpg_i, r->mpg_i);\n\t\t\t\t\t} else\n#endif\n\t\t\t\t\tn->numbr = r->numbr;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t*n = *r;\n\t\t\t\tn->flags &= ~(MALLOC|STRING);\n\t\t\t}\n\n\t\t\tn->stptr = cops;\n\t\t\tunref(r);\n\t\t\tfields_arr[i] = n;\n\t\t\tassert((n->flags & WSTRCUR) == 0);\n\t\t}\n\t\tcops += fields_arr[i]->stlen + OFSlen;\n\t}\n\n\tunref(fields_arr[0]);\n\n\tfields_arr[0] = tmp;\n\tfield0_valid = true;\n}"
}