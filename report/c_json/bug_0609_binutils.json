{
    "project": "binutils",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "bfd/coffgen.c",
    "message": "Offset added: [-20, 219] (⇐ [-108, 131] + 88) Size: 4064 by call to `bfd_zalloc`.",
    "warning_function_name": "_bfd_coff_read_internal_relocs",
    "warning_line": "sec->used_by_bfd = bfd_zalloc (abfd, amt);",
    "warning_context": "struct internal_reloc *\n_bfd_coff_read_internal_relocs (bfd *abfd,\n\t\t\t\tasection *sec,\n\t\t\t\tbfd_boolean cache,\n\t\t\t\tbfd_byte *external_relocs,\n\t\t\t\tbfd_boolean require_internal,\n\t\t\t\tstruct internal_reloc *internal_relocs)\n{\n  bfd_size_type relsz;\n  bfd_byte *free_external = NULL;\n  struct internal_reloc *free_internal = NULL;\n  bfd_byte *erel;\n  bfd_byte *erel_end;\n  struct internal_reloc *irel;\n  bfd_size_type amt;\n\n  if (sec->reloc_count == 0)\n    return internal_relocs;\t/* Nothing to do.  */\n\n  if (coff_section_data (abfd, sec) != NULL\n      && coff_section_data (abfd, sec)->relocs != NULL)\n    {\n      if (! require_internal)\n\treturn coff_section_data (abfd, sec)->relocs;\n      memcpy (internal_relocs, coff_section_data (abfd, sec)->relocs,\n\t      sec->reloc_count * sizeof (struct internal_reloc));\n      return internal_relocs;\n    }\n\n  relsz = bfd_coff_relsz (abfd);\n\n  amt = sec->reloc_count * relsz;\n  if (external_relocs == NULL)\n    {\n      free_external = (bfd_byte *) bfd_malloc (amt);\n      if (free_external == NULL)\n\tgoto error_return;\n      external_relocs = free_external;\n    }\n\n  if (bfd_seek (abfd, sec->rel_filepos, SEEK_SET) != 0\n      || bfd_bread (external_relocs, amt, abfd) != amt)\n    goto error_return;\n\n  if (internal_relocs == NULL)\n    {\n      amt = sec->reloc_count;\n      amt *= sizeof (struct internal_reloc);\n      free_internal = (struct internal_reloc *) bfd_malloc (amt);\n      if (free_internal == NULL)\n\tgoto error_return;\n      internal_relocs = free_internal;\n    }\n\n  /* Swap in the relocs.  */\n  erel = external_relocs;\n  erel_end = erel + relsz * sec->reloc_count;\n  irel = internal_relocs;\n  for (; erel < erel_end; erel += relsz, irel++)\n    bfd_coff_swap_reloc_in (abfd, (void *) erel, (void *) irel);\n\n  if (free_external != NULL)\n    {\n      free (free_external);\n      free_external = NULL;\n    }\n\n  if (cache && free_internal != NULL)\n    {\n      if (coff_section_data (abfd, sec) == NULL)\n\t{\n\t  amt = sizeof (struct coff_section_tdata);\n\t  sec->used_by_bfd = bfd_zalloc (abfd, amt);\n\t  if (sec->used_by_bfd == NULL)\n\t    goto error_return;\n\t  coff_section_data (abfd, sec)->contents = NULL;\n\t}\n      coff_section_data (abfd, sec)->relocs = free_internal;\n    }\n\n  return internal_relocs;\n\n error_return:\n  if (free_external != NULL)\n    free (free_external);\n  if (free_internal != NULL)\n    free (free_internal);\n  return NULL;\n}\n"
}