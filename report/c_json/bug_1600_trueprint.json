{
    "Project": "trueprint",
    "Tool": "Infer",
    "category": "UNINITIALIZED_VALUE",
    "file": "src/output.c",
    "message": "The value read from blank_line was never initialized.",
    "warning_function_name": "printnextline",
    "warning_line": "if (blank_line)",
    "warning_context": "\t       * there isn't a deleted line - get\n\t       * the next line and check if this is\n\t       * an inserted line.\n\t       */\n\t      line_number += 1;\n\t      retval = getnextline(get_char,&blank_line,input_line,input_status);\n\t      if (line_inserted(line_number))\n\t\t{\n\t\t  dm('O',4,\"output.c:printnextline() This line is inserted - diff_state is now INSERT\\n\");\n\t\t  diff_state = INSERT;\n\t\t}\n\t      else\n\t\t{\n\t\t  dm('O',4,\"output.c:printnextline() Nothing unusual - diff_state is still NORMAL\\n\");\n\t\t  diff_state = NORMAL;\n\t\t}\n\t    }\n\t  break;\n      \n\tcase DELETE:\n\t  dm('O',4,\"output.c:printnextline() diff_state is DELETE\\n\");\n\t  /*\n\t   * There is already a line in input_line, put there at the end\n\t   * of the previous call to print_page()\n\t   */\n\t  break;\n\n\tcase INSERT:\n\tdefault:\n\t  abort();\n\t}\n      input_line_length = (int)strlen(input_line);\n      last_char_printed = -1;\n      first_line_segment = TRUE;\n\n      /*\n       * At this point\n       * diff_state\n       * NORMAL\t\tprint the line, retval set to return of getnextline()\n       * DELETE\t\tprint the deleted line, retval is set to return of\n       *\t\t\tprevious getnextline() or LINE\n       * INSERT\t\tprint the line as an inserted line, retval is set to\n       *\t\t\treturn of getnextline()\n       */\n\n      /*\n       * page_has_changed() flags this page and function as having changed\n       */\n      if (diff_state != NORMAL) page_has_changed(page_number);\n\n      if (pass == 1)\n\t{\n\t  /*\n\t   * a new line of source file is about to be printed - so\n\t   * the appropriate line start, including line number and\n\t   * a mark to show insertions or deletions, needs to be\n\t   * printed.\n\t   */\n\t  if (diff_state == DELETE)\n\t    {\n\t      dm('O',4,\"output.c:printnextline() Printing line with diff state DELETE\\n\");\n\t      if ((no_show_line_number == FALSE) || (no_show_indent_level == FALSE))\n\t\tPUTS(\"Lpt (-          ) CFs setfont show (\");\n\t      else\n\t\tPUTS(\"Lpt (-) CFs setfont show (\");\n\t    }\n\t  else\n\t    {\n\t      if (diff_state == INSERT)\n\t\t{\n\t\t  dm('O',4,\"output.c:printnextline() Printing line with diff state INSERT\\n\");\n\t\t  PUTS(\"Lpt BFs setfont (+\");\n\t\t}\n\t      else\n\t\t{\n\t\t  dm('O',4,\"output.c:printnextline() Printing line with diff state NORMAL\\n\");\n\t\t  PUTS(\"Lpt CFs setfont ( \");\n\t\t}\n\n\t      if (blank_line)\n\t\tPUTS(\"          \");\n\t      else if ((no_show_line_number == FALSE) || (no_show_indent_level == FALSE))\n\t\t{\n\t\t  if (no_show_line_number == FALSE)\n\t\t    printf(\"%5ld \",line_number);\n\t\t  else\n\t\t    PUTS(\"      \");\n\t\t  if ((no_show_indent_level == FALSE) && (braces_depth != 0))\n\t\t    printf(\"%2d  \",braces_depth);\n\t\t  else\n\t\t    PUTS(\"    \");\n\t\t}\n\t      PUTS(\") show (\");\n\t    }\n\t}\n    }\n  else\n    {\n      if (pass == 1)\n\t{\n\t  if (diff_state == DELETE)\n"
}