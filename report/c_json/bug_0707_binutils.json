{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Message": "Offset added: [-20, 203] (⇐ [-100, 123] + 80) Size: 4064 by call to `bfd_zalloc`.",
    "Code_line": "  bfd_ardata (abfd) = (struct artdata *) bfd_zalloc (abfd, amt);",
    "Code_function": "bfd_generic_archive_p (bfd *abfd)\n{\n  struct artdata *tdata_hold;\n  char armag[SARMAG + 1];\n  bfd_size_type amt;\n\n  if (bfd_bread (armag, SARMAG, abfd) != SARMAG)\n    {\n      if (bfd_get_error () != bfd_error_system_call)\n\tbfd_set_error (bfd_error_wrong_format);\n      return NULL;\n    }\n\n  bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);\n\n  if (strncmp (armag, ARMAG, SARMAG) != 0\n      && strncmp (armag, ARMAGB, SARMAG) != 0\n      && ! bfd_is_thin_archive (abfd))\n    return NULL;\n\n  tdata_hold = bfd_ardata (abfd);\n\n  amt = sizeof (struct artdata);\n  bfd_ardata (abfd) = (struct artdata *) bfd_zalloc (abfd, amt);\n  if (bfd_ardata (abfd) == NULL)\n    {\n      bfd_ardata (abfd) = tdata_hold;\n      return NULL;\n    }\n\n  bfd_ardata (abfd)->first_file_filepos = SARMAG;\n  /* Cleared by bfd_zalloc above.\n     bfd_ardata (abfd)->cache = NULL;\n     bfd_ardata (abfd)->archive_head = NULL;\n     bfd_ardata (abfd)->symdefs = NULL;\n     bfd_ardata (abfd)->extended_names = NULL;\n     bfd_ardata (abfd)->extended_names_size = 0;\n     bfd_ardata (abfd)->tdata = NULL;  */\n\n  if (!BFD_SEND (abfd, _bfd_slurp_armap, (abfd))\n      || !BFD_SEND (abfd, _bfd_slurp_extended_name_table, (abfd)))\n    {\n      if (bfd_get_error () != bfd_error_system_call)\n\tbfd_set_error (bfd_error_wrong_format);\n      bfd_release (abfd, bfd_ardata (abfd));\n      bfd_ardata (abfd) = tdata_hold;\n      return NULL;\n    }\n\n  if (abfd->target_defaulted && bfd_has_map (abfd))\n    {\n      bfd *first;\n\n      /* This archive has a map, so we may presume that the contents\n\t are object files.  Make sure that if the first file in the\n\t archive can be recognized as an object file, it is for this\n\t target.  If not, assume that this is the wrong format.  If\n\t the first file is not an object file, somebody is doing\n\t something weird, and we permit it so that ar -t will work.\n\n\t This is done because any normal format will recognize any\n\t normal archive, regardless of the format of the object files.\n\t We do accept an empty archive.  */\n\n      first = bfd_openr_next_archived_file (abfd, NULL);\n      if (first != NULL)\n\t{\n\t  first->target_defaulted = FALSE;\n\t  if (bfd_check_format (first, bfd_object)\n\t      && first->xvec != abfd->xvec)\n\t    bfd_set_error (bfd_error_wrong_object_format);\n\t  /* And we ought to close `first' here too.  */\n\t}\n    }\n\n  return abfd->xvec;\n}"
}