{
    "Project": "Zephyr",
    "Tool": "Infer",
    "category": "Uninitialized Value",
    "file": "subsys/net/ip/net_if.c",
    "message": "The value read from start_timestamp.nanosecond was never initialized.",
    "warning_function_name": "net_if_tx",
    "warning_line": "start_timestamp.nanosecond && curr_time > 0) {",
    "warning_context": "static bool net_if_tx(struct net_if *iface, struct net_pkt *pkt)\n{\n\tstruct net_linkaddr *dst;\n\tstruct net_context *context;\n\tint status;\n\n\t/* Timestamp of the current network packet sent if enabled */\n\tstruct net_ptp_time start_timestamp;\n\tu32_t curr_time = 0;\n\n\t/* We collect send statistics for each socket priority if enabled */\n\tu8_t pkt_priority;\n\n\tif (!pkt) {\n\t\treturn false;\n\t}\n\n\tdebug_check_packet(pkt);\n\n\tdst = net_pkt_lladdr_dst(pkt);\n\tcontext = net_pkt_context(pkt);\n\n\tif (net_if_flag_is_set(iface, NET_IF_UP)) {\n\t\tif (IS_ENABLED(CONFIG_NET_TCP) &&\n\t\t    net_pkt_family(pkt) != AF_UNSPEC) {\n\t\t\tnet_pkt_set_sent(pkt, true);\n\t\t\tnet_pkt_set_queued(pkt, false);\n\t\t}\n\n\t\tif (IS_ENABLED(CONFIG_NET_CONTEXT_TIMESTAMP) && context) {\n\t\t\tif (net_context_get_timestamp(context, pkt,\n\t\t\t\t\t\t      &start_timestamp) < 0) {\n\t\t\t\tstart_timestamp.nanosecond = 0;\n\t\t\t} else {\n\t\t\t\tpkt_priority = net_pkt_priority(pkt);\n\t\t\t}\n\t\t}\n\n\t\tif (IS_ENABLED(CONFIG_NET_PKT_TXTIME_STATS)) {\n\t\t\tmemcpy(&start_timestamp, net_pkt_timestamp(pkt),\n\t\t\t       sizeof(start_timestamp));\n\t\t\tpkt_priority = net_pkt_priority(pkt);\n\t\t}\n\n\t\tstatus = net_if_l2(iface)->send(iface, pkt);\n\n\t\tif (IS_ENABLED(CONFIG_NET_CONTEXT_TIMESTAMP) && status >= 0 &&\n\t\t    context) {\n\t\t\tif (start_timestamp.nanosecond > 0) {\n\t\t\t\tcurr_time = k_cycle_get_32();\n\t\t\t}\n\t\t}\n\n\t\tif (IS_ENABLED(CONFIG_NET_PKT_TXTIME_STATS) && status >= 0) {\n\t\t\tnet_stats_update_tc_tx_time(iface,\n\t\t\t\t\t\t    pkt_priority,\n\t\t\t\t\t\t    start_timestamp.nanosecond,\n\t\t\t\t\t\t    k_cycle_get_32());\n\t\t}\n\n\t} else {\n\t\t/* Drop packet if interface is not up */\n\t\tNET_WARN(\"iface %p is down\", iface);\n\t\tstatus = -ENETDOWN;\n\t}\n\n\tif (status < 0) {\n\t\tnet_pkt_unref(pkt);\n\t} else {\n\t\tnet_stats_update_bytes_sent(iface, status);\n\t}\n\n\tif (context) {\n\t\tNET_DBG(\"Calling context send cb %p status %d\",\n\t\t\tcontext, status);\n\n\t\tnet_context_send_cb(context, status);\n\n\t\tif (IS_ENABLED(CONFIG_NET_CONTEXT_TIMESTAMP) && status >= 0 &&\n\t\t    start_timestamp.nanosecond && curr_time > 0) {\n\t\t\t/* So we know now how long the network packet was in\n\t\t\t * transit from when it was allocated to when we\n\t\t\t * got information that it was sent successfully.\n\t\t\t */\n\t\t\tnet_stats_update_tc_tx_time(iface,\n\t\t\t\t\t\t    pkt_priority,\n\t\t\t\t\t\t    start_timestamp.nanosecond,\n\t\t\t\t\t\t    curr_time);\n\t\t}\n\t}\n\n\tif (dst->addr) {\n\t\tnet_if_call_link_cb(iface, dst, status);\n\t}\n\n\treturn true;\n}\n"
}