{
    "Project": "Zephyr",
    "Tool": "Infer",
    "Bug Type": "Null Dereference",
    "Message": "pointer `null` is dereferenced by call to `bt_hci_cmd_send_sync()` at line 4487, column 8.",
    "Code_line": "\terr = bt_hci_cmd_send_sync(BT_HCI_OP_READ_BUFFER_SIZE, NULL, &buf);",
    "Code_function": "static int br_init(void)\n{\n\tstruct net_buf *buf;\n\tstruct bt_hci_cp_write_ssp_mode *ssp_cp;\n\tstruct bt_hci_cp_write_inquiry_mode *inq_cp;\n\tstruct bt_hci_write_local_name *name_cp;\n\tint err;\n\n\t/* Read extended local features */\n\tif (BT_FEAT_EXT_FEATURES(bt_dev.features)) {\n\t\terr = read_ext_features();\n\t\tif (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\t/* Add local supported packet types to bt_dev */\n\tdevice_supported_pkt_type();\n\n\t/* Get BR/EDR buffer size */\n\terr = bt_hci_cmd_send_sync(BT_HCI_OP_READ_BUFFER_SIZE, NULL, &buf);\n\tif (err) {\n\t\treturn err;\n\t}\n\n\tread_buffer_size_complete(buf);\n\tnet_buf_unref(buf);\n\n\t/* Set SSP mode */\n\tbuf = bt_hci_cmd_create(BT_HCI_OP_WRITE_SSP_MODE, sizeof(*ssp_cp));\n\tif (!buf) {\n\t\treturn -ENOBUFS;\n\t}\n\n\tssp_cp = net_buf_add(buf, sizeof(*ssp_cp));\n\tssp_cp->mode = 0x01;\n\terr = bt_hci_cmd_send_sync(BT_HCI_OP_WRITE_SSP_MODE, buf, NULL);\n\tif (err) {\n\t\treturn err;\n\t}\n\n\t/* Enable Inquiry results with RSSI or extended Inquiry */\n\tbuf = bt_hci_cmd_create(BT_HCI_OP_WRITE_INQUIRY_MODE, sizeof(*inq_cp));\n\tif (!buf) {\n\t\treturn -ENOBUFS;\n\t}\n\n\tinq_cp = net_buf_add(buf, sizeof(*inq_cp));\n\tinq_cp->mode = 0x02;\n\terr = bt_hci_cmd_send_sync(BT_HCI_OP_WRITE_INQUIRY_MODE, buf, NULL);\n\tif (err) {\n\t\treturn err;\n\t}\n\n\t/* Set local name */\n\tbuf = bt_hci_cmd_create(BT_HCI_OP_WRITE_LOCAL_NAME, sizeof(*name_cp));\n\tif (!buf) {\n\t\treturn -ENOBUFS;\n\t}\n\n\tname_cp = net_buf_add(buf, sizeof(*name_cp));\n\tstrncpy((char *)name_cp->local_name, CONFIG_BT_DEVICE_NAME,\n\t\tsizeof(name_cp->local_name));\n\n\terr = bt_hci_cmd_send_sync(BT_HCI_OP_WRITE_LOCAL_NAME, buf, NULL);\n\tif (err) {\n\t\treturn err;\n\t}\n\n\t/* Set page timeout*/\n\tbuf = bt_hci_cmd_create(BT_HCI_OP_WRITE_PAGE_TIMEOUT, sizeof(u16_t));\n\tif (!buf) {\n\t\treturn -ENOBUFS;\n\t}\n\n\tnet_buf_add_le16(buf, CONFIG_BT_PAGE_TIMEOUT);\n\n\terr = bt_hci_cmd_send_sync(BT_HCI_OP_WRITE_PAGE_TIMEOUT, buf, NULL);\n\tif (err) {\n\t\treturn err;\n\t}\n\n\t/* Enable BR/EDR SC if supported */\n\tif (BT_FEAT_SC(bt_dev.features)) {\n\t\tstruct bt_hci_cp_write_sc_host_supp *sc_cp;\n\n\t\tbuf = bt_hci_cmd_create(BT_HCI_OP_WRITE_SC_HOST_SUPP,\n\t\t\t\t\tsizeof(*sc_cp));\n\t\tif (!buf) {\n\t\t\treturn -ENOBUFS;\n\t\t}\n\n\t\tsc_cp = net_buf_add(buf, sizeof(*sc_cp));\n\t\tsc_cp->sc_support = 0x01;\n\n\t\terr = bt_hci_cmd_send_sync(BT_HCI_OP_WRITE_SC_HOST_SUPP, buf,\n\t\t\t\t\t   NULL);\n\t\tif (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\treturn 0;\n}"
}