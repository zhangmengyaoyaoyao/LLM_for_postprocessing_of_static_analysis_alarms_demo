{
    "project": "apr",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L2",
    "file": "threadproc/unix/signals.c",
    "message": "Offset: [0, 64] Size: 25.",
    "warning_function_name": "apr_signal_init",
    "warning_line": "if (signal_description[sig] == NULL)",
    "warning_context": "    store_desc(SIGFPE, \"Arithmetic exception\");\n#endif\n#ifdef SIGKILL\n    store_desc(SIGKILL, \"Killed\");\n#endif\n#ifdef SIGBUS\n    store_desc(SIGBUS, \"Bus error\");\n#endif\n#ifdef SIGSEGV\n    store_desc(SIGSEGV, \"Segmentation fault\");\n#endif\n#ifdef SIGSYS\n    store_desc(SIGSYS, \"Bad system call\");\n#endif\n#ifdef SIGPIPE\n    store_desc(SIGPIPE, \"Broken pipe\");\n#endif\n#ifdef SIGALRM\n    store_desc(SIGALRM, \"Alarm clock\");\n#endif\n#ifdef SIGTERM\n    store_desc(SIGTERM, \"Terminated\");\n#endif\n#ifdef SIGUSR1\n    store_desc(SIGUSR1, \"User defined signal 1\");\n#endif\n#ifdef SIGUSR2\n    store_desc(SIGUSR2, \"User defined signal 2\");\n#endif\n#ifdef SIGCLD\n    store_desc(SIGCLD, \"Child status change\");\n#endif\n#ifdef SIGCHLD\n    store_desc(SIGCHLD, \"Child status change\");\n#endif\n#ifdef SIGPWR\n    store_desc(SIGPWR, \"Power-fail restart\");\n#endif\n#ifdef SIGWINCH\n    store_desc(SIGWINCH, \"Window changed\");\n#endif\n#ifdef SIGURG\n    store_desc(SIGURG, \"urgent socket condition\");\n#endif\n#ifdef SIGPOLL\n    store_desc(SIGPOLL, \"Pollable event occurred\");\n#endif\n#ifdef SIGIO\n    store_desc(SIGIO, \"socket I/O possible\");\n#endif\n#ifdef SIGSTOP\n    store_desc(SIGSTOP, \"Stopped (signal)\");\n#endif\n#ifdef SIGTSTP\n    store_desc(SIGTSTP, \"Stopped\");\n#endif\n#ifdef SIGCONT\n    store_desc(SIGCONT, \"Continued\");\n#endif\n#ifdef SIGTTIN\n    store_desc(SIGTTIN, \"Stopped (tty input)\");\n#endif\n#ifdef SIGTTOU\n    store_desc(SIGTTOU, \"Stopped (tty output)\");\n#endif\n#ifdef SIGVTALRM\n    store_desc(SIGVTALRM, \"virtual timer expired\");\n#endif\n#ifdef SIGPROF\n    store_desc(SIGPROF, \"profiling timer expired\");\n#endif\n#ifdef SIGXCPU\n    store_desc(SIGXCPU, \"exceeded cpu limit\");\n#endif\n#ifdef SIGXFSZ\n    store_desc(SIGXFSZ, \"exceeded file size limit\");\n#endif\n\n    for (sig = 0; sig < APR_NUMSIG; ++sig)\n        if (signal_description[sig] == NULL)\n            signal_description[sig] = apr_psprintf(pglobal, \"signal #%d\", sig);\n}\n\nconst char *apr_signal_description_get(int signum)\n{\n    return\n        (signum >= 0 && signum < APR_NUMSIG)\n        ? signal_description[signum]\n        : \"unknown signal (number)\";\n}\n\n#endif /* SYS_SIGLIST_DECLARED || HAVE_DECL_SYS_SIGLIST */\n\n#if APR_HAS_THREADS && (HAVE_SIGSUSPEND || APR_HAVE_SIGWAIT) && !defined(OS2)\n\nstatic void remove_sync_sigs(sigset_t *sig_mask)\n{\n#ifdef SIGABRT\n    sigdelset(sig_mask, SIGABRT);\n#endif\n#ifdef SIGBUS\n"
}