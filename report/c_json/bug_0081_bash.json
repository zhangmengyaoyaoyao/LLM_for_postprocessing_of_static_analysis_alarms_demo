{
    "project": "bash",
    "tool": "Cppcheck",
    "category": "memleakOnRealloc",
    "file": "lib/sh/strftime.c",
    "message": "Common realloc mistake: 'savetz' nulled but not freed upon failure",
    "warning_function_name": "strftime",
    "warning_line": "savetz = (char *) realloc(savetz, i);",
    "warning_context": "\tlong y;\n\tstatic short first = 1;\n#ifdef POSIX_SEMANTICS\n\tstatic char *savetz = NULL;\n\tstatic int savetzlen = 0;\n\tchar *tz;\n#endif /* POSIX_SEMANTICS */\n#ifndef HAVE_TM_ZONE\n#ifndef HAVE_TM_NAME\n#ifndef HAVE_TZNAME\n#ifndef __CYGWIN__\n\textern char *timezone();\n\tstruct timeval tv;\n\tstruct timezone zone;\n#endif /* __CYGWIN__ */\n#endif /* HAVE_TZNAME */\n#endif /* HAVE_TM_NAME */\n#endif /* HAVE_TM_ZONE */\n#ifdef POSIX_2008\n\tint pad;\n\tsize_t fw;\n\tchar flag;\n#endif /* POSIX_2008 */\n\n\t/* various tables, useful in North America */\n\tstatic const char *days_a[] = {\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\",\n\t\t\"Thu\", \"Fri\", \"Sat\",\n\t};\n\tstatic const char *days_l[] = {\n\t\t\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\t\"Thursday\", \"Friday\", \"Saturday\",\n\t};\n\tstatic const char *months_a[] = {\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n\t};\n\tstatic const char *months_l[] = {\n\t\t\"January\", \"February\", \"March\", \"April\",\n\t\t\"May\", \"June\", \"July\", \"August\", \"September\",\n\t\t\"October\", \"November\", \"December\",\n\t};\n\tstatic const char *ampm[] = { \"AM\", \"PM\", };\n\n\tif (s == NULL || format == NULL || timeptr == NULL || maxsize == 0)\n\t\treturn 0;\n\n\t/* quick check if we even need to bother */\n\tif (strchr(format, '%') == NULL && strlen(format) + 1 >= maxsize)\n\t\treturn 0;\n\n#ifndef POSIX_SEMANTICS\n\tif (first) {\n\t\ttzset();\n\t\tfirst = 0;\n\t}\n#else\t/* POSIX_SEMANTICS */\n#if defined (SHELL)\n\ttz = get_string_value (\"TZ\");\n#else\n\ttz = getenv(\"TZ\");\n#endif\n\tif (first) {\n\t\tif (tz != NULL) {\n\t\t\tint tzlen = strlen(tz);\n\n\t\t\tsavetz = (char *) malloc(tzlen + 1);\n\t\t\tif (savetz != NULL) {\n\t\t\t\tsavetzlen = tzlen + 1;\n\t\t\t\tstrcpy(savetz, tz);\n\t\t\t}\n\t\t}\n\t\ttzset();\n\t\tfirst = 0;\n\t}\n\t/* if we have a saved TZ, and it is different, recapture and reset */\n\tif (tz && savetz && (tz[0] != savetz[0] || strcmp(tz, savetz) != 0)) {\n\t\ti = strlen(tz) + 1;\n\t\tif (i > savetzlen) {\n\t\t\tsavetz = (char *) realloc(savetz, i);\n\t\t\tif (savetz) {\n\t\t\t\tsavetzlen = i;\n\t\t\t\tstrcpy(savetz, tz);\n\t\t\t}\n\t\t} else\n\t\t\tstrcpy(savetz, tz);\n\t\ttzset();\n\t}\n#endif\t/* POSIX_SEMANTICS */\n\n\tfor (; *format && s < endp - 1; format++) {\n\t\ttbuf[0] = '\\0';\n\t\tif (*format != '%') {\n\t\t\t*s++ = *format;\n\t\t\tcontinue;\n\t\t}\n#ifdef POSIX_2008\n\t\tpad = '\\0';\n\t\tfw = 0;\n\t\tflag = '\\0';\n\t\tswitch (*++format) {\n"
}