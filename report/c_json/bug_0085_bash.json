{
    "Project": "bash",
    "Tool": "Cppcheck",
    "category": "uninitvar",
    "file": "support/man2html.c",
    "message": "Uninitialized variable: list_options",
    "warning_function_name": "scan_request",
    "warning_line": "if (strstr(list_options, \"-bullet\")) {\t/* HTML Unnumbered List */",
    "warning_context": "\t\t\t}\n\t\tcase V('a', 'm'):\n\t\t\t/* .am xx yy : append to a macro. */\n\t\t\t/* define or handle as .ig yy */\n\t\t\tmode = 1;\n\t\tcase V('d', 'e'):\n\t\t\t/*\n\t\t\t * .de xx yy : define or redefine macro xx; end at\n\t\t\t * .yy (..)\n\t\t\t */\n\t\t\t/* define or handle as .ig yy */\n\t\t\t{\n\t\t\t\tSTRDEF *de;\n\t\t\t\tint     olen = 0;\n\n\t\t\t\tc = c + j;\n\t\t\t\tsl = fill_words(c, wordlist, &words);\n\t\t\t\ti = V(c[0], c[1]);\n\t\t\t\tj = 2;\n\t\t\t\tif (words == 1)\n\t\t\t\t\twordlist[1] = \"..\";\n\t\t\t\telse {\n\t\t\t\t\twordlist[1]--;\n\t\t\t\t\twordlist[1][0] = '.';\n\t\t\t\t\tj = 3;\n\t\t\t\t}\n\t\t\t\tc = sl + 1;\n\t\t\t\tsl = c;\n\t\t\t\twhile (*c && strncmp(c, wordlist[1], j))\n\t\t\t\t\tc = skip_till_newline(c);\n\t\t\t\tde = defdef;\n\t\t\t\twhile (de && de->nr != i)\n\t\t\t\t\tde = de->next;\n\t\t\t\tif (mode && de)\n\t\t\t\t\tolen = strlen(de->st);\n\t\t\t\tj = olen + c - sl;\n\t\t\t\th = stralloc(j * 2 + 4);\n\t\t\t\tif (h) {\n\t\t\t\t\tfor (j = 0; j < olen; j++)\n\t\t\t\t\t\th[j] = de->st[j];\n\t\t\t\t\tif (!j || h[j - 1] != '\\n')\n\t\t\t\t\t\th[j++] = '\\n';\n\t\t\t\t\twhile (sl != c) {\n\t\t\t\t\t\tif (sl[0] == '\\\\' && sl[1] == '\\\\') {\n\t\t\t\t\t\t\th[j++] = '\\\\';\n\t\t\t\t\t\t\tsl++;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\th[j++] = *sl;\n\t\t\t\t\t\tsl++;\n\t\t\t\t\t}\n\t\t\t\t\th[j] = '\\0';\n\t\t\t\t\tif (de) {\n\t\t\t\t\t\tif (de->st)\n\t\t\t\t\t\t\tfree(de->st);\n\t\t\t\t\t\tde->st = h;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tde = (STRDEF *) malloc(sizeof(STRDEF));\n\t\t\t\t\t\tde->nr = i;\n\t\t\t\t\t\tde->next = defdef;\n\t\t\t\t\t\tde->st = h;\n\t\t\t\t\t\tdefdef = de;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tc = skip_till_newline(c);\n\t\t\tbreak;\n\t\tcase V('B', 'l'):\t/* BSD mandoc */\n\t\t\t{\n\t\t\t\tchar    list_options[NULL_TERMINATED(MED_STR_MAX)];\n\t\t\t\tchar   *nl = strchr(c, '\\n');\n\n\t\t\t\tc = c + j;\n\t\t\t\tif (dl_set[itemdepth]) {\t/* These things can\n\t\t\t\t\t\t\t\t * nest. */\n\t\t\t\t\titemdepth++;\n\t\t\t\t}\n\t\t\t\tif (nl) {\t/* Parse list options */\n\t\t\t\t\tstrlimitcpy(list_options, c, nl - c, MED_STR_MAX);\n\t\t\t\t}\n\t\t\t\tif (strstr(list_options, \"-bullet\")) {\t/* HTML Unnumbered List */\n\t\t\t\t\tdl_set[itemdepth] = BL_BULLET_LIST;\n\t\t\t\t\tout_html(\"<UL>\\n\");\n\t\t\t\t} else if (strstr(list_options, \"-enum\")) {\t/* HTML Ordered List */\n\t\t\t\t\tdl_set[itemdepth] = BL_ENUM_LIST;\n\t\t\t\t\tout_html(\"<OL>\\n\");\n\t\t\t\t} else {\t/* HTML Descriptive List */\n\t\t\t\t\tdl_set[itemdepth] = BL_DESC_LIST;\n\t\t\t\t\tout_html(\"<DL COMPACT>\\n\");\n\t\t\t\t}\n\t\t\t\tif (fillout)\n\t\t\t\t\tout_html(\"<P>\\n\");\n\t\t\t\telse {\n\t\t\t\t\tout_html(NEWLINE);\n\t\t\t\t\tNEWLINE[0] = '\\n';\n\t\t\t\t}\n\t\t\t\tcurpos = 0;\n\t\t\t\tc = skip_till_newline(c);\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase V('E', 'l'):\t/* BSD mandoc */\n\t\t\tc = c + j;\n"
}