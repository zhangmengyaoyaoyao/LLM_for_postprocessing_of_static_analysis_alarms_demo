{
    "Project": "gawk",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Message": "Offset: 1 Size: [0, 3] by call to `set_element`.",
    "Code_line": "\t\t\tset_element(nf, scan, 1L, sep_arr);",
    "Code_function": "sc_parse_field(long up_to,\t/* parse only up to this field number */\n\tchar **buf,\t/* on input: string to parse; on output: point to start next */\n\tint len,\n\tNODE *fs,\n\tRegexp *rp ATTRIBUTE_UNUSED,\n\tSetfunc set,\t/* routine to set the value of the parsed field */\n\tNODE *n,\n\tNODE *sep_arr,  /* array of field separators (maybe NULL) */\n\tbool in_middle ATTRIBUTE_UNUSED)\n{\n\tchar *scan = *buf;\n\tchar fschar;\n\tlong nf = parse_high_water;\n\tchar *field;\n\tchar *end = scan + len;\n\tchar sav;\n\tsize_t mbclen = 0;\n\tmbstate_t mbs;\n\n\tmemset(&mbs, 0, sizeof(mbstate_t));\n\n\tif (up_to == UNLIMITED)\n\t\tnf = 0;\n\tif (len == 0)\n\t\treturn nf;\n\n\tif (RS_is_null && fs->stlen == 0)\n\t\tfschar = '\\n';\n\telse\n\t\tfschar = fs->stptr[0];\n\n\t/* before doing anything save the char at *end */\n\tsav = *end;\n\t/* because it will be destroyed now: */\n\t*end = fschar;\t/* sentinel character */\n\n\tfor (; nf < up_to;) {\n\t\tfield = scan;\n\t\tif (gawk_mb_cur_max > 1) {\n\t\t\twhile (*scan != fschar) {\n\t\t\t\tmbclen = mbrlen(scan, end-scan, &mbs);\n\t\t\t\tif ((mbclen == 1) || (mbclen == (size_t) -1)\n\t\t\t\t\t|| (mbclen == (size_t) -2) || (mbclen == 0)) {\n\t\t\t\t\t/* We treat it as a singlebyte character.  */\n\t\t\t\t\tmbclen = 1;\n\t\t\t\t}\n\t\t\t\tscan += mbclen;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (*scan != fschar)\n\t\t\t\tscan++;\n\t\t}\n\t\t(*set)(++nf, field, (long)(scan - field), n);\n\t\tif (scan == end)\n\t\t\tbreak;\n\t\tif (sep_arr != NULL)\n\t\t\tset_element(nf, scan, 1L, sep_arr);\n\t\tscan++;\n\t\tif (scan == end) {\t/* FS at end of record */\n\t\t\t(*set)(++nf, field, 0L, n);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* everything done, restore original char at *end */\n\t*end = sav;\n\n\t*buf = scan;\n\treturn nf;\n}"
}