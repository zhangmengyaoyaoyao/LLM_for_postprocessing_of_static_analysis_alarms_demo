{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Code_line": "      indx = _bfd_elf_strtab_add (dynstr, name, p != NULL);",
    "Code_function": "bfd_elf_link_record_dynamic_symbol (struct bfd_link_info *info,\n\t\t\t\t    struct elf_link_hash_entry *h)\n{\n  if (h->dynindx == -1)\n    {\n      struct elf_strtab_hash *dynstr;\n      char *p;\n      const char *name;\n      bfd_size_type indx;\n\n      /* XXX: The ABI draft says the linker must turn hidden and\n\t internal symbols into STB_LOCAL symbols when producing the\n\t DSO. However, if ld.so honors st_other in the dynamic table,\n\t this would not be necessary.  */\n      switch (ELF_ST_VISIBILITY (h->other))\n\t{\n\tcase STV_INTERNAL:\n\tcase STV_HIDDEN:\n\t  if (h->root.type != bfd_link_hash_undefined\n\t      && h->root.type != bfd_link_hash_undefweak)\n\t    {\n\t      h->forced_local = 1;\n\t      if (!elf_hash_table (info)->is_relocatable_executable)\n\t\treturn TRUE;\n\t    }\n\n\tdefault:\n\t  break;\n\t}\n\n      h->dynindx = elf_hash_table (info)->dynsymcount;\n      ++elf_hash_table (info)->dynsymcount;\n\n      dynstr = elf_hash_table (info)->dynstr;\n      if (dynstr == NULL)\n\t{\n\t  /* Create a strtab to hold the dynamic symbol names.  */\n\t  elf_hash_table (info)->dynstr = dynstr = _bfd_elf_strtab_init ();\n\t  if (dynstr == NULL)\n\t    return FALSE;\n\t}\n\n      /* We don't put any version information in the dynamic string\n\t table.  */\n      name = h->root.root.string;\n      p = strchr (name, ELF_VER_CHR);\n      if (p != NULL)\n\t/* We know that the p points into writable memory.  In fact,\n\t   there are only a few symbols that have read-only names, being\n\t   those like _GLOBAL_OFFSET_TABLE_ that are created specially\n\t   by the backends.  Most symbols will have names pointing into\n\t   an ELF string table read from a file, or to objalloc memory.  */\n\t*p = 0;\n\n      indx = _bfd_elf_strtab_add (dynstr, name, p != NULL);\n\n      if (p != NULL)\n\t*p = ELF_VER_CHR;\n\n      if (indx == (bfd_size_type) -1)\n\treturn FALSE;\n      h->dynstr_index = indx;\n    }\n\n  return TRUE;\n}"
}