{
    "Project": "bash",
    "Tool": "Infer",
    "Bug Type": "UNINITIALIZED_VALUE",
    "Message": "The value read from state_bak.__count was never initialized.",
    "Code_line": "      ADVANCE_CHAR (string, slen, i);",
    "Code_function": "expand_string_if_necessary (string, quoted, func)\n     char *string;\n     int quoted;\n     EXPFUNC *func;\n{\n  WORD_LIST *list;\n  size_t slen;\n  int i, saw_quote;\n  char *ret;\n  DECLARE_MBSTATE;\n\n  /* Don't need string length for ADVANCE_CHAR unless multibyte chars possible. */\n  slen = (MB_CUR_MAX > 1) ? strlen (string) : 0;\n  i = saw_quote = 0;\n  while (string[i])\n    {\n      if (EXP_CHAR (string[i]))\n\tbreak;\n      else if (string[i] == '\\'' || string[i] == '\\\\' || string[i] == '\"')\n\tsaw_quote = 1;\n      ADVANCE_CHAR (string, slen, i);\n    }\n\n  if (string[i])\n    {\n      list = (*func) (string, quoted);\n      if (list)\n\t{\n\t  ret = string_list (list);\n\t  dispose_words (list);\n\t}\n      else\n\tret = (char *)NULL;\n    }\n  else if (saw_quote && ((quoted & (Q_HERE_DOCUMENT|Q_DOUBLE_QUOTES)) == 0))\n    ret = string_quote_removal (string, quoted);\n  else\n    ret = savestring (string);\n\n  return ret;\n}"
}