{
    "project": "gawk",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "io.c",
    "message": "Offset: 0 Size: [0, 2] by call to `update_ERRNO_int`.",
    "warning_function_name": "do_getline_redir",
    "warning_line": "update_ERRNO_int(redir_error);",
    "warning_context": "NODE *\ndo_getline_redir(int into_variable, enum redirval redirtype)\n{\n\tstruct redirect *rp = NULL;\n\tIOBUF *iop;\n\tint cnt = EOF;\n\tchar *s = NULL;\n\tint errcode;\n\tNODE *redir_exp = NULL;\n\tNODE **lhs = NULL;\n\tint redir_error = 0;\n\n\tif (into_variable)\n\t\tlhs = POP_ADDRESS();\n\n\tassert(redirtype != redirect_none);\n\tredir_exp = TOP();\n\trp = redirect(redir_exp, redirtype, & redir_error);\n\tDEREF(redir_exp);\n\tdecr_sp();\n\tif (rp == NULL) {\n\t\tif (redir_error) { /* failed redirect */\n\t\t\tif (! do_traditional)\n\t\t\t\tupdate_ERRNO_int(redir_error);\n\t\t}\n\t\treturn make_number((AWKNUM) -1.0);\n\t}\n\tiop = rp->iop;\n\tif (iop == NULL)\t\t/* end of input */\n\t\treturn make_number((AWKNUM) 0.0);\n\n\terrcode = 0;\n\tcnt = get_a_record(& s, iop, & errcode);\n\tif (errcode != 0) {\n\t\tif (! do_traditional && (errcode != -1))\n\t\t\tupdate_ERRNO_int(errcode);\n\t\treturn make_number((AWKNUM) -1.0);\n\t}\n\n\tif (cnt == EOF) {\n\t\t/*\n\t\t * Don't do iop_close() here if we are\n\t\t * reading from a pipe; otherwise\n\t\t * gawk_pclose will not be called.\n\t\t */\n\t\tif ((rp->flag & (RED_PIPE|RED_TWOWAY)) == 0) {\n\t\t\t(void) iop_close(iop);\n\t\t\trp->iop = NULL;\n\t\t}\n\t\trp->flag |= RED_EOF;\t/* sticky EOF */\n\t\treturn make_number((AWKNUM) 0.0);\n\t}\n\n\tif (lhs == NULL)\t/* no optional var. */\n\t\tset_record(s, cnt);\n\telse {\t\t\t/* assignment to variable */\n\t\tunref(*lhs);\n\t\t*lhs = make_string(s, cnt);\n\t\t(*lhs)->flags |= MAYBE_NUM;\n\t}\n\n\treturn make_number((AWKNUM) 1.0);\n}\n"
}