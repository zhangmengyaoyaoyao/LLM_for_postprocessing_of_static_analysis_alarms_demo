{
    "Project": "grep",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "src/grep.c",
    "message": "Offset: [-1, +oo] Size: 3.",
    "warning_function_name": "main",
    "warning_line": "directories = XARGMATCH (\"--directories\", optarg,",
    "warning_context": "        break;\n\n      case 'B':\n        context_length_arg (optarg, &out_before);\n        break;\n\n      case 'C':\n        /* Set output match context, but let any explicit leading or\n           trailing amount specified with -A or -B stand. */\n        context_length_arg (optarg, &default_context);\n        break;\n\n      case 'D':\n        if (STREQ (optarg, \"read\"))\n          devices = READ_DEVICES;\n        else if (STREQ (optarg, \"skip\"))\n          devices = SKIP_DEVICES;\n        else\n          error (EXIT_TROUBLE, 0, _(\"unknown devices method\"));\n        break;\n\n      case 'E':\n        setmatcher (\"egrep\");\n        break;\n\n      case 'F':\n        setmatcher (\"fgrep\");\n        break;\n\n      case 'P':\n        setmatcher (\"perl\");\n        break;\n\n      case 'G':\n        setmatcher (\"grep\");\n        break;\n\n      case 'X': /* undocumented on purpose */\n        setmatcher (optarg);\n        break;\n\n      case 'H':\n        with_filenames = true;\n        no_filenames = false;\n        break;\n\n      case 'I':\n        binary_files = WITHOUT_MATCH_BINARY_FILES;\n        break;\n\n      case 'T':\n        align_tabs = true;\n        break;\n\n      case 'U':\n        dos_binary ();\n        break;\n\n      case 'u':\n        dos_unix_byte_offsets ();\n        break;\n\n      case 'V':\n        show_version = true;\n        break;\n\n      case 'a':\n        binary_files = TEXT_BINARY_FILES;\n        break;\n\n      case 'b':\n        out_byte = true;\n        break;\n\n      case 'c':\n        count_matches = true;\n        break;\n\n      case 'd':\n        directories = XARGMATCH (\"--directories\", optarg,\n                                 directories_args, directories_types);\n        if (directories == RECURSE_DIRECTORIES)\n          last_recursive = prev_optind;\n        break;\n\n      case 'e':\n        cc = strlen (optarg);\n        keys = xrealloc (keys, keycc + cc + 1);\n        strcpy (&keys[keycc], optarg);\n        keycc += cc;\n        keys[keycc++] = '\\n';\n        break;\n\n      case 'f':\n        fp = STREQ (optarg, \"-\") ? stdin : fopen (optarg, O_TEXT ? \"rt\" : \"r\");\n        if (!fp)\n          error (EXIT_TROUBLE, errno, \"%s\", optarg);\n        for (keyalloc = 1; keyalloc <= keycc + 1; keyalloc *= 2)\n          ;\n        keys = xrealloc (keys, keyalloc);\n        oldcc = keycc;\n"
}