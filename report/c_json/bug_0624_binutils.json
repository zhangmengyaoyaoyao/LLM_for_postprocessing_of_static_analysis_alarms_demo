{
    "project": "binutils",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "bfd/opncls.c",
    "message": "Offset added: [-20, 123] (⇐ [-60, 83] + 40) Size: 4064 by call to `bfd_zalloc`.",
    "warning_function_name": "bfd_openr_iovec",
    "warning_line": "vec = (struct opncls *) bfd_zalloc (nbfd, sizeof (struct opncls));",
    "warning_context": "bfd *\nbfd_openr_iovec (const char *filename, const char *target,\n\t\t void *(*open_p) (struct bfd *, void *),\n\t\t void *open_closure,\n\t\t file_ptr (*pread_p) (struct bfd *, void *, void *,\n\t\t\t\t      file_ptr, file_ptr),\n\t\t int (*close_p) (struct bfd *, void *),\n\t\t int (*stat_p) (struct bfd *, void *, struct stat *))\n{\n  bfd *nbfd;\n  const bfd_target *target_vec;\n  struct opncls *vec;\n  void *stream;\n\n  nbfd = _bfd_new_bfd ();\n  if (nbfd == NULL)\n    return NULL;\n\n  target_vec = bfd_find_target (target, nbfd);\n  if (target_vec == NULL)\n    {\n      _bfd_delete_bfd (nbfd);\n      return NULL;\n    }\n\n  /* PR 11983: Do not cache the original filename, but\n     rather make a copy - the original might go away.  */\n  nbfd->filename = xstrdup (filename);\n  nbfd->direction = read_direction;\n\n  /* `open_p (...)' would get expanded by an the open(2) syscall macro.  */\n  stream = (*open_p) (nbfd, open_closure);\n  if (stream == NULL)\n    {\n      _bfd_delete_bfd (nbfd);\n      return NULL;\n    }\n\n  vec = (struct opncls *) bfd_zalloc (nbfd, sizeof (struct opncls));\n  vec->stream = stream;\n  vec->pread = pread_p;\n  vec->close = close_p;\n  vec->stat = stat_p;\n\n  nbfd->iovec = &opncls_iovec;\n  nbfd->iostream = vec;\n\n  return nbfd;\n}\n"
}