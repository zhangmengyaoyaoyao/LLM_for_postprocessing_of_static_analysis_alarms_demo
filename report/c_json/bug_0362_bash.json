{
    "Project": "bash",
    "Tool": "Infer",
    "category": "UNINITIALIZED_VALUE",
    "file": "subst.c",
    "message": "The value read from t was never initialized.",
    "warning_function_name": "parameter_brace_expand_length",
    "warning_line": "number = STRLEN (t);",
    "warning_context": "static intmax_t\nparameter_brace_expand_length (name)\n     char *name;\n{\n  char *t, *newname;\n  intmax_t number, arg_index;\n  WORD_LIST *list;\n#if defined (ARRAY_VARS)\n  SHELL_VAR *var;\n#endif\n\n  if (name[1] == '\\0')\t\t\t/* ${#} */\n    number = number_of_args ();\n  else if ((name[1] == '@' || name[1] == '*') && name[2] == '\\0')\t/* ${#@}, ${#*} */\n    number = number_of_args ();\n  else if ((sh_syntaxtab[(unsigned char) name[1]] & CSPECVAR) && name[2] == '\\0')\n    {\n      /* Take the lengths of some of the shell's special parameters. */\n      switch (name[1])\n\t{\n\tcase '-':\n\t  t = which_set_flags ();\n\t  break;\n\tcase '?':\n\t  t = itos (last_command_exit_value);\n\t  break;\n\tcase '$':\n\t  t = itos (dollar_dollar_pid);\n\t  break;\n\tcase '!':\n\t  if (last_asynchronous_pid == NO_PID)\n\t    t = (char *)NULL;\t/* XXX - error if set -u set? */\n\t  else\n\t    t = itos (last_asynchronous_pid);\n\t  break;\n\tcase '#':\n\t  t = itos (number_of_args ());\n\t  break;\n\t}\n      number = STRLEN (t);\n      FREE (t);\n    }\n#if defined (ARRAY_VARS)\n  else if (valid_array_reference (name + 1))\n    number = array_length_reference (name + 1);\n#endif /* ARRAY_VARS */\n  else\n    {\n      number = 0;\n\n      if (legal_number (name + 1, &arg_index))\t\t/* ${#1} */\n\t{\n\t  t = get_dollar_var_value (arg_index);\n\t  if (t == 0 && unbound_vars_is_error)\n\t    return INTMAX_MIN;\n\t  number = MB_STRLEN (t);\n\t  FREE (t);\n\t}\n#if defined (ARRAY_VARS)\n      else if ((var = find_variable (name + 1)) && (invisible_p (var) == 0) && (array_p (var) || assoc_p (var)))\n\t{\n\t  if (assoc_p (var))\n\t    t = assoc_reference (assoc_cell (var), \"0\");\n\t  else\n\t    t = array_reference (array_cell (var), 0);\n\t  if (t == 0 && unbound_vars_is_error)\n\t    return INTMAX_MIN;\n\t  number = MB_STRLEN (t);\n\t}\n#endif\n      else\t\t\t\t/* ${#PS1} */\n\t{\n\t  newname = savestring (name);\n\t  newname[0] = '$';\n\t  list = expand_string (newname, Q_DOUBLE_QUOTES);\n\t  t = list ? string_list (list) : (char *)NULL;\n\t  free (newname);\n\t  if (list)\n\t    dispose_words (list);\n\n\t  number = t ? MB_STRLEN (t) : 0;\n\t  FREE (t);\n\t}\n    }\n"
}