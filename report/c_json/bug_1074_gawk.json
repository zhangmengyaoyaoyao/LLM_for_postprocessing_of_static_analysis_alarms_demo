{
    "Project": "gawk",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "ext.c",
    "message": "Offset: [1, +oo] Size: [0, +oo] by call to `install_symbol`.",
    "warning_function_name": "make_builtin",
    "warning_line": "symbol = install_symbol(estrdup(name, strlen(name)), Node_ext_func);",
    "warning_context": "awk_bool_t\nmake_builtin(const awk_ext_func_t *funcinfo)\n{\n\tNODE *symbol, *f;\n\tINSTRUCTION *b;\n\tconst char *sp;\n\tchar c;\n\tconst char *name = funcinfo->name;\n\tint count = funcinfo->num_expected_args;\n\n\tsp = name;\n\tif (sp == NULL || *sp == '\\0')\n\t\tfatal(_(\"make_builtin: missing function name\"));\n\n\tif (! is_letter(*sp))\n\t\treturn awk_false;\n\n\tfor (sp++; (c = *sp++) != '\\0';) {\n\t\tif (! is_identchar(c))\n\t\t\treturn awk_false;\n\t}\n\n\tf = lookup(name);\n\n\tif (f != NULL) {\n\t\tif (f->type == Node_func) {\n\t\t\t/* user-defined function */\n\t\t\tfatal(_(\"make_builtin: can't redefine function `%s'\"), name);\n\t\t} else if (f->type == Node_ext_func) {\n\t\t\t/* multiple extension() calls etc. */ \n\t\t\tif (do_lint)\n\t\t\t\tlintwarn(_(\"make_builtin: function `%s' already defined\"), name);\n\t\t\treturn awk_false;\n\t\t} else\n\t\t\t/* variable name etc. */ \n\t\t\tfatal(_(\"make_builtin: function name `%s' previously defined\"), name);\n\t} else if (check_special(name) >= 0)\n\t\tfatal(_(\"make_builtin: can't use gawk built-in `%s' as function name\"), name); \n\n\tif (count < 0)\n\t\tfatal(_(\"make_builtin: negative argument count for function `%s'\"),\n\t\t\t\tname);\n\n\tb = bcalloc(Op_symbol, 1, 0);\n\tb->extfunc = funcinfo->function;\n\tb->expr_count = count;\n\n\t/* NB: extension sub must return something */\n\n       \tsymbol = install_symbol(estrdup(name, strlen(name)), Node_ext_func);\n\tsymbol->code_ptr = b;\n\ttrack_ext_func(name);\n\treturn awk_true;\n}\n"
}