{
    "Project": "binutils",
    "Tool": "Infer",
    "category": "UNINITIALIZED_VALUE",
    "file": "opcodes/i386-dis.c",
    "message": "The value read from last[_] was never initialized.",
    "warning_function_name": "putop",
    "warning_line": "|| last[0] != 'L')",
    "warning_context": "static int\nputop (const char *in_template, int sizeflag)\n{\n  const char *p;\n  int alt = 0;\n  int cond = 1;\n  unsigned int l = 0, len = 1;\n  char last[4];\n\n#define SAVE_LAST(c)\t\t\t\\\n  if (l < len && l < sizeof (last))\t\\\n    last[l++] = c;\t\t\t\\\n  else\t\t\t\t\t\\\n    abort ();\n\n  for (p = in_template; *p; p++)\n    {\n      switch (*p)\n\t{\n\tdefault:\n\t  *obufp++ = *p;\n\t  break;\n\tcase '%':\n\t  len++;\n\t  break;\n\tcase '!':\n\t  cond = 0;\n\t  break;\n\tcase '{':\n\t  alt = 0;\n\t  if (intel_syntax)\n\t    {\n\t      while (*++p != '|')\n\t\tif (*p == '}' || *p == '\\0')\n\t\t  abort ();\n\t    }\n\t  /* Fall through.  */\n\tcase 'I':\n\t  alt = 1;\n\t  continue;\n\tcase '|':\n\t  while (*++p != '}')\n\t    {\n\t      if (*p == '\\0')\n\t\tabort ();\n\t    }\n\t  break;\n\tcase '}':\n\t  break;\n\tcase 'A':\n\t  if (intel_syntax)\n\t    break;\n\t  if (modrm.mod != 3 || (sizeflag & SUFFIX_ALWAYS))\n\t    *obufp++ = 'b';\n\t  break;\n\tcase 'B':\n\t  if (l == 0 && len == 1)\n\t    {\ncase_B:\n\t      if (intel_syntax)\n\t\tbreak;\n\t      if (sizeflag & SUFFIX_ALWAYS)\n\t\t*obufp++ = 'b';\n\t    }\n\t  else\n\t    {\n\t      if (l != 1\n\t\t  || len != 2\n\t\t  || last[0] != 'L')\n\t\t{\n\t\t  SAVE_LAST (*p);\n\t\t  break;\n\t\t}\n\n\t      if (address_mode == mode_64bit\n\t\t  && !(prefixes & PREFIX_ADDR))\n\t\t{\n\t\t  *obufp++ = 'a';\n\t\t  *obufp++ = 'b';\n\t\t  *obufp++ = 's';\n\t\t}\n\n\t      goto case_B;\n\t    }\n\t  break;\n\tcase 'C':\n\t  if (intel_syntax && !alt)\n\t    break;\n\t  if ((prefixes & PREFIX_DATA) || (sizeflag & SUFFIX_ALWAYS))\n\t    {\n\t      if (sizeflag & DFLAG)\n\t\t*obufp++ = intel_syntax ? 'd' : 'l';\n\t      else\n\t\t*obufp++ = intel_syntax ? 'w' : 's';\n\t      used_prefixes |= (prefixes & PREFIX_DATA);\n\t    }\n\t  break;\n\tcase 'D':\n\t  if (intel_syntax || !(sizeflag & SUFFIX_ALWAYS))\n\t    break;\n\t  USED_REX (REX_W);\n"
}