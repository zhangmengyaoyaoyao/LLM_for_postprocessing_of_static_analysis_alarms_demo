{
    "Project": "bash",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L1",
    "file": "assoc.c",
    "message": "Offset: 2 Size: 2 by call to `assoc_to_string`.",
    "warning_function_name": "assoc_patsub",
    "warning_line": "t = assoc_to_string (h2, \" \", 0);",
    "warning_context": "char *\nassoc_patsub (h, pat, rep, mflags)\n     HASH_TABLE *h;\n     char *pat, *rep;\n     int mflags;\n{\n  BUCKET_CONTENTS *tlist;\n  int i, slen;\n  HASH_TABLE *h2;\n  char\t*t, *sifs, *ifs;\n\n  if (h == 0 || assoc_empty (h))\n    return ((char *)NULL);\n\n  h2 = assoc_copy (h);\n  for (i = 0; i < h2->nbuckets; i++)\n    for (tlist = hash_items (i, h2); tlist; tlist = tlist->next)\n      {\n\tt = pat_subst ((char *)tlist->data, pat, rep, mflags);\n\tFREE (tlist->data);\n\ttlist->data = t;\n      }\n\n  if (mflags & MATCH_QUOTED)\n    assoc_quote (h2);\n  else\n    assoc_quote_escapes (h2);\n\n  if (mflags & MATCH_STARSUB)\n    {\n      assoc_remove_quoted_nulls (h2);\n      sifs = ifs_firstchar ((int *)NULL);\n      t = assoc_to_string (h2, sifs, 0);\n      free (sifs);\n    }\n  else if (mflags & MATCH_QUOTED)\n    {\n      /* ${array[@]} */\n      sifs = ifs_firstchar (&slen);\n      ifs = getifs ();\n      if (ifs == 0 || *ifs == 0)\n\t{\n\t  if (slen < 2)\n\t    sifs = xrealloc (sifs, 2);\n\t  sifs[0] = ' ';\n\t  sifs[1] = '\\0';\n\t}\n      t = assoc_to_string (h2, sifs, 0);\n      free(sifs);\n    }\n  else\n    t = assoc_to_string (h2, \" \", 0);\n\n  assoc_dispose (h2);\n\n  return t;\n}\n"
}