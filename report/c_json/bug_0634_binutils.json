{
    "project": "binutils",
    "tool": "Infer",
    "category": "NULL_DEREFERENCE",
    "file": "bfd/doc/chew.c",
    "message": "pointer `&out->write_idx` last assigned on line 666 could be null and is dereferenced by call to `cattext()` at line 674, column 4.",
    "warning_function_name": "courierize",
    "warning_line": "cattext (&out, \"\\n@example\\n\");",
    "warning_context": "static void\ncourierize ()\n{\n  string_type out;\n  unsigned int idx = 0;\n  int command = 0;\n\n  init_string (&out);\n\n  while (at (tos, idx))\n    {\n      if (at (tos, idx) == '\\n'\n\t  && (at (tos, idx +1 ) == '.'\n\t      || at (tos, idx + 1) == '|'))\n\t{\n\t  cattext (&out, \"\\n@example\\n\");\n\t  do\n\t    {\n\t      idx += 2;\n\n\t      while (at (tos, idx) && at (tos, idx) != '\\n')\n\t\t{\n\t\t  if (command > 1)\n\t\t    {\n\t\t      /* We are inside {} parameters of some command;\n\t\t\t Just pass through until matching brace.  */\n\t\t      if (at (tos, idx) == '{')\n\t\t\t++command;\n\t\t      else if (at (tos, idx) == '}')\n\t\t\t--command;\n\t\t    }\n\t\t  else if (command != 0)\n\t\t    {\n\t\t      if (at (tos, idx) == '{')\n\t\t\t++command;\n\t\t      else if (!islower ((unsigned char) at (tos, idx)))\n\t\t\t--command;\n\t\t    }\n\t\t  else if (at (tos, idx) == '@'\n\t\t\t   && islower ((unsigned char) at (tos, idx + 1)))\n\t\t    {\n\t\t      ++command;\n\t\t    }\n\t\t  else if (at (tos, idx) == '{' && at (tos, idx + 1) == '*')\n\t\t    {\n\t\t      cattext (&out, \"/*\");\n\t\t      idx += 2;\n\t\t      continue;\n\t\t    }\n\t\t  else if (at (tos, idx) == '*' && at (tos, idx + 1) == '}')\n\t\t    {\n\t\t      cattext (&out, \"*/\");\n\t\t      idx += 2;\n\t\t      continue;\n\t\t    }\n\t\t  else if (at (tos, idx) == '{'\n\t\t\t   || at (tos, idx) == '}')\n\t\t    {\n\t\t      catchar (&out, '@');\n\t\t    }\n\n\t\t  catchar (&out, at (tos, idx));\n\t\t  idx++;\n\t\t}\n\t      catchar (&out, '\\n');\n\t    }\n\t  while (at (tos, idx) == '\\n'\n\t\t && ((at (tos, idx + 1) == '.')\n\t\t     || (at (tos, idx + 1) == '|')))\n\t    ;\n\t  cattext (&out, \"@end example\");\n\t}\n      else\n\t{\n\t  catchar (&out, at (tos, idx));\n\t  idx++;\n\t}\n    }\n\n  overwrite_string (tos, &out);\n  pc++;\n}\n"
}