{
    "project": "gawk",
    "tool": "Infer",
    "category": "NULL_DEREFERENCE",
    "file": "symbol.c",
    "message": "pointer `table` last assigned on line 410 could be null and is dereferenced at line 416, column 4.",
    "warning_function_name": "get_symbols",
    "warning_line": "table[count++] = r;",
    "warning_context": "static NODE **\nget_symbols(SYMBOL_TYPE what, bool sort)\n{\n\tint i;\n\tNODE **table;\n\tNODE **list;\n\tNODE *r;\n\tlong count = 0;\n\tlong max;\n\tNODE *the_table;\n\n\t/*\n\t * assoc_list() returns an array with two elements per awk array\n\t * element. Elements i and i+1 in the C array represent the key\n\t * and value of element j in the awk array. Thus the loops use += 2\n\t * to go through the awk array.\n\t */\n\n\tif (what == FUNCTION) {\n\t\tthe_table = func_table;\n\t\tmax = the_table->table_size * 2;\n\n\t\tlist = assoc_list(the_table, \"@unsorted\", ASORTI);\n\t\temalloc(table, NODE **, (func_count + 1) * sizeof(NODE *), \"get_symbols\");\n\n\t\tfor (i = count = 0; i < max; i += 2) {\n\t\t\tr = list[i+1];\n\t\t\tif (r->type == Node_ext_func || r->type == Node_builtin_func)\n\t\t\t\tcontinue;\n\t\t\tassert(r->type == Node_func);\n\t\t\ttable[count++] = r;\n\t\t}\n\t} else {\t/* what == VARIABLE */\n\t\tupdate_global_values();\n\n\t\tthe_table = symbol_table;\n\t\tmax = the_table->table_size * 2;\n\n\t\tlist = assoc_list(the_table, \"@unsorted\", ASORTI);\n\t\temalloc(table, NODE **, (var_count + 1) * sizeof(NODE *), \"get_symbols\");\n\n\t\tfor (i = count = 0; i < max; i += 2) {\n\t\t\tr = list[i+1];\n\t\t\tif (r->type == Node_val)\t/* non-variable in SYMTAB */\n\t\t\t\tcontinue;\n\t\t\ttable[count++] = r;\n\t\t}\n\t}\n\n\tefree(list);\n\n\tif (sort && count > 1)\n\t\tqsort(table, count, sizeof(NODE *), comp_symbol);\t/* Shazzam! */\n\ttable[count] = NULL; /* null terminate the list */\n\treturn table;\n}\n"
}