{
    "project": "gawk",
    "tool": "CSA",
    "category": "core.NullDereference",
    "file": "builtin.c",
    "message": "Array access (from variable 'mb_indices') results in a null pointer dereference",
    "warning_function_name": "do_sub",
    "warning_line": "if ((gawk_mb_cur_max == 1 || (repllen > 0 && mb_indices[scan - repl] == 1))",
    "warning_context": "\t\t\t\t(void) force_number(t1);\n\t\t\t\td = get_number_d(t1);\n\t\t\t\tif ((t1->flags & NUMCUR) != 0)\n\t\t\t\t\tgoto set_how_many;\n\n\t\t\t\twarning(_(\"gensub: third argument `%.*s' treated as 1\"),\n\t\t\t\t\t\t(int) t1->stlen, t1->stptr);\n\t\t\t\thow_many = 1;\n\t\t\t}\n\t\t} else {\n\t\t\t(void) force_number(t1);\n\t\t\td = get_number_d(t1);\nset_how_many:\n\t\t\tif (d < 1)\n\t\t\t\thow_many = 1;\n\t\t\telse if (d < LONG_MAX)\n\t\t\t\thow_many = d;\n\t\t\telse\n\t\t\t\thow_many = LONG_MAX;\n\t\t\tif (d <= 0)\n\t\t\t\twarning(_(\"gensub: third argument %g treated as 1\"), d);\n\t\t}\n\t\tDEREF(t1);\n\n\t} else {\n\n\t\t/* take care of regexp early, in case re_update is fatal */\n\n\t\ttmp = PEEK(2);\n\t\trp = re_update(tmp);\n\n\t\tif ((flags & GSUB) != 0)\n\t\t\thow_many = -1;\n\n\t\t/* original string */\n\n\t\tif ((flags & LITERAL) != 0)\n\t\t\tt = POP_STRING();\n\t\telse {\n\t\t\tlhs = POP_ADDRESS();\n\t\t\tt = force_string(*lhs);\n\t\t}\n\t}\n\n\tglobal = (how_many == -1);\n\n\ts = POP_STRING();\t/* replacement text */\n\tdecr_sp();\t\t/* regexp, already updated above */\n\n\t/* do the search early to avoid work on non-match */\n\tif (research(rp, t->stptr, 0, t->stlen, RE_NEED_START) == -1 ||\n\t\t\tRESTART(rp, t->stptr) > t->stlen)\n\t\tgoto done;\n\n\tt->flags |= STRING;\n\n\ttext = t->stptr;\n\ttextlen = t->stlen;\n\n\trepl = s->stptr;\n\treplend = repl + s->stlen;\n\trepllen = replend - repl;\n\n\tampersands = 0;\n\n\t/*\n\t * Some systems' malloc() can't handle being called with an\n\t * argument of zero.  Thus we have to have some special case\n\t * code to check for `repllen == 0'.  This can occur for\n\t * something like:\n\t * \tsub(/foo/, \"\", mystring)\n\t * for example.\n\t */\n\tif (gawk_mb_cur_max > 1 && repllen > 0) {\n\t\temalloc(mb_indices, char *, repllen * sizeof(char), \"do_sub\");\n\t\tindex_multibyte_buffer(repl, mb_indices, repllen);\n\t}\n\n\tfor (scan = repl; scan < replend; scan++) {\n\t\tif ((gawk_mb_cur_max == 1 || (repllen > 0 && mb_indices[scan - repl] == 1))\n\t\t    && (*scan == '&')) {\n\t\t\trepllen--;\n\t\t\tampersands++;\n\t\t} else if (*scan == '\\\\') {\n\t\t\tif ((flags & GENSUB) != 0) {\t/* gensub, behave sanely */\n\t\t\t\tif (isdigit((unsigned char) scan[1])) {\n\t\t\t\t\tampersands++;\n\t\t\t\t\tscan++;\n\t\t\t\t} else {\t/* \\q for any q --> q */\n\t\t\t\t\trepllen--;\n\t\t\t\t\tscan++;\n\t\t\t\t}\n\t\t\t} else if (do_posix) {\n\t\t\t\t/* \\& --> &, \\\\ --> \\ */\n\t\t\t\tif (scan[1] == '&' || scan[1] == '\\\\') {\n\t\t\t\t\trepllen--;\n\t\t\t\t\tscan++;\n\t\t\t\t} /* else\n\t\t\t\t\tleave alone, it goes into the output */\n\t\t\t} else {\n\t\t\t\t/* gawk default behavior since 1996 */\n"
}