{
    "project": "binutils",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "binutils/nm.c",
    "message": "Offset: [1, +oo] Size: [0, +oo] by call to `bfd_check_format_matches`.",
    "warning_function_name": "display_archive",
    "warning_line": "if (bfd_check_format_matches (arfile, bfd_object, &matching))",
    "warning_context": "static void\ndisplay_archive (bfd *file)\n{\n  bfd *arfile = NULL;\n  bfd *last_arfile = NULL;\n  char **matching;\n\n  format->print_archive_filename (bfd_get_filename (file));\n\n  if (print_armap)\n    print_symdef_entry (file);\n\n  for (;;)\n    {\n      PROGRESS (1);\n\n      arfile = bfd_openr_next_archived_file (file, arfile);\n\n      if (arfile == NULL)\n\t{\n\t  if (bfd_get_error () != bfd_error_no_more_archived_files)\n\t    bfd_fatal (bfd_get_filename (file));\n\t  break;\n\t}\n\n      if (bfd_check_format_matches (arfile, bfd_object, &matching))\n\t{\n\t  set_print_width (arfile);\n\t  format->print_archive_member (bfd_get_filename (file),\n\t\t\t\t\tbfd_get_filename (arfile));\n\t  display_rel_file (arfile, file);\n\t}\n      else\n\t{\n\t  bfd_nonfatal (bfd_get_filename (arfile));\n\t  if (bfd_get_error () == bfd_error_file_ambiguously_recognized)\n\t    {\n\t      list_matching_formats (matching);\n\t      free (matching);\n\t    }\n\t}\n\n      if (last_arfile != NULL)\n\t{\n\t  bfd_close (last_arfile);\n\t  lineno_cache_bfd = NULL;\n\t  lineno_cache_rel_bfd = NULL;\n\t  if (arfile == last_arfile)\n\t    return;\n\t}\n      last_arfile = arfile;\n    }\n\n  if (last_arfile != NULL)\n    {\n      bfd_close (last_arfile);\n      lineno_cache_bfd = NULL;\n      lineno_cache_rel_bfd = NULL;\n    }\n}\n"
}