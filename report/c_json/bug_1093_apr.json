{
    "Project": "apr",
    "Tool": "Infer",
    "Bug Type": "UNINITIALIZED_VALUE",
    "Code_line": "            (*new)->thlock = thlock;",
    "Code_function": "APR_DECLARE(apr_status_t) apr_file_open(apr_file_t **new,\n                                        const char *fname,\n                                        apr_int32_t flag,\n                                        apr_fileperms_t perm,\n                                        apr_pool_t *pool)\n{\n    apr_os_file_t fd;\n    int oflags = 0;\n#if APR_HAS_THREADS\n    apr_thread_mutex_t *thlock;\n    apr_status_t rv;\n#endif\n\n    if ((flag & APR_FOPEN_READ) && (flag & APR_FOPEN_WRITE)) {\n        oflags = O_RDWR;\n    }\n    else if (flag & APR_FOPEN_READ) {\n        oflags = O_RDONLY;\n    }\n    else if (flag & APR_FOPEN_WRITE) {\n        oflags = O_WRONLY;\n    }\n    else {\n        return APR_EACCES;\n    }\n\n    if (flag & APR_FOPEN_CREATE) {\n        oflags |= O_CREAT;\n        if (flag & APR_FOPEN_EXCL) {\n            oflags |= O_EXCL;\n        }\n    }\n    if ((flag & APR_FOPEN_EXCL) && !(flag & APR_FOPEN_CREATE)) {\n        return APR_EACCES;\n    }\n\n    if (flag & APR_FOPEN_APPEND) {\n        oflags |= O_APPEND;\n    }\n    if (flag & APR_FOPEN_TRUNCATE) {\n        oflags |= O_TRUNC;\n    }\n#ifdef O_BINARY\n    if (flag & APR_FOPEN_BINARY) {\n        oflags |= O_BINARY;\n    }\n#endif\n\n    if (flag & APR_FOPEN_NONBLOCK) {\n#ifdef O_NONBLOCK\n        oflags |= O_NONBLOCK;\n#else\n        return APR_ENOTIMPL;\n#endif\n    }\n\n#ifdef O_CLOEXEC\n    /* Introduced in Linux 2.6.23. Silently ignored on earlier Linux kernels.\n     */\n    if (!(flag & APR_FOPEN_NOCLEANUP)) {\n        oflags |= O_CLOEXEC;\n}"
}