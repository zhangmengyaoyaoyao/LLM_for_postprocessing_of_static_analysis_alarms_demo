{
    "Project": "Zephyr",
    "Tool": "Infer",
    "category": "Uninitialized Value",
    "file": "subsys/net/lib/lwm2m/lwm2m_rd_client.c",
    "message": "The value read from obj_inst_id was never initialized.",
    "warning_function_name": "sm_select_next_sec_inst",
    "warning_line": "snprintk(pathstr, sizeof(pathstr), \"1/%d/1\",",
    "warning_context": "static int sm_select_next_sec_inst(bool bootstrap_server,\n\t\t\t\t   int *sec_obj_inst, u32_t *lifetime)\n{\n\tchar pathstr[MAX_RESOURCE_LEN];\n\tint ret, end, i, obj_inst_id, found = -1;\n\tbool temp;\n\n\t/* lookup existing index */\n\ti = lwm2m_security_inst_id_to_index(*sec_obj_inst);\n\tif (i < 0) {\n\t\t*sec_obj_inst = -1;\n\t\ti = -1;\n\t}\n\n\t/* store end marker, due to looping */\n\tend = (i == -1 ? CONFIG_LWM2M_SECURITY_INSTANCE_COUNT : i);\n\n\t/* loop through servers starting from the index after the current one */\n\tfor (i++; i < end; i++) {\n\t\tif (i >= CONFIG_LWM2M_SECURITY_INSTANCE_COUNT) {\n\t\t\ti = 0;\n\t\t}\n\n\t\tobj_inst_id = lwm2m_security_index_to_inst_id(i);\n\t\tif (obj_inst_id < 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t/* Query for bootstrap support */\n\t\tsnprintk(pathstr, sizeof(pathstr), \"0/%d/1\",\n\t\t\t obj_inst_id);\n\t\tret = lwm2m_engine_get_bool(pathstr, &temp);\n\t\tif (ret < 0) {\n\t\t\tcontinue;\n\t\t}\n\n#if defined(CONFIG_LWM2M_RD_CLIENT_SUPPORT_BOOTSTRAP)\n\t\tif (temp == bootstrap_server) {\n#else\n\t\tif (temp == false) {\n#endif\n\t\t\tfound = obj_inst_id;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (found > -1) {\n\t\t*sec_obj_inst = found;\n\n\t\t/* query the lifetime */\n\t\t/* TODO: use Short Server ID to link to server info */\n\t\tsnprintk(pathstr, sizeof(pathstr), \"1/%d/1\",\n\t\t\t obj_inst_id);\n\t\tif (lwm2m_engine_get_u32(pathstr, lifetime) < 0) {\n\t\t\t*lifetime = CONFIG_LWM2M_ENGINE_DEFAULT_LIFETIME;\n\t\t\tLOG_DBG(\"Using default lifetime: %u\", *lifetime);\n\t\t}\n\t}\n\n\tif (*sec_obj_inst < 0) {\n\t\t/* no servers found */\n\t\tLOG_WRN(\"sec_obj_inst: No matching servers found.\");\n\t\treturn -ENOENT;\n\t}\n\n\treturn 0;\n}\n\n/* state machine step functions */\n\nstatic int sm_do_init(void)\n{\n\tclient.ctx->sec_obj_inst = -1;\n\tclient.trigger_update = 0U;\n\tclient.lifetime = 0U;\n\n\t/* Do bootstrap or registration */\n#if defined(CONFIG_LWM2M_RD_CLIENT_SUPPORT_BOOTSTRAP)\n\tset_sm_state(ENGINE_DO_BOOTSTRAP_REG);\n#else\n\tset_sm_state(ENGINE_DO_REGISTRATION);\n#endif\n\treturn 0;\n}\n\n#if defined(CONFIG_LWM2M_RD_CLIENT_SUPPORT_BOOTSTRAP)\nstatic int sm_do_bootstrap_reg(void)\n{\n\tstruct lwm2m_message *msg;\n\tint ret;\n\n\t/* clear out existing connection data */\n\tif (client.ctx->sock_fd > -1) {\n\t\tlwm2m_engine_context_close(client.ctx);\n\t}\n\n\tclient.ctx->bootstrap_mode = true;\n\tret = sm_select_next_sec_inst(client.ctx->bootstrap_mode,\n\t\t\t\t      &client.ctx->sec_obj_inst,\n\t\t\t\t      &client.lifetime);\n\tif (ret < 0) {\n"
}