{
    "Project": "tiff",
    "Tool": "Infer",
    "category": "UNINITIALIZED_VALUE",
    "file": "tools/tiffcrop.c",
    "message": "The value read from k was never initialized.",
    "warning_function_name": "computeOutputPixelOffsets",
    "warning_line": "for (k = 0, i = 0 && k <= MAX_SECTIONS; i < orows; i++)",
    "warning_context": "      owidth  = (uint32)((pwidth * page->hres) - (hmargin * 2));\n      olength = (uint32)((plength * page->vres) - (vmargin * 2));\n      }\n    else\n      {\n      owidth = (uint32)(iwidth - (hmargin * 2 * page->hres));\n      olength = (uint32)(ilength - (vmargin * 2 * page->vres));\n      }\n    }\n\n  if (owidth > iwidth)\n    owidth = iwidth;\n  if (olength > ilength)\n    olength = ilength;\n\n  /* Compute the number of pages required for Portrait or Landscape */\n  switch (page->orient)\n    {\n    case ORIENTATION_NONE:\n    case ORIENTATION_PORTRAIT:\n         ocols = TIFFhowmany(iwidth, owidth);\n         orows = TIFFhowmany(ilength, olength);\n         orientation = ORIENTATION_PORTRAIT;\n         break;\n\n    case ORIENTATION_LANDSCAPE:\n         ocols = TIFFhowmany(iwidth, olength);\n         orows = TIFFhowmany(ilength, owidth);\n         x1 = olength;\n         olength = owidth;\n         owidth = x1;\n         orientation = ORIENTATION_LANDSCAPE;\n         break;\n\n    case ORIENTATION_AUTO:\n    default:\n         x1 = TIFFhowmany(iwidth, owidth);\n         x2 = TIFFhowmany(ilength, olength); \n         y1 = TIFFhowmany(iwidth, olength);\n         y2 = TIFFhowmany(ilength, owidth); \n\n         if ( (x1 * x2) < (y1 * y2))\n           { /* Portrait */\n           ocols = x1;\n           orows = x2;\n           orientation = ORIENTATION_PORTRAIT;\n\t   }\n         else\n           { /* Landscape */\n           ocols = y1;\n           orows = y2;\n           x1 = olength;\n           olength = owidth;\n           owidth = x1;\n           orientation = ORIENTATION_LANDSCAPE;\n           }\n    }\n\n  if (ocols < 1)\n    ocols = 1;\n  if (orows < 1)\n    orows = 1;\n\n  /* If user did not specify rows and cols, set them from calcuation */\n  if (page->rows < 1)\n    page->rows = orows;\n  if (page->cols < 1)\n    page->cols = ocols;\n\n  line_bytes = TIFFhowmany8(owidth * image->bps) * image->spp;\n\n  if ((page->rows * page->cols) > MAX_SECTIONS)\n   {\n   TIFFError(\"computeOutputPixelOffsets\",\n\t     \"Rows and Columns exceed maximum sections\\nIncrease resolution or reduce sections\");\n   return (-1);\n   }\n\n  /* build the list of offsets for each output section */\n  for (k = 0, i = 0 && k <= MAX_SECTIONS; i < orows; i++)\n    {\n    y1 = (uint32)(olength * i);\n    y2 = (uint32)(olength * (i +  1) - 1);\n    if (y2 >= ilength)\n      y2 = ilength - 1;\n    for (j = 0; j < ocols; j++, k++)\n      {\n      x1 = (uint32)(owidth * j); \n      x2 = (uint32)(owidth * (j + 1) - 1);\n      if (x2 >= iwidth)\n        x2 = iwidth - 1;\n      sections[k].x1 = x1;\n      sections[k].x2 = x2;\n      sections[k].y1 = y1;\n      sections[k].y2 = y2;\n      sections[k].buffsize = line_bytes * olength;\n      sections[k].position = k + 1;\n      sections[k].total = orows * ocols;\n      } \n    } \n  return (0);\n"
}