{
    "Project": "combine",
    "Tool": "Infer",
    "category": "NULL_DEREFERENCE",
    "file": "src/df_options.c",
    "message": "pointer `gs_data_input_field_delimiter->string` last assigned on line 1646 could be null and is dereferenced at line 1650, column 4.",
    "warning_function_name": "handle_cut_arguments",
    "warning_line": "gs_data_input_field_delimiter->string[0] = '\\0';",
    "warning_context": "int\nhandle_cut_arguments (argc, argv)\n     int argc;\n     char **argv;\n{\n  int c;\n  int i;\n  char const *short_options = CUT_COMMON_SHORT_OPTIONS;\n  version_etc_copyright = \"Copyright (C) 2002, 2003, 2004, 2013 Daniel P. Valentine\";\n\n  gi_data_write_ind = 1;\n  c = getopt_long (argc, argv, short_options, cut_long_options, NULL);\n  for (;;) {\n    if (c == -1) {\n      /* Handle data file names */\n      filecount = argc - optind;\n      filenames = argv + optind;\n      break;\n      }\n    else\n      switch (c) {\n      case 'b':\n      case 'c':\n\t/* FIXME: There should be better handling of characters. */\n\tcalculate_ranges (optarg, &gra_data_out_ranges, &gi_data_out_end_start,\n\t\t\t  &gi_data_out_range_count);\n\tif (gs_data_input_field_delimiter != NULL)\n\t  FATAL_ERROR (_\n\t\t       (\"bad combination of bytes and fields in cut emulation\"));\n\tbreak;\n      case 'd':\n\t/* If the delimiter string is empty, assume the user meant a null \n\t   character.  Otherwise, they'd have used -b. */\n\tif (strlen (optarg) == 0)\n\t  gs_data_input_field_delimiter = dstrdupstr (\"X\");\n\telse\n\t  gs_data_input_field_delimiter = dstrdupstr (optarg);\n\tif (gs_data_input_field_delimiter == NULL)\n\t  FATAL_ERROR (_(\"unable to allocate memory\"));\n\tif (strlen (optarg) == 0)\n\t  gs_data_input_field_delimiter->string[0] = '\\0';\n\tif (gs_output_field_delimiter == NULL)\n\t  gs_output_field_delimiter = gs_data_input_field_delimiter;\n\tbreak;\n      case 'f':\n\tcalculate_ranges (optarg, &gra_data_out_ranges, &gi_data_out_end_start,\n\t\t\t  &gi_data_out_range_count);\n\tif (gs_data_input_field_delimiter == NULL) {\n\t  gs_data_input_field_delimiter = dstrdupstr (\"\t\");\n\t  if (gs_data_input_field_delimiter == NULL)\n\t    FATAL_ERROR (_(\"unable to allocate memory\"));\n\t  }\n\tbreak;\n      case 's':\n\tbreak;\n      case CUT_OPT_OUTPUT_DELIMITER:\n\tif (strlen (optarg) == 0)\n\t  gs_output_field_delimiter = dstrdupstr (\"X\");\n\telse\n\t  gs_output_field_delimiter = dstrdupstr (optarg);\n\tif (gs_output_field_delimiter == NULL)\n\t  FATAL_ERROR (_(\"unable to allocate memory\"));\n\tif (strlen (optarg) == 0)\n\t  gs_output_field_delimiter->string[0] = '\\0';\n\tbreak;\n\tcase_GETOPT_HELP_CHAR;\n\tcase_GETOPT_VERSION_CHAR (PROGRAM_NAME, AUTHORS);\n      default:\n\tusage (EXIT_FAILURE);\n\t}\n    c = getopt_long (argc, argv, short_options, cut_long_options, NULL);\n    }\n  if (gi_data_out_end_start + gi_data_out_range_count == 0)\n    FATAL_ERROR (_(\"exactly one of -b, -c, or -f needed in cut emulation\"));\n  }\n"
}