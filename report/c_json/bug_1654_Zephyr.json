{
    "Project": "Zephyr",
    "Tool": "Infer",
    "Bug Type": "Uninitialized Value",
    "Code_line": "\t\tif (boot_magic_compatible_check(table->magic_primary_slot,",
    "Code_function": "int mcuboot_swap_type(void)\n{\n\tconst struct boot_swap_table *table;\n\tstruct boot_swap_state primary_slot;\n\tstruct boot_swap_state secondary_slot;\n\tint rc;\n\tsize_t i;\n\n\trc = boot_read_swap_state_by_id(FLASH_AREA_IMAGE_PRIMARY,\n\t\t\t\t\t&primary_slot);\n\tif (rc) {\n\t\treturn rc;\n\t}\n\n\trc = boot_read_swap_state_by_id(FLASH_AREA_IMAGE_SECONDARY,\n\t\t\t\t\t&secondary_slot);\n\tif (rc) {\n\t\treturn rc;\n\t}\n\n\tfor (i = 0; i < BOOT_SWAP_TABLES_COUNT; i++) {\n\t\ttable = boot_swap_tables + i;\n\n\t\tif (boot_magic_compatible_check(table->magic_primary_slot,\n\t\t\t\t\t\tprimary_slot.magic)\n\t\t    &&\n\t\t    boot_magic_compatible_check(table->magic_secondary_slot,\n\t\t\t\t\t\tsecondary_slot.magic)\n\t\t    &&\n\t\t    (table->image_ok_primary_slot == BOOT_FLAG_ANY   ||\n\t\t     table->image_ok_primary_slot == primary_slot.image_ok)\n\t\t    &&\n\t\t    (table->image_ok_secondary_slot == BOOT_FLAG_ANY ||\n\t\t     table->image_ok_secondary_slot == secondary_slot.image_ok)\n\t\t    &&\n\t\t    (table->copy_done_primary_slot == BOOT_FLAG_ANY  ||\n\t\t     table->copy_done_primary_slot == primary_slot.copy_done)) {\n\n\t\t\tassert(table->swap_type == BOOT_SWAP_TYPE_TEST ||\n\t\t\t       table->swap_type == BOOT_SWAP_TYPE_PERM ||\n\t\t\t       table->swap_type == BOOT_SWAP_TYPE_REVERT);\n\t\t\treturn table->swap_type;\n\t\t}\n\t}\n\n\treturn BOOT_SWAP_TYPE_NONE;\n}"
}