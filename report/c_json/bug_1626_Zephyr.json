{
    "project": "Zephyr",
    "tool": "Cppcheck",
    "category": "Null Pointer Dereference",
    "file": "samples/net/zperf/src/zperf_tcp_receiver.c",
    "message": "Null pointer dereference",
    "warning_function_name": "zperf_tcp_receiver_init",
    "warning_line": "if (MY_IP6ADDR && strlen(MY_IP6ADDR)) {",
    "warning_context": "void zperf_tcp_receiver_init(const struct shell *shell, int port)\n{\n\tstatic bool init_done;\n\tstruct net_context *context4 = NULL;\n\tstruct net_context *context6 = NULL;\n\tconst struct in_addr *in4_addr = NULL;\n\tconst struct in6_addr *in6_addr = NULL;\n\tint ret;\n\n\tif (init_done) {\n\t\tzperf_tcp_started();\n\t\treturn;\n\t}\n\n\ttcp_shell = shell;\n\n\tif (IS_ENABLED(CONFIG_NET_IPV6)) {\n\t\tin6_addr_my = zperf_get_sin6();\n\t}\n\n\tif (IS_ENABLED(CONFIG_NET_IPV4)) {\n\t\tin4_addr_my = zperf_get_sin();\n\t}\n\n\tif (IS_ENABLED(CONFIG_NET_IPV4)) {\n\t\tret = net_context_get(AF_INET, SOCK_STREAM, IPPROTO_TCP,\n\t\t\t\t      &context4);\n\t\tif (ret < 0) {\n\t\t\tshell_fprintf(shell, SHELL_WARNING,\n\t\t\t\t     \"Cannot get IPv4 TCP network context.\\n\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (MY_IP4ADDR && strlen(MY_IP4ADDR)) {\n\t\t\t/* Use Setting IP */\n\t\t\tret = zperf_get_ipv4_addr(shell, MY_IP4ADDR,\n\t\t\t\t\t\t  &in4_addr_my->sin_addr);\n\t\t\tif (ret < 0) {\n\t\t\t\tshell_fprintf(shell, SHELL_WARNING,\n\t\t\t\t\t      \"Unable to set IPv4\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t/* Use existing IP */\n\t\t\tin4_addr = zperf_get_default_if_in4_addr();\n\t\t\tif (!in4_addr) {\n\t\t\t\tshell_fprintf(shell, SHELL_WARNING,\n\t\t\t\t\t      \"Unable to get IPv4 by default\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmemcpy(&in4_addr_my->sin_addr, in4_addr,\n\t\t\t\tsizeof(struct in_addr));\n\t\t}\n\n\t\tshell_fprintf(shell, SHELL_NORMAL, \"Binding to %s\\n\",\n\t\t\t      net_sprint_ipv4_addr(&in4_addr_my->sin_addr));\n\n\t\tin4_addr_my->sin_port = htons(port);\n\t}\n\n\tif (IS_ENABLED(CONFIG_NET_IPV6)) {\n\t\tret = net_context_get(AF_INET6, SOCK_STREAM, IPPROTO_TCP,\n\t\t\t\t      &context6);\n\t\tif (ret < 0) {\n\t\t\tshell_fprintf(shell, SHELL_WARNING,\n\t\t\t\t     \"Cannot get IPv6 TCP network context.\\n\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (MY_IP6ADDR && strlen(MY_IP6ADDR)) {\n\t\t\t/* Use Setting IP */\n\t\t\tret = zperf_get_ipv6_addr(shell, MY_IP6ADDR,\n\t\t\t\t\t\t  MY_PREFIX_LEN_STR,\n\t\t\t\t\t\t  &in6_addr_my->sin6_addr);\n\t\t\tif (ret < 0) {\n\t\t\t\tshell_fprintf(shell, SHELL_WARNING,\n\t\t\t\t\t      \"Unable to set IPv6\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t/* Use existing IP */\n\t\t\tin6_addr = zperf_get_default_if_in6_addr();\n\t\t\tif (!in6_addr) {\n\t\t\t\tshell_fprintf(shell, SHELL_WARNING,\n\t\t\t\t\t      \"Unable to get IPv4 by default\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmemcpy(&in6_addr_my->sin6_addr, in6_addr,\n\t\t\t\tsizeof(struct in6_addr));\n\t\t}\n\n\t\tshell_fprintf(shell, SHELL_NORMAL, \"Binding to %s\\n\",\n\t\t\t      net_sprint_ipv6_addr(&in6_addr_my->sin6_addr));\n\n\t\tin6_addr_my->sin6_port = htons(port);\n\t}\n\n\tif (IS_ENABLED(CONFIG_NET_IPV6) && context6) {\n\t\tret = net_context_bind(context6,\n\t\t\t\t       (struct sockaddr *)in6_addr_my,\n\t\t\t\t       sizeof(struct sockaddr_in6));\n"
}