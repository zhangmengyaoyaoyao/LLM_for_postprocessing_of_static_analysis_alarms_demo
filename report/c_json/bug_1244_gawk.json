{
    "Project": "gawk",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "awkgram.c",
    "message": "Offset added: [33, 65] (‚áê 1 + [32, 64]) Size: [0, +oo] by call to `bcalloc`.",
    "warning_function_name": NaN,
    "warning_line": "#define LEX_IF 274",
    "warning_context": "#if YYDEBUG\nextern int yydebug;\n#endif\n\n/* Token type.  */\n#ifndef YYTOKENTYPE\n# define YYTOKENTYPE\n  enum yytokentype\n  {\n    FUNC_CALL = 258,\n    NAME = 259,\n    REGEXP = 260,\n    FILENAME = 261,\n    YNUMBER = 262,\n    YSTRING = 263,\n    RELOP = 264,\n    IO_OUT = 265,\n    IO_IN = 266,\n    ASSIGNOP = 267,\n    ASSIGN = 268,\n    MATCHOP = 269,\n    CONCAT_OP = 270,\n    SUBSCRIPT = 271,\n    LEX_BEGIN = 272,\n    LEX_END = 273,\n    LEX_IF = 274,\n    LEX_ELSE = 275,\n    LEX_RETURN = 276,\n    LEX_DELETE = 277,\n    LEX_SWITCH = 278,\n    LEX_CASE = 279,\n    LEX_DEFAULT = 280,\n    LEX_WHILE = 281,\n    LEX_DO = 282,\n    LEX_FOR = 283,\n    LEX_BREAK = 284,\n    LEX_CONTINUE = 285,\n    LEX_PRINT = 286,\n    LEX_PRINTF = 287,\n    LEX_NEXT = 288,\n    LEX_EXIT = 289,\n    LEX_FUNCTION = 290,\n    LEX_BEGINFILE = 291,\n    LEX_ENDFILE = 292,\n    LEX_GETLINE = 293,\n    LEX_NEXTFILE = 294,\n    LEX_IN = 295,\n    LEX_AND = 296,\n    LEX_OR = 297,\n    INCREMENT = 298,\n    DECREMENT = 299,\n    LEX_BUILTIN = 300,\n    LEX_LENGTH = 301,\n    LEX_EOF = 302,\n    LEX_INCLUDE = 303,\n    LEX_EVAL = 304,\n    LEX_LOAD = 305,\n    NEWLINE = 306,\n    SLASH_BEFORE_EQUAL = 307,\n    UNARY = 308\n  };\n#endif\n/* Tokens.  */\n#define FUNC_CALL 258\n#define NAME 259\n#define REGEXP 260\n#define FILENAME 261\n#define YNUMBER 262\n#define YSTRING 263\n#define RELOP 264\n#define IO_OUT 265\n#define IO_IN 266\n#define ASSIGNOP 267\n#define ASSIGN 268\n#define MATCHOP 269\n#define CONCAT_OP 270\n#define SUBSCRIPT 271\n#define LEX_BEGIN 272\n#define LEX_END 273\n#define LEX_IF 274\n#define LEX_ELSE 275\n#define LEX_RETURN 276\n#define LEX_DELETE 277\n#define LEX_SWITCH 278\n#define LEX_CASE 279\n#define LEX_DEFAULT 280\n#define LEX_WHILE 281\n#define LEX_DO 282\n#define LEX_FOR 283\n#define LEX_BREAK 284\n#define LEX_CONTINUE 285\n#define LEX_PRINT 286\n#define LEX_PRINTF 287\n#define LEX_NEXT 288\n#define LEX_EXIT 289\n#define LEX_FUNCTION 290\n#define LEX_BEGINFILE 291\n#define LEX_ENDFILE 292\n#define LEX_GETLINE 293\n#define LEX_NEXTFILE 294\n#define LEX_IN 295\n"
}