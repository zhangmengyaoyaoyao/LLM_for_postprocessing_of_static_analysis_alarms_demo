{
    "project": "gawk",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "profile.c",
    "message": "Offset: [1, +oo] Size: [0, +oo].",
    "warning_function_name": "pp_string",
    "warning_line": "*obufout++ = '\\\\';",
    "warning_context": "char *\npp_string(const char *in_str, size_t len, int delim)\n{\n\tstatic char str_escapes[] = \"\\a\\b\\f\\n\\r\\t\\v\\\\\";\n\tstatic char str_printables[] = \"abfnrtv\\\\\";\n\tstatic char re_escapes[] = \"\\a\\b\\f\\n\\r\\t\\v\";\n\tstatic char re_printables[] = \"abfnrtv\";\n\tchar *escapes;\n\tchar *printables;\n\tchar *cp;\n\tint i;\n\tconst unsigned char *str = (const unsigned char *) in_str;\n\tsize_t ofre, osiz;\n\tchar *obuf, *obufout;\n\n\tassert(delim == '\"' || delim == '/');\n\n\tif (delim == '/') {\n\t\tescapes = re_escapes;\n\t\tprintables = re_printables;\n\t} else {\n\t\tescapes = str_escapes;\n\t\tprintables = str_printables;\n\t}\n\n/* make space for something l big in the buffer */\n#define chksize(l)  if ((l) > ofre) { \\\n\t\tlong olen = obufout - obuf; \\\n\t\terealloc(obuf, char *, osiz * 2, \"pp_string\"); \\\n\t\tobufout = obuf + olen; \\\n\t\tofre += osiz; \\\n\t\tosiz *= 2; \\\n\t} ofre -= (l)\n\n\tosiz = len + 3 + 2; \t/* initial size; 3 for delim + terminating null */\n\temalloc(obuf, char *, osiz, \"pp_string\");\n\tobufout = obuf;\n\tofre = osiz - 1;\n\n\t*obufout++ = delim;\n\tfor (; len > 0; len--, str++) {\n\t\tchksize(2);\t\t/* make space for 2 chars */\n\t\tif (delim != '/' && *str == delim) {\n\t\t\t*obufout++ = '\\\\';\n\t\t\t*obufout++ = delim;\n\t\t} else if (*str == '\\0') {\n\t\t\tchksize(4);\n\n\t\t\t*obufout++ = '\\\\';\n\t\t\t*obufout++ = '0';\n\t\t\t*obufout++ = '0';\n\t\t\t*obufout++ = '0';\n\t\t} else if ((cp = strchr(escapes, *str)) != NULL) {\n\t\t\ti = cp - escapes;\n\t\t\t*obufout++ = '\\\\';\n\t\t\t*obufout++ = printables[i];\n\t\t/* NB: Deliberate use of lower-case versions. */\n\t\t} else if (isascii(*str) && isprint(*str)) {\n\t\t\t*obufout++ = *str;\n\t\t\tofre += 1;\n\t\t} else {\n\t\t\tsize_t len;\n\n\t\t\tchksize(8);\t\t/* total available space is 10 */\n\n\t\t\tsprintf(obufout, \"\\\\%03o\", *str & 0xff);\n\t\t\tlen = strlen(obufout);\n\t\t\tofre += (10 - len);\t /* adjust free space count */\n\t\t\tobufout += len;\n\t\t}\n\t}\n\tchksize(2);\n\t*obufout++ = delim;\n\t*obufout = '\\0';\n\treturn obuf;\n#undef chksize\n}\n"
}