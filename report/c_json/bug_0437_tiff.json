{
    "Project": "tiff",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Message": "Offset: [1, +oo] (⇐ [0, +oo] + 1) Size: [0, +oo] by call to `TIFFWriteLongArray`.",
    "Code_line": "\t\t\tif (!TIFFWriteLongArray(tif, dir, bp))",
    "Code_function": "TIFFWriteAnyArray(TIFF* tif,\n    TIFFDataType type, ttag_t tag, TIFFDirEntry* dir, uint32 n, double* v)\n{\n\tchar buf[10 * sizeof(double)];\n\tchar* w = buf;\n\tint i, status = 0;\n\n\tif (n * TIFFDataWidth(type) > sizeof buf) {\n\t\tw = (char*) _TIFFmalloc(n * TIFFDataWidth(type));\n\t\tif (w == NULL) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t\t\t     \"No space to write array\");\n\t\t\treturn (0);\n\t\t}\n\t}\n\n\tdir->tdir_tag = (uint16) tag;\n\tdir->tdir_type = (uint16) type;\n\tdir->tdir_count = n;\n\n\tswitch (type) {\n\tcase TIFF_BYTE:\n\t\t{\n\t\t\tuint8* bp = (uint8*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (uint8) v[i];\n\t\t\tif (!TIFFWriteByteArray(tif, dir, (char*) bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_SBYTE:\n\t\t{\n\t\t\tint8* bp = (int8*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (int8) v[i];\n\t\t\tif (!TIFFWriteByteArray(tif, dir, (char*) bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_SHORT:\n\t\t{\n\t\t\tuint16* bp = (uint16*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (uint16) v[i];\n\t\t\tif (!TIFFWriteShortArray(tif, dir, (uint16*)bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_SSHORT:\n\t\t{\n\t\t\tint16* bp = (int16*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (int16) v[i];\n\t\t\tif (!TIFFWriteShortArray(tif, dir, (uint16*)bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_LONG:\n\t\t{\n\t\t\tuint32* bp = (uint32*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (uint32) v[i];\n\t\t\tif (!TIFFWriteLongArray(tif, dir, bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_SLONG:\n\t\t{\n\t\t\tint32* bp = (int32*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (int32) v[i];\n\t\t\tif (!TIFFWriteLongArray(tif, dir, (uint32*) bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_FLOAT:\n\t\t{\n\t\t\tfloat* bp = (float*) w;\n\t\t\tfor (i = 0; i < (int) n; i++)\n\t\t\t\tbp[i] = (float) v[i];\n\t\t\tif (!TIFFWriteFloatArray(tif, dir, bp))\n\t\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n\tcase TIFF_DOUBLE:\n                {\n                    if( !TIFFWriteDoubleArray(tif, dir, v))\n                        goto out;\n                }\n\t\tbreak;\n\tdefault:\n\t\t/* TIFF_NOTYPE */\n\t\t/* TIFF_ASCII */\n\t\t/* TIFF_UNDEFINED */\n\t\t/* TIFF_RATIONAL */\n\t\t/* TIFF_SRATIONAL */\n\t\tgoto out;\n\t}\n\tstatus = 1;\n out:\n\tif (w != buf)\n\t\t_TIFFfree(w);\n\treturn (status);\n}"
}