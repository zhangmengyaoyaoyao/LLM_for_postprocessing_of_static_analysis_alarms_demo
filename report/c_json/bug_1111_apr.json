{
    "Project": "apr",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L1",
    "Message": "Offset: 18 Size: 8.",
    "Code_line": "    store_desc(SIGCONT, \"Continued\");",
    "Code_function": "void apr_signal_init(apr_pool_t *pglobal)\n{\n    int sig;\n\n    store_desc(0, \"Signal 0\");\n\n#ifdef SIGHUP\n    store_desc(SIGHUP, \"Hangup\");\n#endif\n#ifdef SIGINT\n    store_desc(SIGINT, \"Interrupt\");\n#endif\n#ifdef SIGQUIT\n    store_desc(SIGQUIT, \"Quit\");\n#endif\n#ifdef SIGILL\n    store_desc(SIGILL, \"Illegal instruction\");\n#endif\n#ifdef SIGTRAP\n    store_desc(SIGTRAP, \"Trace/BPT trap\");\n#endif\n#ifdef SIGIOT\n    store_desc(SIGIOT, \"IOT instruction\");\n#endif\n#ifdef SIGABRT\n    store_desc(SIGABRT, \"Abort\");\n#endif\n#ifdef SIGEMT\n    store_desc(SIGEMT, \"Emulator trap\");\n#endif\n#ifdef SIGFPE\n    store_desc(SIGFPE, \"Arithmetic exception\");\n#endif\n#ifdef SIGKILL\n    store_desc(SIGKILL, \"Killed\");\n#endif\n#ifdef SIGBUS\n    store_desc(SIGBUS, \"Bus error\");\n#endif\n#ifdef SIGSEGV\n    store_desc(SIGSEGV, \"Segmentation fault\");\n#endif\n#ifdef SIGSYS\n    store_desc(SIGSYS, \"Bad system call\");\n#endif\n#ifdef SIGPIPE\n    store_desc(SIGPIPE, \"Broken pipe\");\n#endif\n#ifdef SIGALRM\n    store_desc(SIGALRM, \"Alarm clock\");\n#endif\n#ifdef SIGTERM\n    store_desc(SIGTERM, \"Terminated\");\n#endif\n#ifdef SIGUSR1\n    store_desc(SIGUSR1, \"User defined signal 1\");\n#endif\n#ifdef SIGUSR2\n    store_desc(SIGUSR2, \"User defined signal 2\");\n#endif\n#ifdef SIGCLD\n    store_desc(SIGCLD, \"Child status change\");\n#endif\n#ifdef SIGCHLD\n    store_desc(SIGCHLD, \"Child status change\");\n#endif\n#ifdef SIGPWR\n    store_desc(SIGPWR, \"Power-fail restart\");\n#endif\n#ifdef SIGWINCH\n    store_desc(SIGWINCH, \"Window changed\");\n#endif\n#ifdef SIGURG\n    store_desc(SIGURG, \"urgent socket condition\");\n#endif\n#ifdef SIGPOLL\n    store_desc(SIGPOLL, \"Pollable event occurred\");\n#endif\n#ifdef SIGIO\n    store_desc(SIGIO, \"socket I/O possible\");\n#endif\n#ifdef SIGSTOP\n    store_desc(SIGSTOP, \"Stopped (signal)\");\n#endif\n#ifdef SIGTSTP\n    store_desc(SIGTSTP, \"Stopped\");\n#endif\n#ifdef SIGCONT\n    store_desc(SIGCONT, \"Continued\");\n#endif\n#ifdef SIGTTIN\n    store_desc(SIGTTIN, \"Stopped (tty input)\");\n#endif\n#ifdef SIGTTOU\n    store_desc(SIGTTOU, \"Stopped (tty output)\");\n#endif\n#ifdef SIGVTALRM\n    store_desc(SIGVTALRM, \"virtual timer expired\");\n#endif\n#ifdef SIGPROF\n    store_desc(SIGPROF, \"profiling timer expired\");\n#endif\n#ifdef SIGXCPU\n    store_desc(SIGXCPU, \"exceeded cpu limit\");\n#endif\n#ifdef SIGXFSZ\n    store_desc(SIGXFSZ, \"exceeded file size limit\");\n#endif\n\n    for (sig = 0; sig < APR_NUMSIG; ++sig)\n        if (signal_description[sig] == NULL)\n            signal_description[sig] = apr_psprintf(pglobal, \"signal #%d\", sig);\n}"
}