{
    "Project": "bash",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Code_line": "\t\tmaybe_add_history (history_value);",
    "Code_function": "pre_process_line (line, print_changes, addit)\n     char *line;\n     int print_changes, addit;\n{\n  char *history_value;\n  char *return_value;\n  int expanded;\n\n  return_value = line;\n  expanded = 0;\n\n#  if defined (BANG_HISTORY)\n  /* History expand the line.  If this results in no errors, then\n     add that line to the history if ADDIT is non-zero. */\n  if (!history_expansion_inhibited && history_expansion && history_expansion_p (line))\n    {\n      expanded = history_expand (line, &history_value);\n\n      if (expanded)\n\t{\n\t  if (print_changes)\n\t    {\n\t      if (expanded < 0)\n\t\tinternal_error (\"%s\", history_value);\n#if defined (READLINE)\n\t      else if (hist_verify == 0 || expanded == 2)\n#else\n\t      else\n#endif\n\t\tfprintf (stderr, \"%s\\n\", history_value);\n\t    }\n\n\t  /* If there was an error, return NULL. */\n\t  if (expanded < 0 || expanded == 2)\t/* 2 == print only */\n\t    {\n#    if defined (READLINE)\n\t      if (expanded == 2 && rl_dispatching == 0 && *history_value)\n#    else\n\t      if (expanded == 2 && *history_value)\n#    endif /* !READLINE */\n\t\tmaybe_add_history (history_value);\n\n\t      free (history_value);\n\n#    if defined (READLINE)\n\t      /* New hack.  We can allow the user to edit the\n\t\t failed history expansion. */\n\t      if (history_reediting && expanded < 0 && rl_done)\n\t\tre_edit (line);\n#    endif /* READLINE */\n\t      return ((char *)NULL);\n\t    }\n\n#    if defined (READLINE)\n\t  if (hist_verify && expanded == 1)\n\t    {\n\t      re_edit (history_value);\n\t      return ((char *)NULL);\n\t    }\n#    endif\n\t}\n\n      /* Let other expansions know that return_value can be free'ed,\n\t and that a line has been added to the history list.  Note\n\t that we only add lines that have something in them. */\n      expanded = 1;\n      return_value = history_value;\n    }\n#  endif /* BANG_HISTORY */\n\n  if (addit && remember_on_history && *return_value)\n    maybe_add_history (return_value);\n\n#if 0\n  if (expanded == 0)\n    return_value = savestring (line);\n#endif\n\n  return (return_value);\n}"
}