{
    "Project": "bash",
    "Tool": "CSA",
    "Bug Type": "core.NullDereference",
    "Message": "Array access (from variable 'export_env') results in a null pointer dereference",
    "Code_line": "      export_env[export_env_index = 0] = (char *)NULL;",
    "Code_function": "maybe_make_export_env ()\n{\n  register char **temp_array;\n  int new_size;\n  VAR_CONTEXT *tcxt;\n\n  if (array_needs_making)\n    {\n      if (export_env)\n\tstrvec_flush (export_env);\n\n      /* Make a guess based on how many shell variables and functions we\n\t have.  Since there will always be array variables, and array\n\t variables are not (yet) exported, this will always be big enough\n\t for the exported variables and functions. */\n      new_size = n_shell_variables () + HASH_ENTRIES (shell_functions) + 1 +\n\t\t HASH_ENTRIES (temporary_env);\n      if (new_size > export_env_size)\n\t{\n\t  export_env_size = new_size;\n\t  export_env = strvec_resize (export_env, export_env_size);\n\t  environ = export_env;\n\t}\n      export_env[export_env_index = 0] = (char *)NULL;\n\n      /* Make a dummy variable context from the temporary_env, stick it on\n\t the front of shell_variables, call make_var_export_array on the\n\t whole thing to flatten it, and convert the list of SHELL_VAR *s\n\t to the form needed by the environment. */\n      if (temporary_env)\n\t{\n\t  tcxt = new_var_context ((char *)NULL, 0);\n\t  tcxt->table = temporary_env;\n\t  tcxt->down = shell_variables;\n\t}\n      else\n\ttcxt = shell_variables;\n\n      temp_array = make_var_export_array (tcxt);\n      if (temp_array)\n\tadd_temp_array_to_env (temp_array, 0, 0);\n\n      if (tcxt != shell_variables)\n\tfree (tcxt);\n\n#if defined (RESTRICTED_SHELL)\n      /* Restricted shells may not export shell functions. */\n      temp_array = restricted ? (char **)0 : make_func_export_array ();\n#else\n      temp_array = make_func_export_array ();\n#endif\n      if (temp_array)\n\tadd_temp_array_to_env (temp_array, 0, 0);\n\n      array_needs_making = 0;\n    }\n}"
}