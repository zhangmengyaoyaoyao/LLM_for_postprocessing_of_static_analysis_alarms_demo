{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Message": "Offset added: [-20, 475] (⇐ [-236, 259] + 216) Size: 4064 by call to `bfd_zalloc`.",
    "Code_line": "      sdata = (struct bfd_elf_section_data *) bfd_zalloc (abfd,",
    "Code_function": "_bfd_elf_new_section_hook (bfd *abfd, asection *sec)\n{\n  struct bfd_elf_section_data *sdata;\n  const struct elf_backend_data *bed;\n  const struct bfd_elf_special_section *ssect;\n\n  sdata = (struct bfd_elf_section_data *) sec->used_by_bfd;\n  if (sdata == NULL)\n    {\n      sdata = (struct bfd_elf_section_data *) bfd_zalloc (abfd,\n                                                          sizeof (*sdata));\n      if (sdata == NULL)\n\treturn FALSE;\n      sec->used_by_bfd = sdata;\n    }\n\n  /* Indicate whether or not this section should use RELA relocations.  */\n  bed = get_elf_backend_data (abfd);\n  sec->use_rela_p = bed->default_use_rela_p;\n\n  /* When we read a file, we don't need to set ELF section type and\n     flags.  They will be overridden in _bfd_elf_make_section_from_shdr\n     anyway.  We will set ELF section type and flags for all linker\n     created sections.  If user specifies BFD section flags, we will\n     set ELF section type and flags based on BFD section flags in\n     elf_fake_sections.  Special handling for .init_array/.fini_array\n     output sections since they may contain .ctors/.dtors input\n     sections.  We don't want _bfd_elf_init_private_section_data to\n     copy ELF section type from .ctors/.dtors input sections.  */\n  if (abfd->direction != read_direction\n      || (sec->flags & SEC_LINKER_CREATED) != 0)\n    {\n      ssect = (*bed->get_sec_type_attr) (abfd, sec);\n      if (ssect != NULL\n\t  && (!sec->flags\n\t      || (sec->flags & SEC_LINKER_CREATED) != 0\n\t      || ssect->type == SHT_INIT_ARRAY\n\t      || ssect->type == SHT_FINI_ARRAY))\n\t{\n\t  elf_section_type (sec) = ssect->type;\n\t  elf_section_flags (sec) = ssect->attr;\n\t}\n    }\n\n  return _bfd_generic_new_section_hook (abfd, sec);\n}"
}