{
    "Project": "gawk",
    "Tool": "Infer",
    "category": "NULL_DEREFERENCE",
    "file": "debug.c",
    "message": "pointer `w` last assigned on line 3460 could be null and is dereferenced at line 3461, column 7.",
    "warning_function_name": "next_command",
    "warning_line": "if (w->silent)",
    "warning_context": "static void\nnext_command()\n{\n\tstatic int last_rule = 0;\n\tstruct list_item *d = NULL, *w = NULL;\n\tBREAKPOINT *b = NULL;\n\tSRCFILE *s;\n\n\tif (source == NULL) {\n\t\tstop.command = D_illegal;\n\t\tstop.check_func = NULL;\n\t\treturn;\n\t}\n\n\tif (stop.break_point) {\n\t\tb = find_breakpoint(stop.break_point);\n\t\tassert(b != NULL);\n\t\tif (b->silent)\n\t\t\tgoto no_output;\n\t} else if (stop.watch_point) {\n\t\tw = find_item(&watch_list, stop.watch_point);\n\t\tif (w->silent)\n\t\t\tgoto no_output;\n\t}\n\n\tif (cur_rule != last_rule) {\n\t\tfprintf(out_fp, _(\"Stopping in %s ...\\n\"), ruletab[cur_rule]);\n\t\tlast_rule = cur_rule;\n\t}\n\n\tif (b != NULL)\n\t\tfprintf(out_fp, \"Breakpoint %d, \", b->number);\n\telse if (w != NULL) {\n\t\tfprintf(out_fp, \"Watchpoint %d: \", w->number);\n\t\tprint_watch_item(w);\n\t}\n\n\t/* frame info */\t\n\tif (stop.print_frame) {\n\t\tprint_frame(frame_ptr->func_node, source, sourceline);\n\t\tfprintf(out_fp, \"\\n\");\n\t\tstop.print_frame = false;\n\t} \n\n\t(void) print_lines(source, sourceline, 1);\n\n\t/* automatic display of variables */\n\tfor (d = display_list.prev; d != &display_list; d = d->prev)\n\t\tdisplay(d);\n\nno_output:\n\t/* update last_printed_line, so that  output of 'list' is\n\t * centered around current sourceline\n\t */\n \n\tlast_printed_line = sourceline - list_size / 2;\n\tif (last_printed_line < 0)\n\t\tlast_printed_line = 0;\n\n\t/* update current source file */\t\n\ts = source_find(source);\n\tif (cur_srcfile != s) {\n\t\tif (cur_srcfile->fd != INVALID_HANDLE) {\n\t\t\tclose(cur_srcfile->fd);\n\t\t\tcur_srcfile->fd = INVALID_HANDLE;\n\t\t}\n\t\tcur_srcfile = s;\n\t}\n\n\tstop.command = D_illegal;\n\tstop.check_func = NULL;\n\n\tif (b != NULL) {\n\t\tint ret;\n\t\tret = execute_commands(&b->commands);\n\t\tif ((b->flags & BP_TEMP) != 0)\n\t\t\tdelete_breakpoint(b);\n\t\tif (ret)\t/* resume execution */\n\t\t\treturn;\n\t} else if (w != NULL && execute_commands(&w->commands))\n\t\treturn;\n\n\tread_command();\t\t/* zzparse */\n}\n"
}