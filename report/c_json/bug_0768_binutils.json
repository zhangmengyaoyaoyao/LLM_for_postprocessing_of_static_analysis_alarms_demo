{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L3",
    "Message": "Offset: [8, +oo] (⇐ [0, +oo] + 8) Size: [1, +oo] by call to `append_type`.",
    "Code_line": "\t  if (! append_type (info, \" vtable \"))",
    "Code_function": "pr_start_class_type (void *p, const char *tag, unsigned int id,\n\t\t     bfd_boolean structp, unsigned int size,\n\t\t     bfd_boolean vptr, bfd_boolean ownvptr)\n{\n  struct pr_handle *info = (struct pr_handle *) p;\n  char *tv = NULL;\n\n  info->indent += 2;\n\n  if (vptr && ! ownvptr)\n    {\n      tv = pop_type (info);\n      if (tv == NULL)\n\treturn FALSE;\n    }\n\n  if (! push_type (info, structp ? \"class \" : \"union class \"))\n    return FALSE;\n  if (tag != NULL)\n    {\n      if (! append_type (info, tag))\n\treturn FALSE;\n    }\n  else\n    {\n      char idbuf[20];\n\n      sprintf (idbuf, \"%%anon%u\", id);\n      if (! append_type (info, idbuf))\n\treturn FALSE;\n    }\n\n  if (! append_type (info, \" {\"))\n    return FALSE;\n  if (size != 0 || vptr || ownvptr || tag != NULL)\n    {\n      if (! append_type (info, \" /*\"))\n\treturn FALSE;\n\n      if (size != 0)\n\t{\n\t  char ab[20];\n\n\t  sprintf (ab, \"%u\", size);\n\t  if (! append_type (info, \" size \")\n\t      || ! append_type (info, ab))\n\t    return FALSE;\n\t}\n\n      if (vptr)\n\t{\n\t  if (! append_type (info, \" vtable \"))\n\t    return FALSE;\n\t  if (ownvptr)\n\t    {\n\t      if (! append_type (info, \"self \"))\n\t\treturn FALSE;\n\t    }\n\t  else\n\t    {\n\t      if (! append_type (info, tv)\n\t\t  || ! append_type (info, \" \"))\n\t\treturn FALSE;\n\t    }\n\t}\n\n      if (tag != NULL)\n\t{\n\t  char ab[30];\n\n\t  sprintf (ab, \" id %u\", id);\n\t  if (! append_type (info, ab))\n\t    return FALSE;\n\t}\n\n      if (! append_type (info, \" */\"))\n\treturn FALSE;\n    }\n\n  info->stack->visibility = DEBUG_VISIBILITY_PRIVATE;\n\n  return (append_type (info, \"\\n\")\n\t  && indent_type (info));\n}"
}