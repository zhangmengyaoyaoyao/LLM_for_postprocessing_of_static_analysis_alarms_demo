{
    "Project": "gawk",
    "Tool": "CSA",
    "category": "core.NullDereference",
    "file": "builtin.c",
    "message": "Dereference of null pointer",
    "warning_function_name": "do_sub",
    "warning_line": "*bp++ = *scan;",
    "warning_context": "\tbuf[buflen] = '\\0';\n\tbuf[buflen + 1] = '\\0';\n\n\tbp = buf;\n\tfor (current = 1;; current++) {\n\t\tmatches++;\n\t\tmatchstart = t->stptr + RESTART(rp, t->stptr);\n\t\tmatchend = t->stptr + REEND(rp, t->stptr);\n\n\t\t/*\n\t\t * create the result, copying in parts of the original\n\t\t * string \n\t\t */\n\t\tlen = matchstart - text + repllen\n\t\t      + ampersands * (matchend - matchstart);\n\t\tsofar = bp - buf;\n\t\twhile (buflen < (sofar + len + 1)) {\n\t\t\tbuflen *= 2;\n\t\t\terealloc(buf, char *, buflen, \"sub_common\");\n\t\t\tbp = buf + sofar;\n\t\t}\n\t\tfor (scan = text; scan < matchstart; scan++)\n\t\t\t*bp++ = *scan;\n\t\tif (global || current == how_many) {\n\t\t\t/*\n\t\t\t * If the current match matched the null string,\n\t\t\t * and the last match didn't and did a replacement,\n\t\t\t * and the match of the null string is at the front of\n\t\t\t * the text (meaning right after end of the previous\n\t\t\t * replacement), then skip this one.\n\t\t\t */\n\t\t\tif (matchstart == matchend\n\t\t\t    && lastmatchnonzero\n\t\t\t    && matchstart == text) {\n\t\t\t\tlastmatchnonzero = false;\n\t\t\t\tmatches--;\n\t\t\t\tgoto empty;\n\t\t\t}\n\t\t\t/*\n\t\t\t * If replacing all occurrences, or this is the\n\t\t\t * match we want, copy in the replacement text,\n\t\t\t * making substitutions as we go.\n\t\t\t */\n\t\t\tfor (scan = repl; scan < replend; scan++)\n\t\t\t\tif (*scan == '&'\n\t\t\t\t\t/*\n\t\t\t\t\t * Don't test repllen here. A simple \"&\" could\n\t\t\t\t\t * end up with repllen == 0.\n\t\t\t\t\t */\n\t\t\t\t\t&& (gawk_mb_cur_max == 1\n\t\t\t\t\t\t|| mb_indices[scan - repl] == 1)\n\t\t\t\t) {\n\t\t\t\t\t\tfor (cp = matchstart; cp < matchend; cp++)\n\t\t\t\t\t\t\t\t*bp++ = *cp;\n\t\t\t\t} else if (*scan == '\\\\'\n\t\t\t\t\t&& (gawk_mb_cur_max == 1\n\t\t\t\t\t\t|| (repllen > 0 && mb_indices[scan - repl] == 1))\n\t\t\t\t) {\n\t\t\t\t\tif (flags & GENSUB) {\t/* gensub, behave sanely */\n\t\t\t\t\t\tif (isdigit((unsigned char) scan[1])) {\n\t\t\t\t\t\t\tint dig = scan[1] - '0';\n\t\t\t\t\t\t\tif (dig < NUMSUBPATS(rp, t->stptr) && SUBPATSTART(rp, tp->stptr, dig) != -1) {\n\t\t\t\t\t\t\t\tchar *start, *end;\n\t\t\n\t\t\t\t\t\t\t\tstart = t->stptr\n\t\t\t\t\t\t\t\t      + SUBPATSTART(rp, t->stptr, dig);\n\t\t\t\t\t\t\t\tend = t->stptr\n\t\t\t\t\t\t\t\t      + SUBPATEND(rp, t->stptr, dig);\n\n\t\t\t\t\t\t\t\tfor (cp = start; cp < end; cp++)\n\t\t\t\t\t\t\t\t\t*bp++ = *cp;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tscan++;\n\t\t\t\t\t\t} else\t/* \\q for any q --> q */\n\t\t\t\t\t\t\t*bp++ = *++scan;\n\t\t\t\t\t} else if (do_posix) {\n\t\t\t\t\t\t/* \\& --> &, \\\\ --> \\ */\n\t\t\t\t\t\tif (scan[1] == '&' || scan[1] == '\\\\')\n\t\t\t\t\t\t\tscan++;\n\t\t\t\t\t\t*bp++ = *scan;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* gawk default behavior since 1996 */\n\t\t\t\t\t\tif (strncmp(scan, \"\\\\\\\\\\\\&\", 4) == 0) {\n\t\t\t\t\t\t\t/* \\\\\\& --> \\& */\n\t\t\t\t\t\t\t*bp++ = '\\\\';\n\t\t\t\t\t\t\t*bp++ = '&';\n\t\t\t\t\t\t\tscan += 3;\n\t\t\t\t\t\t} else if (strncmp(scan, \"\\\\\\\\&\", 3) == 0) {\n\t\t\t\t\t\t\t/* \\\\& --> \\<string> */\n\t\t\t\t\t\t\t*bp++ = '\\\\';\n\t\t\t\t\t\t\tfor (cp = matchstart; cp < matchend; cp++)\n\t\t\t\t\t\t\t\t*bp++ = *cp;\n\t\t\t\t\t\t\tscan += 2;\n\t\t\t\t\t\t} else if (scan[1] == '&') {\n\t\t\t\t\t\t\t/* \\& --> & */\n\t\t\t\t\t\t\t*bp++ = '&';\n\t\t\t\t\t\t\tscan++;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t*bp++ = *scan;\n\t\t\t\t\t}\n\t\t\t\t} else\n"
}