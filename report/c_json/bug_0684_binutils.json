{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L2",
    "Message": "Offset: [0, 11] Size: 11.",
    "Code_line": "  print_header (SItab[log_scale].prefix);",
    "Code_function": "hist_print ()\n{\n  Sym **time_sorted_syms, *top_dog, *sym;\n  unsigned int sym_index;\n  unsigned log_scale;\n  double top_time;\n  bfd_vma addr;\n\n  if (first_output)\n    first_output = FALSE;\n  else\n    printf (\"\\f\\n\");\n\n  accum_time = 0.0;\n\n  if (bsd_style_output)\n    {\n      if (print_descriptions)\n\t{\n\t  printf (_(\"\\n\\n\\nflat profile:\\n\"));\n\t  flat_blurb (stdout);\n\t}\n    }\n  else\n    {\n      printf (_(\"Flat profile:\\n\"));\n    }\n\n  /* Sort the symbol table by time (call-count and name as secondary\n     and tertiary keys).  */\n  time_sorted_syms = (Sym **) xmalloc (symtab.len * sizeof (Sym *));\n\n  for (sym_index = 0; sym_index < symtab.len; ++sym_index)\n    time_sorted_syms[sym_index] = &symtab.base[sym_index];\n\n  qsort (time_sorted_syms, symtab.len, sizeof (Sym *), cmp_time);\n\n  if (bsd_style_output)\n    {\n      log_scale = 5;\t\t/* Milli-seconds is BSD-default.  */\n    }\n  else\n    {\n      /* Search for symbol with highest per-call\n\t execution time and scale accordingly.  */\n      log_scale = 0;\n      top_dog = 0;\n      top_time = 0.0;\n\n      for (sym_index = 0; sym_index < symtab.len; ++sym_index)\n\t{\n\t  sym = time_sorted_syms[sym_index];\n\n\t  if (sym->ncalls != 0)\n\t    {\n\t      double call_time;\n\n\t      call_time = (sym->hist.time + sym->cg.child_time) / sym->ncalls;\n\n\t      if (call_time > top_time)\n\t\t{\n\t\t  top_dog = sym;\n\t\t  top_time = call_time;\n\t\t}\n\t    }\n\t}\n\n      if (top_dog && top_dog->ncalls != 0 && top_time > 0.0)\n\t{\n\t  top_time /= hz;\n\n\t  for (log_scale = 0; log_scale < ARRAY_SIZE (SItab); log_scale ++)\n\t    {\n\t      double scaled_value = SItab[log_scale].scale * top_time;\n\n\t      if (scaled_value >= 1.0 && scaled_value < 1000.0)\n\t\tbreak;\n\t    }\n\t}\n    }\n\n  /* For now, the dimension is always seconds.  In the future, we\n     may also want to support other (pseudo-)dimensions (such as\n     I-cache misses etc.).  */\n  print_header (SItab[log_scale].prefix);\n\n  for (sym_index = 0; sym_index < symtab.len; ++sym_index)\n    {\n      addr = time_sorted_syms[sym_index]->addr;\n\n      /* Print symbol if its in INCL_FLAT table or that table\n\tis empty and the symbol is not in EXCL_FLAT.  */\n      if (sym_lookup (&syms[INCL_FLAT], addr)\n\t  || (syms[INCL_FLAT].len == 0\n\t      && !sym_lookup (&syms[EXCL_FLAT], addr)))\n\tprint_line (time_sorted_syms[sym_index], SItab[log_scale].scale);\n    }\n\n  free (time_sorted_syms);\n\n  if (print_descriptions && !bsd_style_output)\n    flat_blurb (stdout);\n}"
}