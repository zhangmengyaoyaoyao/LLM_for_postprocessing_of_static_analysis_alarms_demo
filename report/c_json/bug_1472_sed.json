{
    "Project": "sed",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_S2",
    "file": "sed/sed.c",
    "message": "Offset: [`optarg->strlen` + 1, `optarg->strlen` + 1] (⇐ 1 + `optarg->strlen`) Size: [1, `optarg->strlen` + 2].",
    "warning_function_name": "main",
    "warning_line": "strcpy (in_place_extension + 1, optarg);",
    "warning_context": "    {\"posix\", 0, NULL, 'p'},\n    {\"silent\", 0, NULL, 'n'},\n    {\"separate\", 0, NULL, 's'},\n    {\"unbuffered\", 0, NULL, 'u'},\n    {\"version\", 0, NULL, 'v'},\n    {\"help\", 0, NULL, 'h'},\n#ifdef ENABLE_FOLLOW_SYMLINKS\n    {\"follow-symlinks\", 0, NULL, 'F'},\n#endif\n    {NULL, 0, NULL, 0}\n  };\n\n  int opt;\n  int return_code;\n  const char *cols = getenv(\"COLS\");\n\n  program_name = argv[0];\n  initialize_main (&argc, &argv);\n#if HAVE_SETLOCALE\n  /* Set locale according to user's wishes.  */\n  setlocale (LC_ALL, \"\");\n#endif\n  initialize_mbcs ();\n\n#if ENABLE_NLS\n\n  /* Tell program which translations to use and where to find.  */\n  bindtextdomain (PACKAGE, LOCALEDIR);\n  textdomain (PACKAGE);\n#endif\n\n  if (getenv(\"POSIXLY_CORRECT\") != NULL)\n    posixicity = POSIXLY_CORRECT;\n  else\n    posixicity = POSIXLY_EXTENDED;\n\n  /* If environment variable `COLS' is set, use its value for\n     the baseline setting of `lcmd_out_line_len'.  The \"-1\"\n     is to avoid gratuitous auto-line-wrap on ttys.\n   */\n  if (cols)\n    {\n      countT t = ATOI(cols);\n      if (t > 1)\n\tlcmd_out_line_len = t-1;\n    }\n\n  myname = *argv;\n  while ((opt = getopt_long(argc, argv, SHORTOPTS, longopts, NULL)) != EOF)\n    {\n      switch (opt)\n\t{\n\tcase 'n':\n\t  no_default_output = true;\n\t  break;\n\tcase 'e':\n\t  the_program = compile_string(the_program, optarg, strlen(optarg));\n\t  break;\n\tcase 'f':\n\t  the_program = compile_file(the_program, optarg);\n\t  break;\n\n\tcase 'F':\n\t  follow_symlinks = true;\n\t  break;\n\n\tcase 'i':\n\t  separate_files = true;\n\t  if (optarg == NULL)\n\t    /* use no backups */\n\t    in_place_extension = ck_strdup (\"*\");\n\n\t  else if (strchr(optarg, '*') != NULL)\n\t    in_place_extension = ck_strdup(optarg);\n\n\t  else\n\t    {\n\t      in_place_extension = MALLOC (strlen(optarg) + 2, char);\n\t      in_place_extension[0] = '*';\n\t      strcpy (in_place_extension + 1, optarg);\n\t    }\n\n\t  break;\n\n\tcase 'l':\n\t  lcmd_out_line_len = ATOI(optarg);\n\t  break;\n\n\tcase 'p':\n\t  posixicity = POSIXLY_BASIC;\n\t  break;\n\n        case 'b':\n\t  read_mode = \"rb\";\n\t  break;\n\n\t/* Undocumented, for compatibility with BSD sed.  */\n\tcase 'E':\n\tcase 'r':\n\t  if (extended_regexp_flags)\n\t    usage(4);\n"
}