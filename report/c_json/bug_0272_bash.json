{
    "project": "bash",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L1",
    "file": "lib/readline/readline.c",
    "message": "Offset: [5, +oo] Size: 4 by call to `rl_bind_keyseq_if_unbound`.",
    "warning_function_name": "bind_arrow_keys_internal",
    "warning_line": "rl_bind_keyseq_if_unbound (\"\\033[A\", rl_get_previous_history);",
    "warning_context": "static void\nbind_arrow_keys_internal (map)\n     Keymap map;\n{\n  Keymap xkeymap;\n\n  xkeymap = _rl_keymap;\n  _rl_keymap = map;\n\n#if defined (__MSDOS__)\n  rl_bind_keyseq_if_unbound (\"\\033[0A\", rl_get_previous_history);\n  rl_bind_keyseq_if_unbound (\"\\033[0B\", rl_backward_char);\n  rl_bind_keyseq_if_unbound (\"\\033[0C\", rl_forward_char);\n  rl_bind_keyseq_if_unbound (\"\\033[0D\", rl_get_next_history);\n#endif\n\n  rl_bind_keyseq_if_unbound (\"\\033[A\", rl_get_previous_history);\n  rl_bind_keyseq_if_unbound (\"\\033[B\", rl_get_next_history);\n  rl_bind_keyseq_if_unbound (\"\\033[C\", rl_forward_char);\n  rl_bind_keyseq_if_unbound (\"\\033[D\", rl_backward_char);\n  rl_bind_keyseq_if_unbound (\"\\033[H\", rl_beg_of_line);\n  rl_bind_keyseq_if_unbound (\"\\033[F\", rl_end_of_line);\n\n  rl_bind_keyseq_if_unbound (\"\\033OA\", rl_get_previous_history);\n  rl_bind_keyseq_if_unbound (\"\\033OB\", rl_get_next_history);\n  rl_bind_keyseq_if_unbound (\"\\033OC\", rl_forward_char);\n  rl_bind_keyseq_if_unbound (\"\\033OD\", rl_backward_char);\n  rl_bind_keyseq_if_unbound (\"\\033OH\", rl_beg_of_line);\n  rl_bind_keyseq_if_unbound (\"\\033OF\", rl_end_of_line);\n\n#if defined (__MINGW32__)\n  rl_bind_keyseq_if_unbound (\"\\340H\", rl_get_previous_history);\n  rl_bind_keyseq_if_unbound (\"\\340P\", rl_get_next_history);\n  rl_bind_keyseq_if_unbound (\"\\340M\", rl_forward_char);\n  rl_bind_keyseq_if_unbound (\"\\340K\", rl_backward_char);\n  rl_bind_keyseq_if_unbound (\"\\340G\", rl_beg_of_line);\n  rl_bind_keyseq_if_unbound (\"\\340O\", rl_end_of_line);\n  rl_bind_keyseq_if_unbound (\"\\340S\", rl_delete);\n  rl_bind_keyseq_if_unbound (\"\\340R\", rl_overwrite_mode);\n\n  /* These may or may not work because of the embedded NUL. */\n  rl_bind_keyseq_if_unbound (\"\\\\000H\", rl_get_previous_history);\n  rl_bind_keyseq_if_unbound (\"\\\\000P\", rl_get_next_history);\n  rl_bind_keyseq_if_unbound (\"\\\\000M\", rl_forward_char);\n  rl_bind_keyseq_if_unbound (\"\\\\000K\", rl_backward_char);\n  rl_bind_keyseq_if_unbound (\"\\\\000G\", rl_beg_of_line);\n  rl_bind_keyseq_if_unbound (\"\\\\000O\", rl_end_of_line);\n  rl_bind_keyseq_if_unbound (\"\\\\000S\", rl_delete);\n  rl_bind_keyseq_if_unbound (\"\\\\000R\", rl_overwrite_mode);\n#endif\n\n  _rl_keymap = xkeymap;\n}\n"
}