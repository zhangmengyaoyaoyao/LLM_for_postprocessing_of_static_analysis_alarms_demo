{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_S2",
    "Message": "Offset added: [`info->symbols_size` + 12, `info->symbols_size` + 12] (⇐ `info->symbols_size` + 12) Size: [1, +oo].",
    "Code_line": "  memcpy (info->symbols + info->symbols_size, sym, STAB_SYMBOL_SIZE);",
    "Code_function": "stab_write_symbol (struct stab_write_handle *info, int type, int desc,\n\t\t   bfd_vma value, const char *string)\n{\n  bfd_size_type strx;\n  bfd_byte sym[STAB_SYMBOL_SIZE];\n\n  if (string == NULL)\n    strx = 0;\n  else\n    {\n      struct string_hash_entry *h;\n\n      h = string_hash_lookup (&info->strhash, string, TRUE, TRUE);\n      if (h == NULL)\n\t{\n\t  non_fatal (_(\"string_hash_lookup failed: %s\"),\n\t\t     bfd_errmsg (bfd_get_error ()));\n\t  return FALSE;\n\t}\n      if (h->index != -1)\n\tstrx = h->index;\n      else\n\t{\n\t  strx = info->strings_size;\n\t  h->index = strx;\n\t  if (info->last_string == NULL)\n\t    info->strings = h;\n\t  else\n\t    info->last_string->next = h;\n\t  info->last_string = h;\n\t  info->strings_size += strlen (string) + 1;\n\t}\n    }\n\n  /* This presumes 32 bit values.  */\n  bfd_put_32 (info->abfd, strx, sym);\n  bfd_put_8 (info->abfd, type, sym + 4);\n  bfd_put_8 (info->abfd, 0, sym + 5);\n  bfd_put_16 (info->abfd, desc, sym + 6);\n  bfd_put_32 (info->abfd, value, sym + 8);\n\n  if (info->symbols_size + STAB_SYMBOL_SIZE > info->symbols_alloc)\n    {\n      info->symbols_alloc *= 2;\n      info->symbols = (bfd_byte *) xrealloc (info->symbols,\n\t\t\t\t\t     info->symbols_alloc);\n    }\n\n  memcpy (info->symbols + info->symbols_size, sym, STAB_SYMBOL_SIZE);\n\n  info->symbols_size += STAB_SYMBOL_SIZE;\n\n  return TRUE;\n}"
}