{
    "Project": "binutils",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "bfd/syms.c",
    "message": "Offset added: [-20, 219] (⇐ [-108, 131] + 88) Size: 4064 by call to `bfd_zalloc`.",
    "warning_function_name": "_bfd_stab_section_find_nearest_line",
    "warning_line": "info = (struct stab_find_info *) bfd_zalloc (abfd, amt);",
    "warning_context": "bfd_boolean\n_bfd_stab_section_find_nearest_line (bfd *abfd,\n\t\t\t\t     asymbol **symbols,\n\t\t\t\t     asection *section,\n\t\t\t\t     bfd_vma offset,\n\t\t\t\t     bfd_boolean *pfound,\n\t\t\t\t     const char **pfilename,\n\t\t\t\t     const char **pfnname,\n\t\t\t\t     unsigned int *pline,\n\t\t\t\t     void **pinfo)\n{\n  struct stab_find_info *info;\n  bfd_size_type stabsize, strsize;\n  bfd_byte *stab, *str;\n  bfd_byte *nul_fun, *nul_str;\n  bfd_size_type stroff;\n  struct indexentry *indexentry;\n  char *file_name;\n  char *directory_name;\n  bfd_boolean saw_line, saw_func;\n\n  *pfound = FALSE;\n  *pfilename = bfd_get_filename (abfd);\n  *pfnname = NULL;\n  *pline = 0;\n\n  /* Stabs entries use a 12 byte format:\n       4 byte string table index\n       1 byte stab type\n       1 byte stab other field\n       2 byte stab desc field\n       4 byte stab value\n     FIXME: This will have to change for a 64 bit object format.\n\n     The stabs symbols are divided into compilation units.  For the\n     first entry in each unit, the type of 0, the value is the length\n     of the string table for this unit, and the desc field is the\n     number of stabs symbols for this unit.  */\n\n#define STRDXOFF (0)\n#define TYPEOFF (4)\n#define OTHEROFF (5)\n#define DESCOFF (6)\n#define VALOFF (8)\n#define STABSIZE (12)\n\n  info = (struct stab_find_info *) *pinfo;\n  if (info != NULL)\n    {\n      if (info->stabsec == NULL || info->strsec == NULL)\n\t{\n\t  /* No stabs debugging information.  */\n\t  return TRUE;\n\t}\n\n      stabsize = (info->stabsec->rawsize\n\t\t  ? info->stabsec->rawsize\n\t\t  : info->stabsec->size);\n      strsize = (info->strsec->rawsize\n\t\t ? info->strsec->rawsize\n\t\t : info->strsec->size);\n    }\n  else\n    {\n      long reloc_size, reloc_count;\n      arelent **reloc_vector;\n      int i;\n      char *function_name;\n      bfd_size_type amt = sizeof *info;\n\n      info = (struct stab_find_info *) bfd_zalloc (abfd, amt);\n      if (info == NULL)\n\treturn FALSE;\n\n      /* FIXME: When using the linker --split-by-file or\n\t --split-by-reloc options, it is possible for the .stab and\n\t .stabstr sections to be split.  We should handle that.  */\n\n      info->stabsec = bfd_get_section_by_name (abfd, \".stab\");\n      info->strsec = bfd_get_section_by_name (abfd, \".stabstr\");\n\n      if (info->stabsec == NULL || info->strsec == NULL)\n\t{\n\t  /* Try SOM section names.  */\n\t  info->stabsec = bfd_get_section_by_name (abfd, \"$GDB_SYMBOLS$\");\n\t  info->strsec  = bfd_get_section_by_name (abfd, \"$GDB_STRINGS$\");\n\n\t  if (info->stabsec == NULL || info->strsec == NULL)\n\t    {\n\t      /* No stabs debugging information.  Set *pinfo so that we\n\t\t can return quickly in the info != NULL case above.  */\n\t      *pinfo = info;\n\t      return TRUE;\n\t    }\n\t}\n\n      stabsize = (info->stabsec->rawsize\n\t\t  ? info->stabsec->rawsize\n\t\t  : info->stabsec->size);\n      stabsize = (stabsize / STABSIZE) * STABSIZE;\n      strsize = (info->strsec->rawsize\n"
}