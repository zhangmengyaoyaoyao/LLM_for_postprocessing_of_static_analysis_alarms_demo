{
    "project": "gawk",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "main.c",
    "message": "Offset: 23 Size: [0, 25] by call to `update_PROCINFO_str`.",
    "warning_function_name": "load_procinfo",
    "warning_line": "update_PROCINFO_str(\"strftime\", def_strftime_format);",
    "warning_context": "static NODE *\nload_procinfo()\n{\n#if defined (HAVE_GETGROUPS) && defined(NGROUPS_MAX) && NGROUPS_MAX > 0\n\tint i;\n#endif\n#if (defined (HAVE_GETGROUPS) && defined(NGROUPS_MAX) && NGROUPS_MAX > 0) || defined(HAVE_MPFR)\n\tchar name[100];\n#endif\n\tAWKNUM value;\n\tstatic bool been_here = false;\n\n\tif (been_here)\n\t\treturn PROCINFO_node;\n\n\tbeen_here = true;\n\n\tPROCINFO_node = install_symbol(estrdup(\"PROCINFO\", 8), Node_var_array);\n\n\tupdate_PROCINFO_str(\"version\", VERSION);\n\tupdate_PROCINFO_str(\"strftime\", def_strftime_format);\n\n#ifdef HAVE_MPFR\n\tsprintf(name, \"GNU MPFR %s\", mpfr_get_version());\n\tupdate_PROCINFO_str(\"mpfr_version\", name);\n\tsprintf(name, \"GNU MP %s\", gmp_version);\n\tupdate_PROCINFO_str(\"gmp_version\", name);\n\tupdate_PROCINFO_num(\"prec_max\", MPFR_PREC_MAX);\n\tupdate_PROCINFO_num(\"prec_min\", MPFR_PREC_MIN);\n#endif\n\n#ifdef DYNAMIC\n\tupdate_PROCINFO_num(\"api_major\", GAWK_API_MAJOR_VERSION);\n\tupdate_PROCINFO_num(\"api_minor\", GAWK_API_MINOR_VERSION);\n#endif\n\n#ifdef GETPGRP_VOID\n#define getpgrp_arg() /* nothing */\n#else\n#define getpgrp_arg() getpid()\n#endif\n\n\tvalue = getpgrp(getpgrp_arg());\n\tupdate_PROCINFO_num(\"pgrpid\", value);\n\n\t/*\n\t * Could put a lot of this into a table, but then there's\n\t * portability problems declaring all the functions. So just\n\t * do it the slow and stupid way. Sigh.\n\t */\n\n\tvalue = getpid();\n\tupdate_PROCINFO_num(\"pid\", value);\n\n\tvalue = getppid();\n\tupdate_PROCINFO_num(\"ppid\", value);\n\n\tvalue = getuid();\n\tupdate_PROCINFO_num(\"uid\", value);\n\n\tvalue = geteuid();\n\tupdate_PROCINFO_num(\"euid\", value);\n\n\tvalue = getgid();\n\tupdate_PROCINFO_num(\"gid\", value);\n\n\tvalue = getegid();\n\tupdate_PROCINFO_num(\"egid\", value);\n\n\tswitch (current_field_sep()) {\n\tcase Using_FIELDWIDTHS:\n\t\tupdate_PROCINFO_str(\"FS\", \"FIELDWIDTHS\");\n\t\tbreak;\n\tcase Using_FPAT:\n\t\tupdate_PROCINFO_str(\"FS\", \"FPAT\");\n\t\tbreak;\n\tcase Using_FS:\n\t\tupdate_PROCINFO_str(\"FS\", \"FS\");\n\t\tbreak;\n\tdefault:\n\t\tfatal(_(\"unknown value for field spec: %d\\n\"),\n\t\t\t\tcurrent_field_sep());\n\t\tbreak;\n\t}\n\n\n#if defined (HAVE_GETGROUPS) && defined(NGROUPS_MAX) && NGROUPS_MAX > 0\n\tfor (i = 0; i < ngroups; i++) {\n\t\tsprintf(name, \"group%d\", i + 1);\n\t\tvalue = groupset[i];\n\t\tupdate_PROCINFO_num(name, value);\n\t}\n\tif (groupset) {\n\t\tefree(groupset);\n\t\tgroupset = NULL;\n\t}\n#endif\n\treturn PROCINFO_node;\n}\n"
}