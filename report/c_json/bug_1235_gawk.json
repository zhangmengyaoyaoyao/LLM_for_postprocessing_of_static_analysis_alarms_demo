{
    "project": "gawk",
    "tool": "Infer",
    "category": "NULL_DEREFERENCE",
    "file": "debug.c",
    "message": "pointer `subs` last assigned on line 1438 could be null and is dereferenced at line 1441, column 5.",
    "warning_function_name": "do_add_item",
    "warning_line": "subs[i] = dupnode(arg->a_node);",
    "warning_context": "static struct list_item *\ndo_add_item(struct list_item *list, CMDARG *arg)\n{\n\tNODE *symbol = NULL;\n\tchar *name, *pname = NULL;\n\tstruct list_item *item = NULL;\n\n\tswitch (arg->type) {\n\tcase D_subscript:\n\tcase D_variable:\n\t\tname = arg->a_string;\n\t\tif ((symbol = find_symbol(name, &pname)) == NULL)\n\t\t\treturn NULL;\n\t\tif (symbol->type == Node_func) {\n\t\t\td_error(_(\"`%s' is a function\"), name);\n\t\t\treturn NULL;\n\t\t}\n\t\tif (arg->type == D_subscript && symbol->type != Node_var_array) {\n\t\t\td_error(_(\"`%s' is not an array\\n\"), name);\n\t\t\treturn NULL;\n\t\t}\n\n\t\titem = add_item(list, arg->type, symbol, pname);\n\t\tif (item != NULL && arg->type == D_subscript) {\n\t\t\tNODE **subs;\n\t\t\tint count = arg->a_count;\n\t\t\tint i;\n\n\t\t\tassert(count > 0);\n\t\t\temalloc(subs, NODE **, count * sizeof(NODE *), \"do_add_item\");\n\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\targ = arg->next;\n\t\t\t\tsubs[i] = dupnode(arg->a_node);\n\t\t\t\tsubs[i] = force_string(subs[i]);\n\t\t\t}\n\t\t\titem->subs = subs;\n\t\t\titem->num_subs = count;\n\t\t}\n\t\tbreak;\n\n\tcase D_field:\n\t\tsymbol = dupnode(arg->a_node);\n\t\titem = add_item(list, D_field, symbol, NULL);\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\t/* watch condition if any */\n\tif (list == &watch_list) {\n\t\targ = arg->next;\n\t\tif (item != NULL && arg != NULL) {\n\t\t\tif (parse_condition(D_watch, item->number, arg->a_string) == 0)\n\t\t\t\targ->a_string = NULL;\t/* don't let free_cmdarg free it */\n\t\t\telse\n\t\t\t\tfprintf(out_fp, _(\"watchpoint %d is unconditional\\n\"), item->number);\n\t\t}\n\t}\n\treturn item;\n}\n"
}