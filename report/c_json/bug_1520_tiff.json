{
    "Project": "tiff",
    "Tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "contrib/addtiffo/tif_overview.c",
    "message": "Offset: [3, +oo] (‚áê [0, +oo] + 3) Size: [0, +oo] by call to `TIFFCreateOvrCache`.",
    "warning_function_name": "TIFFBuildOverviews",
    "warning_line": "papoRawBIs[i] = TIFFCreateOvrCache( hTIFF, nDirOffset );",
    "warning_context": "/*      rereading directories.                                          */\n/* -------------------------------------------------------------------- */\n    pfnWarning = TIFFSetWarningHandler( NULL );\n\n/* -------------------------------------------------------------------- */\n/*      Get the base raster block size.                                 */\n/* -------------------------------------------------------------------- */\n    if( TIFFGetField( hTIFF, TIFFTAG_ROWSPERSTRIP, &(nBlockYSize) ) )\n    {\n        nBlockXSize = nXSize;\n        bTiled = FALSE;\n    }\n    else\n    {\n        TIFFGetField( hTIFF, TIFFTAG_TILEWIDTH, &nBlockXSize );\n        TIFFGetField( hTIFF, TIFFTAG_TILELENGTH, &nBlockYSize );\n        bTiled = TRUE;\n    }\n\n/* -------------------------------------------------------------------- */\n/*\tCapture the pallette if there is one.\t\t\t\t*/\n/* -------------------------------------------------------------------- */\n    if( TIFFGetField( hTIFF, TIFFTAG_COLORMAP,\n                      &panRedMap, &panGreenMap, &panBlueMap ) )\n    {\n        uint16\t\t*panRed2, *panGreen2, *panBlue2;\n        int             nColorCount = 1 << nBitsPerPixel;\n\n        panRed2 = (uint16 *) _TIFFmalloc(2*nColorCount);\n        panGreen2 = (uint16 *) _TIFFmalloc(2*nColorCount);\n        panBlue2 = (uint16 *) _TIFFmalloc(2*nColorCount);\n\n        memcpy( panRed2, panRedMap, 2 * nColorCount );\n        memcpy( panGreen2, panGreenMap, 2 * nColorCount );\n        memcpy( panBlue2, panBlueMap, 2 * nColorCount );\n\n        panRedMap = panRed2;\n        panGreenMap = panGreen2;\n        panBlueMap = panBlue2;\n    }\n    else\n    {\n        panRedMap = panGreenMap = panBlueMap = NULL;\n    }\n\n/* -------------------------------------------------------------------- */\n/*      Initialize overviews.                                           */\n/* -------------------------------------------------------------------- */\n    papoRawBIs = (TIFFOvrCache **) _TIFFmalloc(nOverviews*sizeof(void*));\n\n    for( i = 0; i < nOverviews; i++ )\n    {\n        int\tnOXSize, nOYSize, nOBlockXSize, nOBlockYSize;\n        uint32  nDirOffset;\n\n        nOXSize = (nXSize + panOvList[i] - 1) / panOvList[i];\n        nOYSize = (nYSize + panOvList[i] - 1) / panOvList[i];\n\n        nOBlockXSize = MIN((int)nBlockXSize,nOXSize);\n        nOBlockYSize = MIN((int)nBlockYSize,nOYSize);\n\n        if( bTiled )\n        {\n            if( (nOBlockXSize % 16) != 0 )\n                nOBlockXSize = nOBlockXSize + 16 - (nOBlockXSize % 16);\n\n            if( (nOBlockYSize % 16) != 0 )\n                nOBlockYSize = nOBlockYSize + 16 - (nOBlockYSize % 16);\n        }\n\n        nDirOffset = TIFF_WriteOverview( hTIFF, nOXSize, nOYSize,\n                                         nBitsPerPixel, nPlanarConfig,\n                                         nSamples, nOBlockXSize, nOBlockYSize,\n                                         bTiled, nCompressFlag, nPhotometric,\n                                         nSampleFormat,\n                                         panRedMap, panGreenMap, panBlueMap,\n                                         bUseSubIFDs,\n                                         nHorSubsampling, nVerSubsampling );\n        \n        papoRawBIs[i] = TIFFCreateOvrCache( hTIFF, nDirOffset );\n    }\n\n    if( panRedMap != NULL )\n    {\n        _TIFFfree( panRedMap );\n        _TIFFfree( panGreenMap );\n        _TIFFfree( panBlueMap );\n    }\n    \n/* -------------------------------------------------------------------- */\n/*      Allocate a buffer to hold a source block.                       */\n/* -------------------------------------------------------------------- */\n    if( bTiled )\n        pabySrcTile = (unsigned char *) _TIFFmalloc(TIFFTileSize(hTIFF));\n    else\n        pabySrcTile = (unsigned char *) _TIFFmalloc(TIFFStripSize(hTIFF));\n    \n/* -------------------------------------------------------------------- */\n/*      Loop over the source raster, applying data to the               */\n/*      destination raster.                                             */\n/* -------------------------------------------------------------------- */\n"
}