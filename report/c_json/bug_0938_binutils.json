{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_L1",
    "Code_line": "\t      || ! ieee_write_byte (info, (int) ieee_bb_record_enum)",
    "Code_function": "ieee_define_named_type (struct ieee_handle *info, const char *name,\n\t\t\tunsigned int indx, unsigned int size,\n\t\t\tbfd_boolean unsignedp, bfd_boolean localp,\n\t\t\tstruct ieee_buflist *buflist)\n{\n  unsigned int type_indx;\n  unsigned int name_indx;\n\n  if (indx != (unsigned int) -1)\n    type_indx = indx;\n  else\n    {\n      type_indx = info->type_indx;\n      ++info->type_indx;\n    }\n\n  name_indx = info->name_indx;\n  ++info->name_indx;\n\n  if (name == NULL)\n    name = \"\";\n\n  /* If we were given a buffer, use it; otherwise, use either the\n     local or the global type information, and make sure that the type\n     block is started.  */\n  if (buflist != NULL)\n    {\n      if (! ieee_change_buffer (info, buflist))\n\treturn FALSE;\n    }\n  else if (localp)\n    {\n      if (! ieee_buffer_emptyp (&info->types))\n\t{\n\t  if (! ieee_change_buffer (info, &info->types))\n\t    return FALSE;\n\t}\n      else\n\t{\n\t  if (! ieee_change_buffer (info, &info->types)\n\t      || ! ieee_write_byte (info, (int) ieee_bb_record_enum)\n\t      || ! ieee_write_byte (info, 1)\n\t      || ! ieee_write_number (info, 0)\n\t      || ! ieee_write_id (info, info->modname))\n\t    return FALSE;\n\t}\n    }\n  else\n    {\n      if (! ieee_buffer_emptyp (&info->global_types))\n\t{\n\t  if (! ieee_change_buffer (info, &info->global_types))\n\t    return FALSE;\n\t}\n      else\n\t{\n\t  if (! ieee_change_buffer (info, &info->global_types)\n\t      || ! ieee_write_byte (info, (int) ieee_bb_record_enum)\n\t      || ! ieee_write_byte (info, 2)\n\t      || ! ieee_write_number (info, 0)\n\t      || ! ieee_write_id (info, \"\"))\n\t    return FALSE;\n\t}\n    }\n\n  /* Push the new type on the type stack, write out an NN record, and\n     write out the start of a TY record.  The caller will then finish\n     the TY record.  */\n  if (! ieee_push_type (info, type_indx, size, unsignedp, localp))\n    return FALSE;\n\n  return (ieee_write_byte (info, (int) ieee_nn_record)\n\t  && ieee_write_number (info, name_indx)\n\t  && ieee_write_id (info, name)\n\t  && ieee_write_byte (info, (int) ieee_ty_record_enum)\n\t  && ieee_write_number (info, type_indx)\n\t  && ieee_write_byte (info, 0xce)\n\t  && ieee_write_number (info, name_indx));\n}"
}