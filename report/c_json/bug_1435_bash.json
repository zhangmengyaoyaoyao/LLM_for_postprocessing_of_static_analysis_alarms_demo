{
    "Project": "bash",
    "Tool": "Infer",
    "Bug Type": "UNINITIALIZED_VALUE",
    "Code_line": "      ADVANCE_CHAR (string, slen, i);",
    "Code_function": "remove_quoted_nulls (string)\n     char *string;\n{\n  register size_t slen;\n  register int i, j, prev_i;\n  DECLARE_MBSTATE;\n\n  if (strchr (string, CTLNUL) == 0)\t\t/* XXX */\n    return string;\t\t\t\t/* XXX */\n\n  slen = strlen (string);\n  i = j = 0;\n\n  while (i < slen)\n    {\n      if (string[i] == CTLESC)\n\t{\n\t  /* Old code had j++, but we cannot assume that i == j at this\n\t     point -- what if a CTLNUL has already been removed from the\n\t     string?  We don't want to drop the CTLESC or recopy characters\n\t     that we've already copied down. */\n\t  i++; string[j++] = CTLESC;\n\t  if (i == slen)\n\t    break;\n\t}\n      else if (string[i] == CTLNUL)\n\t{\n\t  i++;\n\t  continue;\n\t}\n\n      prev_i = i;\n      ADVANCE_CHAR (string, slen, i);\n      if (j < prev_i)\n\t{\n\t  do string[j++] = string[prev_i++]; while (prev_i < i);\n\t}\n      else\n\tj = i;\n    }\n  string[j] = '\\0';\n\n  return (string);\n}"
}