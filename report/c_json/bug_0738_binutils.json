{
    "Project": "binutils",
    "Tool": "Infer",
    "Bug Type": "BUFFER_OVERRUN_S2",
    "Code_line": "\t  if (! stab_write_symbol (info, N_LSYM, 0, 0, buf))",
    "Code_function": "stab_function_type (void *p, int argcount,\n\t\t    bfd_boolean varargs ATTRIBUTE_UNUSED)\n{\n  struct stab_write_handle *info = (struct stab_write_handle *) p;\n  int i;\n\n  /* We have no way to represent the argument types, so we just\n     discard them.  However, if they define new types, we must output\n     them.  We do this by producing empty typedefs.  */\n  for (i = 0; i < argcount; i++)\n    {\n      if (! info->type_stack->definition)\n\tfree (stab_pop_type (info));\n      else\n\t{\n\t  char *s, *buf;\n\n\t  s = stab_pop_type (info);\n\n\t  buf = (char *) xmalloc (strlen (s) + 3);\n\t  sprintf (buf, \":t%s\", s);\n\t  free (s);\n\n\t  if (! stab_write_symbol (info, N_LSYM, 0, 0, buf))\n\t    return FALSE;\n\n\t  free (buf);\n\t}\n    }\n\n  return stab_modify_type (info, 'f', 0, &info->type_cache.function_types,\n\t\t\t   &info->type_cache.function_types_alloc);\n}"
}