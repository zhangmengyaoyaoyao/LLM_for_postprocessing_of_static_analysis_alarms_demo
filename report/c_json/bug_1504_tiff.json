{
    "project": "tiff",
    "tool": "Infer",
    "category": "BUFFER_OVERRUN_L3",
    "file": "libtiff/tif_getimage.c",
    "message": "Offset: [0, 255] Size: [0, +oo] by call to `PickContigCase`.",
    "warning_function_name": "TIFFRGBAImageBegin",
    "warning_line": "if (!PickContigCase(img)) {",
    "warning_context": "\t\t\t\t\t\timg->photometric = PHOTOMETRIC_RGB;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t/* do nothing */;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t/*\n\t\t\t * TODO: if at all meaningful and useful, make more complete\n\t\t\t * support check here, or better still, refactor to let supporting\n\t\t\t * code decide whether there is support and what meaningfull\n\t\t\t * error to return\n\t\t\t */\n\t\t\tbreak;\n\t\tcase PHOTOMETRIC_RGB:\n\t\t\tif (colorchannels < 3) {\n\t\t\t\tsprintf(emsg, \"Sorry, can not handle RGB image with %s=%d\",\n\t\t\t\t    \"Color channels\", colorchannels);\n\t\t\t\treturn (0);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHOTOMETRIC_SEPARATED:\n\t\t\t{\n\t\t\t\tuint16 inkset;\n\t\t\t\tTIFFGetFieldDefaulted(tif, TIFFTAG_INKSET, &inkset);\n\t\t\t\tif (inkset != INKSET_CMYK) {\n\t\t\t\t\tsprintf(emsg, \"Sorry, can not handle separated image with %s=%d\",\n\t\t\t\t\t    \"InkSet\", inkset);\n\t\t\t\t\treturn (0);\n\t\t\t\t}\n\t\t\t\tif (img->samplesperpixel < 4) {\n\t\t\t\t\tsprintf(emsg, \"Sorry, can not handle separated image with %s=%d\",\n\t\t\t\t\t    \"Samples/pixel\", img->samplesperpixel);\n\t\t\t\t\treturn (0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHOTOMETRIC_LOGL:\n\t\t\tif (compress != COMPRESSION_SGILOG) {\n\t\t\t\tsprintf(emsg, \"Sorry, LogL data must have %s=%d\",\n\t\t\t\t    \"Compression\", COMPRESSION_SGILOG);\n\t\t\t\treturn (0);\n\t\t\t}\n\t\t\tTIFFSetField(tif, TIFFTAG_SGILOGDATAFMT, SGILOGDATAFMT_8BIT);\n\t\t\timg->photometric = PHOTOMETRIC_MINISBLACK;\t/* little white lie */\n\t\t\timg->bitspersample = 8;\n\t\t\tbreak;\n\t\tcase PHOTOMETRIC_LOGLUV:\n\t\t\tif (compress != COMPRESSION_SGILOG && compress != COMPRESSION_SGILOG24) {\n\t\t\t\tsprintf(emsg, \"Sorry, LogLuv data must have %s=%d or %d\",\n\t\t\t\t    \"Compression\", COMPRESSION_SGILOG, COMPRESSION_SGILOG24);\n\t\t\t\treturn (0);\n\t\t\t}\n\t\t\tif (planarconfig != PLANARCONFIG_CONTIG) {\n\t\t\t\tsprintf(emsg, \"Sorry, can not handle LogLuv images with %s=%d\",\n\t\t\t\t    \"Planarconfiguration\", planarconfig);\n\t\t\t\treturn (0);\n\t\t\t}\n\t\t\tTIFFSetField(tif, TIFFTAG_SGILOGDATAFMT, SGILOGDATAFMT_8BIT);\n\t\t\timg->photometric = PHOTOMETRIC_RGB;\t\t/* little white lie */\n\t\t\timg->bitspersample = 8;\n\t\t\tbreak;\n\t\tcase PHOTOMETRIC_CIELAB:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tsprintf(emsg, \"Sorry, can not handle image with %s=%d\",\n\t\t\t    photoTag, img->photometric);\n\t\t\treturn (0);\n\t}\n\timg->Map = NULL;\n\timg->BWmap = NULL;\n\timg->PALmap = NULL;\n\timg->ycbcr = NULL;\n\timg->cielab = NULL;\n\tTIFFGetField(tif, TIFFTAG_IMAGEWIDTH, &img->width);\n\tTIFFGetField(tif, TIFFTAG_IMAGELENGTH, &img->height);\n\tTIFFGetFieldDefaulted(tif, TIFFTAG_ORIENTATION, &img->orientation);\n\timg->isContig =\n\t    !(planarconfig == PLANARCONFIG_SEPARATE && colorchannels > 1);\n\tif (img->isContig) {\n\t\tif (!PickContigCase(img)) {\n\t\t\tsprintf(emsg, \"Sorry, can not handle image\");\n\t\t\treturn 0;\n\t\t}\n\t} else {\n\t\tif (!PickSeparateCase(img)) {\n\t\t\tsprintf(emsg, \"Sorry, can not handle image\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nint\nTIFFRGBAImageGet(TIFFRGBAImage* img, uint32* raster, uint32 w, uint32 h)\n{\n    if (img->get == NULL) {\n\t\tTIFFErrorExt(img->tif->tif_clientdata, TIFFFileName(img->tif), \"No \\\"get\\\" routine setup\");\n\t\treturn (0);\n\t}\n\tif (img->put.any == NULL) {\n\t\tTIFFErrorExt(img->tif->tif_clientdata, TIFFFileName(img->tif),\n"
}