{
    "Project": "bash",
    "Tool": "CSA",
    "Bug Type": "core.NullDereference",
    "Message": "Access to field 'word' results in a dereference of a null pointer (loaded from variable 'l')",
    "Code_line": "      return (l->word->word);\t\t/* XXX - can't be null? */",
    "Code_function": "select_query (list, list_len, prompt, print_menu)\n     WORD_LIST *list;\n     int list_len;\n     char *prompt;\n     int print_menu;\n{\n  int max_elem_len, indices_len, len;\n  intmax_t reply;\n  WORD_LIST *l;\n  char *repl_string, *t;\n\n#if 0\n  t = get_string_value (\"LINES\");\n  LINES = (t && *t) ? atoi (t) : 24;\n#endif\n  t = get_string_value (\"COLUMNS\");\n  COLS =  (t && *t) ? atoi (t) : 80;\n\n#if 0\n  t = get_string_value (\"TABSIZE\");\n  tabsize = (t && *t) ? atoi (t) : 8;\n  if (tabsize <= 0)\n    tabsize = 8;\n#else\n  tabsize = 8;\n#endif\n\n  max_elem_len = 0;\n  for (l = list; l; l = l->next)\n    {\n      len = displen (l->word->word);\n      if (len > max_elem_len)\n\tmax_elem_len = len;\n    }\n  indices_len = NUMBER_LEN (list_len);\n  max_elem_len += indices_len + RP_SPACE_LEN + 2;\n\n  while (1)\n    {\n      if (print_menu)\n\tprint_select_list (list, list_len, max_elem_len, indices_len);\n      fprintf (stderr, \"%s\", prompt);\n      fflush (stderr);\n      QUIT;\n\n      if (read_builtin ((WORD_LIST *)NULL) != EXECUTION_SUCCESS)\n\t{\n\t  putchar ('\\n');\n\t  return ((char *)NULL);\n\t}\n      repl_string = get_string_value (\"REPLY\");\n      if (*repl_string == 0)\n\t{\n\t  print_menu = 1;\n\t  continue;\n\t}\n      if (legal_number (repl_string, &reply) == 0)\n\treturn \"\";\n      if (reply < 1 || reply > list_len)\n\treturn \"\";\n\n      for (l = list; l && --reply; l = l->next)\n\t;\n      return (l->word->word);\t\t/* XXX - can't be null? */\n    }\n}"
}