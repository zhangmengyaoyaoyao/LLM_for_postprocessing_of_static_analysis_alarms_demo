{
    "Project": "Zephyr",
    "Tool": "Infer",
    "Bug Type": "Null Dereference",
    "Message": "pointer `match` last assigned on line 346 could be null and is dereferenced at line 348, column 25.",
    "Code_line": "\tcmd_len = shell_strlen(match->syntax);",
    "Code_function": "static void autocomplete(const struct shell *shell,\n\t\t\t const struct shell_static_entry *cmd,\n\t\t\t const char *arg,\n\t\t\t size_t subcmd_idx)\n{\n\tconst struct shell_static_entry *match;\n\tu16_t cmd_len;\n\tu16_t arg_len = shell_strlen(arg);\n\n\t/* shell->ctx->active_cmd can be safely used outside of command context\n\t * to save stack\n\t */\n\tshell_cmd_get(shell, cmd ? cmd->subcmd : NULL, cmd ? 1 : 0,\n\t\t      subcmd_idx, &match, &shell->ctx->active_cmd);\n\tcmd_len = shell_strlen(match->syntax);\n\n\t/* no exact match found */\n\tif (cmd_len != arg_len) {\n\t\tshell_op_completion_insert(shell,\n\t\t\t\t\t   match->syntax + arg_len,\n\t\t\t\t\t   cmd_len - arg_len);\n\t}\n\n\t/* Next character in the buffer is not 'space'. */\n\tif (!isspace((int) shell->ctx->cmd_buff[\n\t\t\t\t\tshell->ctx->cmd_buff_pos])) {\n\t\tif (flag_insert_mode_get(shell)) {\n\t\t\tflag_insert_mode_set(shell, false);\n\t\t\tshell_op_char_insert(shell, ' ');\n\t\t\tflag_insert_mode_set(shell, true);\n\t\t} else {\n\t\t\tshell_op_char_insert(shell, ' ');\n\t\t}\n\t} else {\n\t\t/*  case:\n\t\t * | | -> cursor\n\t\t * cons_name $: valid_cmd valid_sub_cmd| |argument  <tab>\n\t\t */\n\t\tshell_op_cursor_move(shell, 1);\n\t\t/* result:\n\t\t * cons_name $: valid_cmd valid_sub_cmd |a|rgument\n\t\t */\n\t}\n}"
}