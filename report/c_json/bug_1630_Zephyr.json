{
    "project": "Zephyr",
    "tool": "Cppcheck",
    "category": "Uninitialized Variable",
    "file": "subsys/bluetooth/controller/ll_sw/nordic/hal/nrf5/radio/radio.c",
    "message": "Uninitialized variable: extra",
    "warning_function_name": "radio_pkt_configure",
    "warning_line": "extra;",
    "warning_context": "void radio_pkt_configure(u8_t bits_len, u8_t max_len, u8_t flags)\n{\n\tu8_t dc = flags & 0x01; /* Adv or Data channel */\n\tu32_t extra;\n\tu8_t phy;\n\n#if defined(CONFIG_SOC_SERIES_NRF51X)\n\tARG_UNUSED(phy);\n\n\textra = 0U;\n\n\t/* nRF51 supports only 27 byte PDU when using h/w CCM for encryption. */\n\tif (!IS_ENABLED(CONFIG_BT_CTLR_DATA_LENGTH_CLEAR) && dc) {\n\t\tbits_len = 5U;\n\t}\n#elif defined(CONFIG_SOC_COMPATIBLE_NRF52X) || \\\n\tdefined(CONFIG_SOC_SERIES_NRF53X)\n\textra = 0U;\n\n\tphy = (flags >> 1) & 0x07; /* phy */\n\tswitch (phy) {\n\tcase BIT(0):\n\tdefault:\n\t\textra |= (RADIO_PCNF0_PLEN_8bit << RADIO_PCNF0_PLEN_Pos) &\n\t\t\t RADIO_PCNF0_PLEN_Msk;\n\t\tbreak;\n\n\tcase BIT(1):\n\t\textra |= (RADIO_PCNF0_PLEN_16bit << RADIO_PCNF0_PLEN_Pos) &\n\t\t\t RADIO_PCNF0_PLEN_Msk;\n\t\tbreak;\n\n#if defined(CONFIG_BT_CTLR_PHY_CODED)\n#if defined(CONFIG_HAS_HW_NRF_RADIO_BLE_CODED)\n\tcase BIT(2):\n\t\textra |= (RADIO_PCNF0_PLEN_LongRange << RADIO_PCNF0_PLEN_Pos) &\n\t\t\t RADIO_PCNF0_PLEN_Msk;\n\t\textra |= (2UL << RADIO_PCNF0_CILEN_Pos) & RADIO_PCNF0_CILEN_Msk;\n\t\textra |= (3UL << RADIO_PCNF0_TERMLEN_Pos) &\n\t\t\t RADIO_PCNF0_TERMLEN_Msk;\n\t\tbreak;\n#endif /* CONFIG_HAS_HW_NRF_RADIO_BLE_CODED */\n#endif /* CONFIG_BT_CTLR_PHY_CODED */\n\t}\n\n\t/* To use same Data Channel PDU structure with nRF5 specific overhead\n\t * byte, include the S1 field in radio packet configuration.\n\t */\n\tif (dc) {\n\t\textra |= (RADIO_PCNF0_S1INCL_Include <<\n\t\t\t  RADIO_PCNF0_S1INCL_Pos) & RADIO_PCNF0_S1INCL_Msk;\n\t}\n#endif /* CONFIG_SOC_COMPATIBLE_NRF52X */\n\n\tNRF_RADIO->PCNF0 = (((1UL) << RADIO_PCNF0_S0LEN_Pos) &\n\t\t\t    RADIO_PCNF0_S0LEN_Msk) |\n\t\t\t   ((((u32_t)bits_len) << RADIO_PCNF0_LFLEN_Pos) &\n\t\t\t    RADIO_PCNF0_LFLEN_Msk) |\n\t\t\t   ((((u32_t)8-bits_len) << RADIO_PCNF0_S1LEN_Pos) &\n\t\t\t    RADIO_PCNF0_S1LEN_Msk) |\n\t\t\t   extra;\n\n\tNRF_RADIO->PCNF1 &= ~(RADIO_PCNF1_MAXLEN_Msk | RADIO_PCNF1_STATLEN_Msk |\n\t\t\t      RADIO_PCNF1_BALEN_Msk | RADIO_PCNF1_ENDIAN_Msk);\n\tNRF_RADIO->PCNF1 |= ((((u32_t)max_len) << RADIO_PCNF1_MAXLEN_Pos) &\n\t\t\t     RADIO_PCNF1_MAXLEN_Msk) |\n\t\t\t    (((0UL) << RADIO_PCNF1_STATLEN_Pos) &\n\t\t\t     RADIO_PCNF1_STATLEN_Msk) |\n\t\t\t    (((3UL) << RADIO_PCNF1_BALEN_Pos) &\n\t\t\t     RADIO_PCNF1_BALEN_Msk) |\n\t\t\t    (((RADIO_PCNF1_ENDIAN_Little) <<\n\t\t\t      RADIO_PCNF1_ENDIAN_Pos) &\n\t\t\t     RADIO_PCNF1_ENDIAN_Msk);\n}\n"
}