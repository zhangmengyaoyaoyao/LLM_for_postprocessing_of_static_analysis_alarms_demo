{
    "project": "tiff",
    "tool": "Infer",
    "category": "UNINITIALIZED_VALUE",
    "file": "contrib/iptcutil/iptcutil.c",
    "message": "The value read from buffer[_] was never initialized.",
    "warning_function_name": "formatIPTC",
    "warning_line": "taglen = (((long) buffer[ 0 ]) << 24) |",
    "warning_context": "int formatIPTC(FILE *ifile, FILE *ofile)\n{\n  unsigned int\n    foundiptc,\n    tagsfound;\n\n  unsigned char\n    recnum,\n    dataset;\n\n  char\n    *readable,\n    *str;\n\n  long\n    tagindx,\n    taglen;\n\n  int\n    i,\n    tagcount = sizeof(tags) / sizeof(tag_spec);\n\n  char\n    c;\n\n  foundiptc = 0; /* found the IPTC-Header */\n  tagsfound = 0; /* number of tags found */\n\n  c = getc(ifile);\n  while (c != EOF)\n  {\n\t  if (c == 0x1c)\n\t    foundiptc = 1;\n\t  else\n      {\n        if (foundiptc)\n\t        return -1;\n        else\n\t        continue;\n\t    }\n\n    /* we found the 0x1c tag and now grab the dataset and record number tags */\n    dataset = getc(ifile);\n\t  if ((char) dataset == EOF)\n\t    return -1;\n    recnum = getc(ifile);\n\t  if ((char) recnum == EOF)\n\t    return -1;\n    /* try to match this record to one of the ones in our named table */\n    for (i=0; i< tagcount; i++)\n    {\n      if (tags[i].id == recnum)\n          break;\n    }\n    if (i < tagcount)\n      readable = tags[i].name;\n    else\n      readable = \"\";\n\n    /* then we decode the length of the block that follows - long or short fmt */\n    c = getc(ifile);\n\t  if (c == EOF)\n\t    return 0;\n\t  if (c & (unsigned char) 0x80)\n      {\n        unsigned char\n          buffer[4];\n\n        for (i=0; i<4; i++)\n        {\n          c = buffer[i] = getc(ifile);\n          if (c == EOF)\n            return -1;\n        }\n        taglen = (((long) buffer[ 0 ]) << 24) |\n                 (((long) buffer[ 1 ]) << 16) | \n\t               (((long) buffer[ 2 ]) <<  8) |\n                 (((long) buffer[ 3 ]));\n\t    }\n    else\n      {\n        unsigned char\n          x = c;\n\n        taglen = ((long) x) << 8;\n        x = getc(ifile);\n        if ((char)x == EOF)\n          return -1;\n        taglen |= (long) x;\n\t    }\n    /* make a buffer to hold the tag data and snag it from the input stream */\n    str = (char *) malloc((unsigned int) (taglen+1));\n    if (str == (char *) NULL)\n      {\n        printf(\"Memory allocation failed\");\n        return 0;\n      }\n    for (tagindx=0; tagindx<taglen; tagindx++)\n    {\n      c = str[tagindx] = getc(ifile);\n      if (c == EOF)\n"
}