category,vtype,final_label,priority,rank,project,no,warning_line,warning_method
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,5,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,6,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,7,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,8,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,10,"{
public Field[] run()
{
return type.getDeclaredFields();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,11,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,12,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,13,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,14,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,15,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,17,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,18,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
BAD_PRACTICE,SE_BAD_FIELD,FP,3,19,digester,20,private final List<ErrorMessage> errors;,private final List<ErrorMessage> errors;
CORRECTNESS,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,FP,2,11,digester,147,"Formatter formatter = new Formatter().format(""CallMethodRule[methodName=%s, paramCount=%s, paramTypes={"",
","@Override
public String toString() {
Formatter formatter = new Formatter().format(""CallMethodRule[methodName=%s, paramCount=%s, paramTypes={"", this.methodName, this.paramTypes.length);
if (this.paramTypes != null) {
for (int i = 0; i < this.paramTypes.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(this.paramTypes[i].getName());
}
}
return formatter.format(""}]"").toString();
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,149,"Formatter formatter = new Formatter(""[CallMethodRule]"");
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (this.paramCount > 0) {
parameters = (Object[]) this.getDigester().popParams();
if (this.getDigester().getLog().isTraceEnabled()) {
Formatter formatter = new Formatter(""[CallMethodRule]"");
for (int i = 0, size = parameters.length; i < size; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""(%s) %s"", i, parameters[i]);
}
this.getDigester().getLog().trace(formatter.toString());
}
if (this.paramCount == 1 && parameters[0] == null) {
return;
}
} else if (this.paramTypes != null && this.paramTypes.length != 0) {
if (this.bodyText == null) {
return;
}
parameters = new Object[] { this.bodyText };
} else {
}
Object[] paramValues = new Object[this.paramTypes.length];
for (int i = 0; i < this.paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(this.paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (this.targetOffset >= 0) {
target = this.getDigester().peek(this.targetOffset);
} else {
target = this.getDigester().peek(this.getDigester().getCount() + this.targetOffset);
}
if (target == null) {
throw this.getDigester().createSAXException(String.format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", this.getDigester().getMatch(), this.targetOffset, this.getDigester().getCount()));
}
if (this.getDigester().getLog().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", this.getDigester().getMatch(), target.getClass().getName(), this.methodName);
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""%s/%s"", (paramValues[i] == null ? ""null"" : paramValues[i].toString()), (this.paramTypes[i] == null ? ""null"" : this.paramTypes[i].getName()));
}
formatter.format("")"");
this.getDigester().getLog().debug(formatter.toString());
}
Object result = null;
if (this.useExactMatch) {
result = MethodUtils.invokeExactMethod(target, this.methodName, paramValues, this.paramTypes);
} else {
result = MethodUtils.invokeMethod(target, this.methodName, paramValues, this.paramTypes);
}
processMethodCallResult(result);
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,150,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,203,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
StringBuilder sb = new StringBuilder();
sb.append(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(getDigester().getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (getDigester().getLogger().isDebugEnabled()) {
StringBuilder sb = new StringBuilder(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
getDigester().getLogger().debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,204,"Object paramValues[] = new Object[paramTypes.length];
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
StringBuilder sb = new StringBuilder();
sb.append(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(getDigester().getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (getDigester().getLogger().isDebugEnabled()) {
StringBuilder sb = new StringBuilder(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
getDigester().getLogger().debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,205,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,206,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,207,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,209,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,215,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,216,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,217,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className' ar 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,218,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,219,"// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;","// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,220,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,221,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,222,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,223,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,224,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,225,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,226,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,227,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,228,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,229,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,230,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,231,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,232,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,257,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,258,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,259,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
DODGY_CODE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,FP,2,18,digester,260,"protected String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,262,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,263,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,264,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,265,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,266,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,267,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,268,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,269,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,270,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,271,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,272,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,273,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,274,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,275,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,276,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,277,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,278,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,279,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,280,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,281,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,282,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,283,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,284,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,285,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,286,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,287,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,288,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
CORRECTNESS,NP_GUARANTEED_DEREF,FP,2,8,digester,311,"invokeExactMethod( parent, methodName, new Object[] { child }, paramTypes );
","private void invoke() throws Exception {
Object child = getChild();
Object parent = getParent();
if (getDigester().getLogger().isDebugEnabled()) {
if (parent == null) {
getDigester().getLogger().debug(format(""[%s]{%s} Call [NULL PARENT].%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), methodName, child));
} else {
getDigester().getLogger().debug(format(""[%s]{%s} Call %s.%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), parent.getClass().getName(), methodName, child));
}
}
Class<?>[] paramTypes = new Class<?>[1];
if (paramType != null) {
paramTypes[0] = getDigester().getClassLoader().loadClass(paramTypeName);
} else {
paramTypes[0] = child.getClass();
}
if (useExactMatch) {
invokeExactMethod(parent, methodName, new Object[] { child }, paramTypes);
} else {
invokeMethod(parent, methodName, new Object[] { child }, paramTypes);
}
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,312,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,313,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,314,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,315,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,317,"{
public Field[] run()
{
return type.getDeclaredFields();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,318,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,319,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,320,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,321,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,322,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,324,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,325,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,330,"if (paramTypes.length == 0) {
","@Override
public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,331,"Object paramValues[] = new Object[paramTypes.length];
","@Override
public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,332,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,334,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,335,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
BAD_PRACTICE,SE_INNER_CLASS,FP,3,19,digester,337,"new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
",private final int cacheSize = 255;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,338,private final int cacheSize = 255;,private final int cacheSize = 255;
BAD_PRACTICE,SE_BAD_FIELD,FP,1,14,digester,339,"private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};","private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,340,"new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
",private final float loadFactor = 0.75f;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,341,private final float loadFactor = 0.75f;,private final float loadFactor = 0.75f;
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,342,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,343,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,344,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,345,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,346,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,347,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,348,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,349,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,350,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,351,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class<?> versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,352,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,353,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,354,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,355,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,356,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,357,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,358,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,359,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,360,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,361,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,362,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,363,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,364,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,365,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,366,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,367,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,368,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
CORRECTNESS,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,FP,2,11,digester,387,"Formatter formatter = new Formatter().format(""CallMethodRule[methodName=%s, paramCount=%s, paramTypes={"",
","@Override
public String toString() {
Formatter formatter = new Formatter().format(""CallMethodRule[methodName=%s, paramCount=%s, paramTypes={"", this.methodName, this.paramTypes.length);
if (this.paramTypes != null) {
for (int i = 0; i < this.paramTypes.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(this.paramTypes[i].getName());
}
}
return formatter.format(""}]"").toString();
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,388,"Formatter formatter = new Formatter(""[CallMethodRule]"");
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (this.paramTypes.length > 0) {
parameters = (Object[]) this.getDigester().popParams();
if (this.getDigester().getLog().isTraceEnabled()) {
Formatter formatter = new Formatter(""[CallMethodRule]"");
for (int i = 0, size = parameters.length; i < size; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""(%s) %s"", i, parameters[i]);
}
this.getDigester().getLog().trace(formatter.toString());
}
if (this.paramTypes.length == 1 && parameters[0] == null) {
return;
}
} else if (this.paramTypes != null && this.paramTypes.length != 0) {
if (this.bodyText == null) {
return;
}
parameters = new Object[] { this.bodyText };
} else {
}
Object[] paramValues = new Object[this.paramTypes.length];
for (int i = 0; i < this.paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(this.paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (this.targetOffset >= 0) {
target = this.getDigester().peek(this.targetOffset);
} else {
target = this.getDigester().peek(this.getDigester().getCount() + this.targetOffset);
}
if (target == null) {
throw this.getDigester().createSAXException(String.format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", this.getDigester().getMatch(), this.targetOffset, this.getDigester().getCount()));
}
if (this.getDigester().getLog().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", this.getDigester().getMatch(), target.getClass().getName(), this.methodName);
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""%s/%s"", (paramValues[i] == null ? ""null"" : paramValues[i].toString()), (this.paramTypes[i] == null ? ""null"" : this.paramTypes[i].getName()));
}
formatter.format("")"");
this.getDigester().getLog().debug(formatter.toString());
}
Object result = null;
if (this.useExactMatch) {
result = MethodUtils.invokeExactMethod(target, this.methodName, paramValues, this.paramTypes);
} else {
result = MethodUtils.invokeMethod(target, this.methodName, paramValues, this.paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,FP,2,11,digester,389,"if (this.paramTypes.length > 0) {
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (this.paramTypes.length > 0) {
parameters = (Object[]) this.getDigester().popParams();
if (this.getDigester().getLog().isTraceEnabled()) {
Formatter formatter = new Formatter(""[CallMethodRule]"");
for (int i = 0, size = parameters.length; i < size; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""(%s) %s"", i, parameters[i]);
}
this.getDigester().getLog().trace(formatter.toString());
}
if (this.paramTypes.length == 1 && parameters[0] == null) {
return;
}
} else if (this.paramTypes != null && this.paramTypes.length != 0) {
if (this.bodyText == null) {
return;
}
parameters = new Object[] { this.bodyText };
} else {
}
Object[] paramValues = new Object[this.paramTypes.length];
for (int i = 0; i < this.paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(this.paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (this.targetOffset >= 0) {
target = this.getDigester().peek(this.targetOffset);
} else {
target = this.getDigester().peek(this.getDigester().getCount() + this.targetOffset);
}
if (target == null) {
throw this.getDigester().createSAXException(String.format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", this.getDigester().getMatch(), this.targetOffset, this.getDigester().getCount()));
}
if (this.getDigester().getLog().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", this.getDigester().getMatch(), target.getClass().getName(), this.methodName);
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""%s/%s"", (paramValues[i] == null ? ""null"" : paramValues[i].toString()), (this.paramTypes[i] == null ? ""null"" : this.paramTypes[i].getName()));
}
formatter.format("")"");
this.getDigester().getLog().debug(formatter.toString());
}
Object result = null;
if (this.useExactMatch) {
result = MethodUtils.invokeExactMethod(target, this.methodName, paramValues, this.paramTypes);
} else {
result = MethodUtils.invokeMethod(target, this.methodName, paramValues, this.paramTypes);
}
processMethodCallResult(result);
}"
BAD_PRACTICE,SE_BAD_FIELD,FP,3,19,digester,390,private final List<ErrorMessage> errors;,private final List<ErrorMessage> errors;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,391,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,395,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,396,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,397,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,FP,2,16,digester,398,"log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
","public InputSource resolveEntity(String publicId, String systemId) throws SAXException {
if (saxLog.isDebugEnabled()) {
saxLog.debug(""resolveEntity('"" + publicId + ""', '"" + systemId + ""')"");
}
if (publicId != null)
this.publicId = publicId;
String entityURL = null;
if (publicId != null) {
entityURL = (String) entityValidator.get(publicId);
}
if (schemaLocation != null && entityURL == null && systemId != null) {
entityURL = (String) entityValidator.get(systemId);
}
if (entityURL == null) {
if (systemId == null) {
if (log.isDebugEnabled()) {
log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
}
return (null);
} else {
if (log.isDebugEnabled()) {
log.debug("" Trying to resolve using system ID '"" + systemId + ""'"");
}
entityURL = systemId;
}
}
if (log.isDebugEnabled()) {
log.debug("" Resolving to alternate DTD '"" + entityURL + ""'"");
}
try {
return createInputSourceFromURL(entityURL);
} catch (Exception e) {
throw createSAXException(e);
}
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,401,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,402,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,403,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,404,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,405,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,406,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,407,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,408,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,409,protected static float version;,protected static float version;
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,410,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,411,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,412,protected static String versionNumber = null;,protected static String versionNumber = null;
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,413,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,414,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,415,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,416,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,417,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,418,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,419,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,420,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,421,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,422,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,423,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,424,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,425,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,426,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,427,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,428,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,448,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,449,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,450,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
DODGY_CODE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,FP,2,18,digester,451,"protected String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,453,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,454,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,455,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,456,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,457,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,458,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,459,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,460,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,461,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,462,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,463,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,464,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,465,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,466,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,467,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,468,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,469,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,470,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,471,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,472,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,473,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,474,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,475,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,476,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,477,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,478,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,479,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
BAD_PRACTICE,SE_BAD_FIELD,FP,3,19,digester,642,private final List<ErrorMessage> errors;,private final List<ErrorMessage> errors;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,648,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,649,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,650,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,651,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,654,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,655,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,656,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,657,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,658,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,660,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,661,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,707,"if (paramTypes.length == 0) {
","@Override
public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,708,"Object paramValues[] = new Object[paramTypes.length];
","@Override
public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,709,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,711,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,712,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
BAD_PRACTICE,SE_INNER_CLASS,FP,3,19,digester,714,"new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
",private final int cacheSize = 255;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,715,private final int cacheSize = 255;,private final int cacheSize = 255;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,716,private final float loadFactor = 0.75f;,private final float loadFactor = 0.75f;
BAD_PRACTICE,SE_BAD_FIELD,FP,1,14,digester,717,"private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};","private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,718,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,719,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,720,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,721,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,722,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,723,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class<?> versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,724,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,725,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,726,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,727,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,728,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,729,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,730,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,731,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,732,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,733,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,734,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,735,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,736,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,737,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,738,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,739,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,740,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,741,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,742,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,743,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,744,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,763,"if (paramTypes.length == 0) {
","@Override
public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,764,"Object paramValues[] = new Object[paramTypes.length];
","@Override
public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,765,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,767,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,768,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
BAD_PRACTICE,SE_BAD_FIELD,FP,1,14,digester,769,"private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};","private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};"
BAD_PRACTICE,SE_INNER_CLASS,FP,3,19,digester,770,"new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
",private final int cacheSize = 255;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,771,private final int cacheSize = 255;,private final int cacheSize = 255;
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,772,"new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
",private final float loadFactor = 0.75f;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,773,private final float loadFactor = 0.75f;,private final float loadFactor = 0.75f;
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,774,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,775,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,776,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,777,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,778,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,779,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,780,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,781,protected static float version;,protected static float version;
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,782,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class<?> versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,783,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,784,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,785,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,786,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,787,"// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;","// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,788,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,789,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,790,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,791,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,792,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,793,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,794,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,795,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,796,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,797,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,798,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,799,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,800,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,823,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,824,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,825,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,826,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,827,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,829,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,830,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,831,"{
public Method[] run()
{
return type.getDeclaredMethods();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,832,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,833,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,835,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,836,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,882,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,883,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,885,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,886,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,887,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
CORRECTNESS,VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED,FP,2,9,digester,888,"throw new PluginInvalidInputException(String.format(""Error on element [%s]:"",
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
int nAttrs = attributes.getLength();
Properties props = new Properties();
for (int i = 0; i < nAttrs; ++i) {
String key = attributes.getLocalName(i);
if ((key == null) || (key.length() == 0)) {
key = attributes.getQName(i);
}
String value = attributes.getValue(i);
props.setProperty(key, value);
}
try {
declarePlugin(getDigester(), props);
} catch (PluginInvalidInputException ex) {
throw new PluginInvalidInputException(String.format(""Error on element [%s]:"", getDigester().getMatch(), ex.getMessage()), ex);
}
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,889,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,890,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,891,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,892,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,893,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,894,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,895,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,896,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,897,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,898,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,899,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,900,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,901,"Object paramValues[] = new Object[this.paramTypes.length];
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (this.paramCount > 0) {
parameters = (Object[]) this.getDigester().popParams();
if (this.getDigester().getLog().isTraceEnabled()) {
Formatter formatter = new Formatter(""[CallMethodRule]"");
for (int i = 0, size = parameters.length; i < size; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""(%s) %s"", i, parameters[i]);
}
this.getDigester().getLog().trace(formatter.toString());
}
if (this.paramCount == 1 && parameters[0] == null) {
return;
}
} else if (this.paramTypes != null && this.paramTypes.length != 0) {
if (this.bodyText == null) {
return;
}
parameters = new Object[] { this.bodyText };
} else {
}
Object[] paramValues = new Object[this.paramTypes.length];
for (int i = 0; i < this.paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(this.paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (this.targetOffset >= 0) {
target = this.getDigester().peek(this.targetOffset);
} else {
target = this.getDigester().peek(this.getDigester().getCount() + this.targetOffset);
}
if (target == null) {
throw this.getDigester().createSAXException(String.format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", this.getDigester().getMatch(), this.targetOffset, this.getDigester().getCount()));
}
if (this.getDigester().getLog().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", this.getDigester().getMatch(), target.getClass().getName(), this.methodName);
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""%s/%s"", (paramValues[i] == null ? ""null"" : paramValues[i].toString()), (this.paramTypes[i] == null ? ""null"" : this.paramTypes[i].getName()));
}
formatter.format("")"");
this.getDigester().getLog().debug(formatter.toString());
}
Object result = null;
if (this.useExactMatch) {
result = MethodUtils.invokeExactMethod(target, this.methodName, paramValues, this.paramTypes);
} else {
result = MethodUtils.invokeMethod(target, this.methodName, paramValues, this.paramTypes);
}
processMethodCallResult(result);
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,902,"Formatter formatter = new Formatter(""[CallMethodRule]"");
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (this.paramCount > 0) {
parameters = (Object[]) this.getDigester().popParams();
if (this.getDigester().getLog().isTraceEnabled()) {
Formatter formatter = new Formatter(""[CallMethodRule]"");
for (int i = 0, size = parameters.length; i < size; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""(%s) %s"", i, parameters[i]);
}
this.getDigester().getLog().trace(formatter.toString());
}
if (this.paramCount == 1 && parameters[0] == null) {
return;
}
} else if (this.paramTypes != null && this.paramTypes.length != 0) {
if (this.bodyText == null) {
return;
}
parameters = new Object[] { this.bodyText };
} else {
}
Object[] paramValues = new Object[this.paramTypes.length];
for (int i = 0; i < this.paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(this.paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (this.targetOffset >= 0) {
target = this.getDigester().peek(this.targetOffset);
} else {
target = this.getDigester().peek(this.getDigester().getCount() + this.targetOffset);
}
if (target == null) {
throw this.getDigester().createSAXException(String.format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", this.getDigester().getMatch(), this.targetOffset, this.getDigester().getCount()));
}
if (this.getDigester().getLog().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", this.getDigester().getMatch(), target.getClass().getName(), this.methodName);
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""%s/%s"", (paramValues[i] == null ? ""null"" : paramValues[i].toString()), (this.paramTypes[i] == null ? ""null"" : this.paramTypes[i].getName()));
}
formatter.format("")"");
this.getDigester().getLog().debug(formatter.toString());
}
Object result = null;
if (this.useExactMatch) {
result = MethodUtils.invokeExactMethod(target, this.methodName, paramValues, this.paramTypes);
} else {
result = MethodUtils.invokeMethod(target, this.methodName, paramValues, this.paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,FP,2,11,digester,903,"Formatter formatter = new Formatter().format(""CallMethodRule[methodName=%s, paramCount=%s, paramTypes={"",
","@Override
public String toString() {
Formatter formatter = new Formatter().format(""CallMethodRule[methodName=%s, paramCount=%s, paramTypes={"", this.methodName, this.paramTypes.length);
if (this.paramTypes != null) {
for (int i = 0; i < this.paramTypes.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(this.paramTypes[i].getName());
}
}
return formatter.format(""}]"").toString();
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,FP,2,18,digester,904,"private String matchPrefix = null;
private Rules decoratedRules = null;
private List<Rule> rules = new ArrayList<Rule>(1);
private AnyChildRule rule;
public AnyChildRules(AnyChildRule rule) {
this.rule = rule;
rules.add(rule);
}
public Digester getDigester() { return null; }
public void setDigester(Digester digester) {}
public String getNamespaceURI() { return null; }
public void setNamespaceURI(String namespaceURI) {}
public void add(String pattern, Rule rule) {}
public void clear() {}
public List<Rule> match(String namespaceURI, String matchPath) {
List<Rule> match = decoratedRules.match(namespaceURI, matchPath);
if ((matchPath.startsWith(matchPrefix))
&& (matchPath.indexOf('/', matchPrefix.length()) == -1)) {
if ((match == null || match.size()==0)) {
// just one rule: the one passed to this object's
return rules;
} else {
LinkedList<Rule> newMatch = new LinkedList<Rule>(match);
newMatch.addLast(rule);
return newMatch;
}
} else {
return match;
}
}
public List<Rule> rules() {
if (this.getDigester().getLog().isDebugEnabled()) {
this.getDigester().getLog().debug(""AnyChildRules.rules invoked."");
}
return decoratedRules.rules();
}
public void init(String prefix, Rules rules) {
matchPrefix = prefix;
decoratedRules = rules;
}
public Rules getOldRules() {
return decoratedRules;
",private String currChildNamespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,905,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,907,"return this.memoryRulesBinder.forPattern(pattern);
","protected LinkedRuleBuilder forPattern(String pattern) {
return this.memoryRulesBinder.forPattern(pattern);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,943,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,944,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,FP,2,16,digester,945,"log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
","public InputSource resolveEntity(String publicId, String systemId) throws SAXException {
if (saxLog.isDebugEnabled()) {
saxLog.debug(""resolveEntity('"" + publicId + ""', '"" + systemId + ""')"");
}
if (publicId != null)
this.publicId = publicId;
URL entityURL = null;
if (publicId != null) {
entityURL = (URL) entityValidator.get(publicId);
}
if (schemaLocation != null && entityURL == null && systemId != null) {
entityURL = (URL) entityValidator.get(systemId);
}
if (entityURL == null) {
if (systemId == null) {
if (log.isDebugEnabled()) {
log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
}
return (null);
} else {
if (log.isDebugEnabled()) {
log.debug("" Trying to resolve using system ID '"" + systemId + ""'"");
}
try {
entityURL = new URL(systemId);
} catch (MalformedURLException e) {
throw new IllegalArgumentException(""Malformed URL '"" + systemId + ""' : "" + e.getMessage());
}
}
}
if (log.isDebugEnabled()) {
log.debug("" Resolving to alternate DTD '"" + entityURL + ""'"");
}
try {
return createInputSourceFromURL(entityURL);
} catch (Exception e) {
throw createSAXException(e);
}
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,946,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,949,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,950,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,951,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,952,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,953,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,954,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,955,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,956,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,957,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,958,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,959,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,960,protected static String versionNumber = null;,protected static String versionNumber = null;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,961,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,962,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,963,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,964,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,965,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,966,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,967,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,968,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,969,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,970,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,971,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,972,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,973,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,974,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,975,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,976,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,996,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,997,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,FP,2,16,digester,998,"log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
","public InputSource resolveEntity(String publicId, String systemId) throws SAXException {
if (saxLog.isDebugEnabled()) {
saxLog.debug(""resolveEntity('"" + publicId + ""', '"" + systemId + ""')"");
}
if (publicId != null)
this.publicId = publicId;
URL entityURL = null;
if (publicId != null) {
entityURL = (URL) entityValidator.get(publicId);
}
if (schemaLocation != null && entityURL == null && systemId != null) {
entityURL = (URL) entityValidator.get(systemId);
}
if (entityURL == null) {
if (systemId == null) {
if (log.isDebugEnabled()) {
log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
}
return (null);
} else {
if (log.isDebugEnabled()) {
log.debug("" Trying to resolve using system ID '"" + systemId + ""'"");
}
try {
entityURL = new URL(systemId);
} catch (MalformedURLException e) {
throw new IllegalArgumentException(""Malformed URL '"" + systemId + ""' : "" + e.getMessage());
}
}
}
if (log.isDebugEnabled()) {
log.debug("" Resolving to alternate DTD '"" + entityURL + ""'"");
}
try {
return createInputSourceFromURL(entityURL);
} catch (Exception e) {
throw createSAXException(e);
}
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,999,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1002,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,1003,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1004,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1005,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,1006,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,1007,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,1008,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1009,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,1010,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1011,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1012,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1013,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1014,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1015,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1016,"// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;","// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1017,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1018,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1019,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1020,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1021,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1022,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1023,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1024,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1025,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1026,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1027,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1028,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,1029,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1051,"if ( paramTypes.length == 0 )
","@Override
public void end(final String namespace, final String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
final Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
final Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1052,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (final EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1053,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (final EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1054,"return ( null );
","public Object[] peekParams(final int n) {
final int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (final EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1055,"{
@Override
public Field[] run()
{
return type.getDeclaredFields();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
@Override
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
@Override
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
@Override
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1056,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
@Override
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
@Override
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
@Override
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1057,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(final A annotation, final E element) {
final Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
final Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (final Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
final DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
final Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
final AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (final Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1059,"{
@Override
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
@Override
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
@Override
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
@Override
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1060,"return null;
","public static Annotation[] getAnnotationsArrayValue(final Annotation annotation) {
final Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1061,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1063,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(final String namespace, final String name, final Attributes attributes) throws Exception {
final String fileName = attributes.getValue(""url"");
if (fileName != null && !fileName.isEmpty()) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (final MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
final Set<String> includedFiles = memoryRulesBinder.getIncludedFiles();
final String xmlRulesResourceString = xmlRulesResource.toString();
if (includedFiles.add(xmlRulesResourceString)) {
try {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} finally {
includedFiles.remove(xmlRulesResourceString);
}
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
final String className = attributes.getValue(""class"");
if (className != null && !className.isEmpty()) {
try {
final Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
final RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (final Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1064,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(final String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1065,"this.updated = updated;
","public void setUpdated(final Date updated) {
this.updated = updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1066,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1067,"this.updated = updated;
","public void setUpdated(final Date updated) {
this.updated = updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1068,"return updated;
","public Date getUpdated() {
return updated;
}"
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,FP,2,18,digester,1069,"final String address = emails.get( type );
","public void print() {
System.out.println(""Person #"" + id);
System.out.println(""  category="" + category);
System.out.println(""  name="" + name);
for (final String type : emails.keySet()) {
final String address = emails.get(type);
System.out.println(""  email (type "" + type + "") : "" + address);
}
for (final Address addr : addresses) {
addr.print(System.out, 2);
}
}"
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,FP,3,19,digester,1070,"final java.io.FileInputStream fis = new java.io.FileInputStream( srcfile );
","private static java.io.Reader getInputData(final String filename) throws IOException {
final java.io.File srcfile = new java.io.File(filename);
final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(1000);
final byte[] buf = new byte[100];
final java.io.FileInputStream fis = new java.io.FileInputStream(srcfile);
for (; ; ) {
final int nread = fis.read(buf);
if (nread == -1) {
break;
}
baos.write(buf, 0, nread);
}
fis.close();
return new java.io.StringReader(baos.toString());
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1071,"return new java.io.StringReader( baos.toString() );
","private static java.io.Reader getInputData(final String filename) throws IOException {
final java.io.File srcfile = new java.io.File(filename);
final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(1000);
final byte[] buf = new byte[100];
final java.io.FileInputStream fis = new java.io.FileInputStream(srcfile);
for (; ; ) {
final int nread = fis.read(buf);
if (nread == -1) {
break;
}
baos.write(buf, 0, nread);
}
fis.close();
return new java.io.StringReader(baos.toString());
}"
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,FP,2,20,digester,1072,"final java.io.FileInputStream fis = new java.io.FileInputStream( srcfile );
","private static java.io.Reader getInputData(final String filename) throws IOException {
final java.io.File srcfile = new java.io.File(filename);
final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(1000);
final byte[] buf = new byte[100];
final java.io.FileInputStream fis = new java.io.FileInputStream(srcfile);
for (; ; ) {
final int nread = fis.read(buf);
if (nread == -1) {
break;
}
baos.write(buf, 0, nread);
}
fis.close();
return new java.io.StringReader(baos.toString());
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,FP,3,19,digester,1073,"addRules( d, connection );
","public static void main(final String[] args) {
if (args.length != 1) {
usage();
System.exit(-1);
}
final String filename = args[0];
final Digester d = new Digester();
final Connection connection = null;
addRules(d, connection);
System.out.println(""Parsing commencing..."");
try {
final File srcfile = new File(filename);
d.parse(srcfile);
} catch (final IOException ioe) {
System.out.println(""Error reading input file:"" + ioe.getMessage());
System.exit(-1);
} catch (final SAXException se) {
System.out.println(""Error parsing input file:"" + se.getMessage());
System.exit(-1);
}
System.out.println(""Parsing complete."");
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,3,20,digester,1074,private final Connection conn;,private final Connection conn;
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1075,"this.updated = updated;
","public void setUpdated(final Date updated) {
this.updated = updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1076,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1077,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1078,"this.updated = updated;
","public void setUpdated(final Date updated) {
this.updated = updated;
}"
I18N,DM_CONVERT_CASE,FP,3,20,digester,1079,"return s.toLowerCase();
","@Override
public String transform(final String s) {
if (toLower) {
return s.toLowerCase();
}
return s.toUpperCase();
}"
BAD_PRACTICE,OS_OPEN_STREAM,FP,2,16,digester,1080,"final BufferedReader in = new BufferedReader( inRaw );
","private void execute() throws IOException {
final FileReader inRaw = new FileReader(source);
final FileWriter out = new FileWriter(dest);
final BufferedReader in = new BufferedReader(inRaw);
while (true) {
final String inStr = in.readLine();
if (inStr == null) {
break;
}
final String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,FP,3,19,digester,1081,"final FileWriter out = new FileWriter( dest );
","private void execute() throws IOException {
final FileReader inRaw = new FileReader(source);
final FileWriter out = new FileWriter(dest);
final BufferedReader in = new BufferedReader(inRaw);
while (true) {
final String inStr = in.readLine();
if (inStr == null) {
break;
}
final String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1082,"final FileReader inRaw = new FileReader( source );
","private void execute() throws IOException {
final FileReader inRaw = new FileReader(source);
final FileWriter out = new FileWriter(dest);
final BufferedReader in = new BufferedReader(inRaw);
while (true) {
final String inStr = in.readLine();
if (inStr == null) {
break;
}
final String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,FP,2,20,digester,1083,"final FileWriter out = new FileWriter( dest );
","private void execute() throws IOException {
final FileReader inRaw = new FileReader(source);
final FileWriter out = new FileWriter(dest);
final BufferedReader in = new BufferedReader(inRaw);
while (true) {
final String inStr = in.readLine();
if (inStr == null) {
break;
}
final String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,FP,2,20,digester,1084,"final FileReader inRaw = new FileReader( source );
","private void execute() throws IOException {
final FileReader inRaw = new FileReader(source);
final FileWriter out = new FileWriter(dest);
final BufferedReader in = new BufferedReader(inRaw);
while (true) {
final String inStr = in.readLine();
if (inStr == null) {
break;
}
final String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1085,"final FileWriter out = new FileWriter( dest );
","private void execute() throws IOException {
final FileReader inRaw = new FileReader(source);
final FileWriter out = new FileWriter(dest);
final BufferedReader in = new BufferedReader(inRaw);
while (true) {
final String inStr = in.readLine();
if (inStr == null) {
break;
}
final String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1086,"buf.replace( idx, idx + from.length(), to );
","@Override
public String transform(final String s) {
final StringBuilder buf = new StringBuilder(s);
while (true) {
final int idx = buf.indexOf(from);
if (idx == -1) {
break;
}
buf.replace(idx, idx + from.length(), to);
}
return buf.toString();
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1087,"pw = new PrintWriter( stream );
","public void render(final OutputStream stream, final String encoding) throws UnsupportedEncodingException {
PrintWriter pw = null;
if (encoding == null) {
pw = new PrintWriter(stream);
} else {
pw = new PrintWriter(new OutputStreamWriter(stream, encoding));
}
render(pw, encoding);
pw.flush();
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,1088,"catch ( final Exception e )
","public static void main(final String[] args) {
try {
System.out.println(""RSSDigester Test Program"");
System.out.println(""Opening input stream ..."");
final InputStream is = RSSDigester.class.getResourceAsStream(""/org/apache/commons/digester3/rss/rss-example.xml"");
System.out.println(""Creating new digester ..."");
final RSSDigester digester = new RSSDigester();
if ((args.length > 0) && (args[0].equals(""-debug""))) {
digester.setLogger(LogFactory.getLog(""RSSDigester""));
}
System.out.println(""Parsing input stream ..."");
final Channel channel = (Channel) digester.parse(is);
System.out.println(""Closing input stream ..."");
is.close();
System.out.println(""Dumping channel info ..."");
channel.render(System.out);
} catch (final Exception e) {
System.out.println(""-->Exception"");
e.printStackTrace(System.out);
}
}"
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,FP,2,18,digester,1089,"final String address = emails.get( type );
","public void print() {
System.out.println(""Person #"" + id);
System.out.println(""  category="" + category);
System.out.println(""  name="" + name);
for (final String type : emails.keySet()) {
final String address = emails.get(type);
System.out.println(""  email (type "" + type + "") : "" + address);
}
for (final Address addr : addresses) {
addr.print(System.out, 2);
}
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1091,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1092,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1093,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1094,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1095,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1096,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1097,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1099,"{
public Method[] run()
{
return type.getDeclaredMethods();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1100,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1101,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1103,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1104,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1105,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1106,"this.updated = updated;
","public void setUpdated(Date updated) {
this.updated = updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1107,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1108,"this.updated = updated;
","public void setUpdated(Date updated) {
this.updated = updated;
}"
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,FP,2,18,digester,1109,"String address = emails.get( type );
","public void print() {
System.out.println(""Person #"" + id);
System.out.println(""  category="" + category);
System.out.println(""  name="" + name);
for (Iterator<String> i = emails.keySet().iterator(); i.hasNext(); ) {
String type = i.next();
String address = emails.get(type);
System.out.println(""  email (type "" + type + "") : "" + address);
}
for (Iterator<Address> i = addresses.iterator(); i.hasNext(); ) {
Address addr = i.next();
addr.print(System.out, 2);
}
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1110,"return new java.io.StringReader( baos.toString() );
","private static java.io.Reader getInputData(String filename) throws java.io.IOException {
java.io.File srcfile = new java.io.File(filename);
java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(1000);
byte[] buf = new byte[100];
java.io.FileInputStream fis = new java.io.FileInputStream(srcfile);
for (; ; ) {
int nread = fis.read(buf);
if (nread == -1) {
break;
}
baos.write(buf, 0, nread);
}
fis.close();
return new java.io.StringReader(baos.toString());
}"
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,FP,3,19,digester,1111,"java.io.FileInputStream fis = new java.io.FileInputStream( srcfile );
","private static java.io.Reader getInputData(String filename) throws java.io.IOException {
java.io.File srcfile = new java.io.File(filename);
java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(1000);
byte[] buf = new byte[100];
java.io.FileInputStream fis = new java.io.FileInputStream(srcfile);
for (; ; ) {
int nread = fis.read(buf);
if (nread == -1) {
break;
}
baos.write(buf, 0, nread);
}
fis.close();
return new java.io.StringReader(baos.toString());
}"
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,FP,2,20,digester,1112,"java.io.FileInputStream fis = new java.io.FileInputStream( srcfile );
","private static java.io.Reader getInputData(String filename) throws java.io.IOException {
java.io.File srcfile = new java.io.File(filename);
java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(1000);
byte[] buf = new byte[100];
java.io.FileInputStream fis = new java.io.FileInputStream(srcfile);
for (; ; ) {
int nread = fis.read(buf);
if (nread == -1) {
break;
}
baos.write(buf, 0, nread);
}
fis.close();
return new java.io.StringReader(baos.toString());
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,FP,3,19,digester,1113,"addRules( d, connection );
","public static void main(String[] args) {
if (args.length != 1) {
usage();
System.exit(-1);
}
String filename = args[0];
Digester d = new Digester();
Connection connection = null;
addRules(d, connection);
System.out.println(""Parsing commencing..."");
try {
File srcfile = new File(filename);
d.parse(srcfile);
} catch (IOException ioe) {
System.out.println(""Error reading input file:"" + ioe.getMessage());
System.exit(-1);
} catch (SAXException se) {
System.out.println(""Error parsing input file:"" + se.getMessage());
System.exit(-1);
}
System.out.println(""Parsing complete."");
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,1114,private Connection conn;,private Connection conn;
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1115,"this.updated = updated;
","public void setUpdated(Date updated) {
this.updated = updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1116,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP,FP,2,18,digester,1117,"return updated;
","public Date getUpdated() {
return updated;
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1118,"this.updated = updated;
","public void setUpdated(Date updated) {
this.updated = updated;
}"
I18N,DM_CONVERT_CASE,FP,3,20,digester,1119,"return s.toLowerCase();
","public String transform(String s) {
if (toLower) {
return s.toLowerCase();
}
return s.toUpperCase();
}"
BAD_PRACTICE,OS_OPEN_STREAM,FP,2,16,digester,1120,"BufferedReader in = new BufferedReader( inRaw );
","private void execute() throws IOException {
FileReader inRaw = new FileReader(source);
FileWriter out = new FileWriter(dest);
BufferedReader in = new BufferedReader(inRaw);
while (true) {
String inStr = in.readLine();
if (inStr == null)
break;
String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1121,"FileReader inRaw = new FileReader( source );
","private void execute() throws IOException {
FileReader inRaw = new FileReader(source);
FileWriter out = new FileWriter(dest);
BufferedReader in = new BufferedReader(inRaw);
while (true) {
String inStr = in.readLine();
if (inStr == null)
break;
String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,FP,3,19,digester,1122,"FileWriter out = new FileWriter( dest );
","private void execute() throws IOException {
FileReader inRaw = new FileReader(source);
FileWriter out = new FileWriter(dest);
BufferedReader in = new BufferedReader(inRaw);
while (true) {
String inStr = in.readLine();
if (inStr == null)
break;
String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1123,"FileWriter out = new FileWriter( dest );
","private void execute() throws IOException {
FileReader inRaw = new FileReader(source);
FileWriter out = new FileWriter(dest);
BufferedReader in = new BufferedReader(inRaw);
while (true) {
String inStr = in.readLine();
if (inStr == null)
break;
String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,FP,2,20,digester,1124,"FileReader inRaw = new FileReader( source );
","private void execute() throws IOException {
FileReader inRaw = new FileReader(source);
FileWriter out = new FileWriter(dest);
BufferedReader in = new BufferedReader(inRaw);
while (true) {
String inStr = in.readLine();
if (inStr == null)
break;
String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,FP,2,20,digester,1125,"FileWriter out = new FileWriter( dest );
","private void execute() throws IOException {
FileReader inRaw = new FileReader(source);
FileWriter out = new FileWriter(dest);
BufferedReader in = new BufferedReader(inRaw);
while (true) {
String inStr = in.readLine();
if (inStr == null)
break;
String outStr = transformer.transform(inStr);
out.write(outStr);
out.write('\n');
}
inRaw.close();
out.close();
System.out.println(""Contents of file "" + source + "" have been transformed, and"" + "" written to file "" + dest + ""."");
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1126,"buf.replace( idx, idx + from.length(), to );
","public String transform(String s) {
StringBuilder buf = new StringBuilder(s);
while (true) {
int idx = buf.indexOf(from);
if (idx == -1) {
break;
}
buf.replace(idx, idx + from.length(), to);
}
return buf.toString();
}"
I18N,DM_DEFAULT_ENCODING,FP,1,19,digester,1127,"pw = new PrintWriter( stream );
","public void render(OutputStream stream, String encoding) throws UnsupportedEncodingException {
PrintWriter pw = null;
if (encoding == null) {
pw = new PrintWriter(stream);
} else {
pw = new PrintWriter(new OutputStreamWriter(stream, encoding));
}
render(pw, encoding);
pw.flush();
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,1128,"catch ( Exception e )
","public static void main(String[] args) {
try {
System.out.println(""RSSDigester Test Program"");
System.out.println(""Opening input stream ..."");
InputStream is = RSSDigester.class.getResourceAsStream(""/org/apache/commons/digester3/rss/rss-example.xml"");
System.out.println(""Creating new digester ..."");
RSSDigester digester = new RSSDigester();
if ((args.length > 0) && (args[0].equals(""-debug""))) {
digester.setLogger(LogFactory.getLog(""RSSDigester""));
}
System.out.println(""Parsing input stream ..."");
Channel channel = (Channel) digester.parse(is);
System.out.println(""Closing input stream ..."");
is.close();
System.out.println(""Dumping channel info ..."");
channel.render(System.out);
} catch (Exception e) {
System.out.println(""-->Exception"");
e.printStackTrace(System.out);
}
}"
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,FP,2,18,digester,1129,"String address = emails.get( type );
","public void print() {
System.out.println(""Person #"" + id);
System.out.println(""  category="" + category);
System.out.println(""  name="" + name);
for (Iterator<String> i = emails.keySet().iterator(); i.hasNext(); ) {
String type = i.next();
String address = emails.get(type);
System.out.println(""  email (type "" + type + "") : "" + address);
}
for (Iterator<Address> i = addresses.iterator(); i.hasNext(); ) {
Address addr = i.next();
addr.print(System.out, 2);
}
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,1131,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1132,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,1133,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,FP,2,16,digester,1134,"log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
","public InputSource resolveEntity(String publicId, String systemId) throws SAXException {
if (saxLog.isDebugEnabled()) {
saxLog.debug(""resolveEntity('"" + publicId + ""', '"" + systemId + ""')"");
}
if (publicId != null)
this.publicId = publicId;
URL entityURL = null;
if (publicId != null) {
entityURL = (URL) entityValidator.get(publicId);
}
if (schemaLocation != null && entityURL == null && systemId != null) {
entityURL = (URL) entityValidator.get(systemId);
}
if (entityURL == null) {
if (systemId == null) {
if (log.isDebugEnabled()) {
log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
}
return (null);
} else {
if (log.isDebugEnabled()) {
log.debug("" Trying to resolve using system ID '"" + systemId + ""'"");
}
try {
entityURL = new URL(systemId);
} catch (MalformedURLException e) {
throw new IllegalArgumentException(""Malformed URL '"" + systemId + ""' : "" + e.getMessage());
}
}
}
if (log.isDebugEnabled()) {
log.debug("" Resolving to alternate DTD '"" + entityURL + ""'"");
}
try {
return createInputSourceFromURL(entityURL);
} catch (Exception e) {
throw createSAXException(e);
}
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1137,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,1138,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1139,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1140,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1141,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1142,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,1143,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1144,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,1145,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1146,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
PERFORMANCE,DM_FP_NUMBER_CTOR,FP,3,20,digester,1147,"version = new Float( versionNumber ).floatValue();
","public static SAXParser newSAXParser(Properties properties) throws ParserConfigurationException, SAXException, SAXNotSupportedException {
SAXParserFactory factory = (SAXParserFactory) properties.get(""SAXParserFactory"");
if (versionNumber == null) {
versionNumber = getXercesVersion();
version = new Float(versionNumber).floatValue();
}
// Note: 2.2 is completely broken (with XML Schema).
if (version > 2.1) {
configureXerces(factory);
return factory.newSAXParser();
} else {
SAXParser parser = factory.newSAXParser();
configureOldXerces(parser, properties);
return parser;
}
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,1148,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1149,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1150,"// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;","// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1151,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1152,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1153,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1154,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1155,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1156,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1157,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1158,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1159,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1160,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1161,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1162,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1163,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,1164,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,1251,"Object paramValues[] = new Object[paramTypes.length];
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
StringBuilder sb = new StringBuilder();
sb.append(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(getDigester().getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (getDigester().getLogger().isDebugEnabled()) {
StringBuilder sb = new StringBuilder(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
getDigester().getLogger().debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1252,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
StringBuilder sb = new StringBuilder();
sb.append(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(getDigester().getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (getDigester().getLogger().isDebugEnabled()) {
StringBuilder sb = new StringBuilder(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
getDigester().getLogger().debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1253,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1254,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1255,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,1257,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1260,"{
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry( Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest )
{
return size() > cacheSize;
",private final float loadFactor = 0.75f;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1261,private final float loadFactor = 0.75f;,private final float loadFactor = 0.75f;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1262,private final int cacheSize = 255;,private final int cacheSize = 255;
BAD_PRACTICE,SE_BAD_FIELD,FP,1,14,digester,1263,"private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};","private final Map<Class<?>, FromAnnotationsRuleSet> data = new LinkedHashMap<Class<?>, FromAnnotationsRuleSet>(capacity, loadFactor) {
private static final long serialVersionUID = 1L;
@Override
protected boolean removeEldestEntry(Map.Entry<Class<?>, FromAnnotationsRuleSet> eldest) {
return size() > cacheSize;
}
};"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1264,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1265,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1267,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1268,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1269,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1270,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1271,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1272,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1273,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1274,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1275,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1276,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1277,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1278,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1279,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1280,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1281,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1300,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1301,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1302,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1303,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1304,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1307,"{
public Field[] run()
{
return type.getDeclaredFields();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1308,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1309,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1310,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1312,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1313,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
CORRECTNESS,NP_GUARANTEED_DEREF,FP,2,8,digester,1314,"invokeExactMethod( parent, methodName, new Object[] { child }, paramTypes );
","private void invoke() throws Exception {
Object child = getChild();
Object parent = getParent();
if (getDigester().getLogger().isDebugEnabled()) {
if (parent == null) {
getDigester().getLogger().debug(format(""[%s]{%s} Call [NULL PARENT].%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), methodName, child));
} else {
getDigester().getLogger().debug(format(""[%s]{%s} Call %s.%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), parent.getClass().getName(), methodName, child));
}
}
Class<?>[] paramTypes = new Class<?>[1];
if (paramType != null) {
paramTypes[0] = getDigester().getClassLoader().loadClass(paramTypeName);
} else {
paramTypes[0] = child.getClass();
}
if (useExactMatch) {
invokeExactMethod(parent, methodName, new Object[] { child }, paramTypes);
} else {
invokeMethod(parent, methodName, new Object[] { child }, paramTypes);
}
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1315,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1316,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1317,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1318,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1320,"{
public Method[] run()
{
return type.getDeclaredMethods();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1321,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1322,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1323,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1324,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1325,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1327,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1328,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,1332,"Object paramValues[] = new Object[paramTypes.length];
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1333,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1334,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1335,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1336,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,1338,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1339,"{
public Method[] run()
{
return type.getDeclaredMethods();
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1340,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1341,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1342,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
MALICIOUS_CODE,EI_EXPOSE_REP2,FP,2,18,digester,1344,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1345,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1346,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1348,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1349,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1438,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1439,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1440,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1441,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1442,"{
public Method[] run()
{
return type.getDeclaredMethods();
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1443,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1445,"{
public Field[] run()
{
return type.getDeclaredFields();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1446,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1447,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1448,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1450,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1451,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1452,"if (paramTypes.length == 0) {
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,1453,"Object paramValues[] = new Object[paramTypes.length];
","public void end() throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = (Object[]) digester.popParams();
if (digester.log.isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
digester.log.trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
;
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = digester.peek(targetOffset);
} else {
target = digester.peek(digester.getCount() + targetOffset);
}
if (target == null) {
StringBuffer sb = new StringBuffer();
sb.append(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(digester.getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (digester.log.isDebugEnabled()) {
StringBuffer sb = new StringBuffer(""[CallMethodRule]{"");
sb.append(digester.match);
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
digester.log.debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,1454,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1457,protected String namespaceURI = null;,protected String namespaceURI = null;
PERFORMANCE,URF_UNREAD_FIELD,FP,2,18,digester,1458,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1459,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1460,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,1461,protected static float version;,protected static float version;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1462,"protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";","protected static String XERCES_SCHEMA = ""http://apache.org/xml/features/validation/schema"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1463,"protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";","protected static String XERCES_DYNAMIC = ""http://apache.org/xml/features/validation/dynamic"";"
DODGY_CODE,REC_CATCH_EXCEPTION,FP,2,17,digester,1464,"} catch (Exception ex){
","private static String getXercesVersion() {
String versionNumber = ""1.0"";
try {
Class versionClass = Class.forName(""org.apache.xerces.impl.Version"");
Method method = versionClass.getMethod(""getVersion"", (Class[]) null);
String version = (String) method.invoke(null, (Object[]) null);
versionNumber = version.substring(""Xerces-J"".length(), version.lastIndexOf("".""));
} catch (Exception ex) {
}
return versionNumber;
}"
MALICIOUS_CODE,MS_PKGPROTECT,FP,2,18,digester,1465,protected static String versionNumber = null;,protected static String versionNumber = null;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1466,"protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");","protected static Log log = LogFactory.getLog(""org.apache.commons.digester.Digester.sax"");"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1467,"protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";","protected static String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1469,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,FP,2,18,digester,1470,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1471,"// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;","// TODO: Consider making following four constants static in 2.0
public final String DFLT_PLUGIN_CLASS_ATTR_NS = null;"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1472,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1473,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1474,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1475,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1476,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1477,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1478,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1479,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1480,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1481,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1482,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,FP,1,16,digester,1483,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
PERFORMANCE,UUF_UNUSED_FIELD,FP,2,18,digester,1484,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1510,"if ( paramTypes.length == 0 )
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
paramTypes = new Class<?>[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1511,"return ( null );
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1512,"return ( null );
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1513,"return ( null );
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1514,"{
public Method[] run()
{
return type.getDeclaredMethods();
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1515,"rulesBinder.addError( e );
","@SuppressWarnings(""unchecked"")
private <A extends Annotation, E extends AnnotatedElement, R extends Rule> void handle(A annotation, E element) {
Class<?> annotationType = annotation.annotationType();
if (annotationType.isAnnotationPresent(DigesterRuleList.class)) {
Annotation[] annotations = getAnnotationsArrayValue(annotation);
if (annotations != null && annotations.length > 0) {
for (Annotation ptr : annotations) {
handle(ptr, element);
}
}
} else if (annotationType.isAnnotationPresent(DigesterRule.class)) {
DigesterRule digesterRule = annotationType.getAnnotation(DigesterRule.class);
Class<? extends AnnotationHandler<Annotation, AnnotatedElement>> handlerType = (Class<? extends AnnotationHandler<Annotation, AnnotatedElement>>) digesterRule.handledBy();
try {
AnnotationHandler<Annotation, AnnotatedElement> handler = annotationHandlerFactory.newInstance(handlerType);
handler.handle(annotation, element, this.rulesBinder);
} catch (Exception e) {
rulesBinder.addError(e);
}
}
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1516,"{
public Field[] run()
{
return type.getDeclaredFields();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1517,"|| rulesBinder.isAlreadyBound( type ) )
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1518,"{
public Constructor<?>[] run()
{
return type.getDeclaredConstructors();
","protected final void bindRulesFrom(final Class<?> type) {
if (type == null || type.getPackage().getName().startsWith(JAVA_PACKAGE) || rulesBinder.isAlreadyBound(type)) {
return;
}
visitElements(type);
if (!type.isInterface()) {
visitElements(new PrivilegedAction<Constructor<?>[]>() {
public Constructor<?>[] run() {
return type.getDeclaredConstructors();
}
});
visitElements(new PrivilegedAction<Field[]>() {
public Field[] run() {
return type.getDeclaredFields();
}
});
}
visitElements(new PrivilegedAction<Method[]>() {
public Method[] run() {
return type.getDeclaredMethods();
}
});
rulesBinder.markAsBound(type);
bindRulesFrom(type.getSuperclass());
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1519,"return null;
","public static Annotation[] getAnnotationsArrayValue(Annotation annotation) {
Object value = getAnnotationValue(annotation);
if (value != null && value.getClass().isArray() && Annotation.class.isAssignableFrom(value.getClass().getComponentType())) {
return (Annotation[]) value;
}
return null;
}"
CORRECTNESS,NP_NULL_PARAM_DEREF,FP,3,11,digester,1520,"return new FactoryCreateRule( type, attributeName, ignoreCreateExceptions );
","@Override
protected FactoryCreateRule createRule() {
if (type == null && attributeName == null && creationFactory == null) {
reportError(""factoryCreate()"", ""at least one between 'className', 'attributeName' or 'creationFactory' has to be specified"");
}
if (type != null || attributeName != null) {
return new FactoryCreateRule(type, attributeName, ignoreCreateExceptions);
}
return new FactoryCreateRule(creationFactory, ignoreCreateExceptions);
}"
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,FP,3,20,digester,1522,"{
@Override
protected void loadRules()
{
loadXMLRules( xmlRulesResource );
}
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
String fileName = attributes.getValue(""url"");
if (fileName != null && fileName.length() > 0) {
final URL xmlRulesResource;
if (fileName.startsWith(CLASSPATH_URL_PREFIX)) {
String path = fileName.substring(CLASSPATH_URL_PREFIX.length());
if ('/' == path.charAt(0)) {
path = path.substring(1);
}
xmlRulesResource = this.targetRulesBinder.getContextClassLoader().getResource(path);
if (xmlRulesResource == null) {
targetRulesBinder.addError(""Resource '%s' not found, please make sure it is in the classpath"", path);
return;
}
} else {
try {
xmlRulesResource = new URL(fileName);
} catch (MalformedURLException e) {
targetRulesBinder.addError(""An error occurred while inculing file from '%s': %s"", fileName, e.getMessage());
return;
}
}
if (memoryRulesBinder.getIncludedFiles().add(xmlRulesResource.toString())) {
install(new FromXmlRulesModule() {
@Override
protected void loadRules() {
loadXMLRules(xmlRulesResource);
}
});
} else {
targetRulesBinder.addError(""Circular file inclusion detected for XML rules: %s"", xmlRulesResource);
}
}
String className = attributes.getValue(""class"");
if (className != null && className.length() > 0) {
try {
Class<?> cls = Class.forName(className);
if (!RulesModule.class.isAssignableFrom(cls)) {
targetRulesBinder.addError(""Class '%s' if not a '%s' implementation"", className, RulesModule.class.getName());
return;
}
RulesModule rulesSource = (RulesModule) cls.newInstance();
install(rulesSource);
} catch (Exception e) {
targetRulesBinder.addError(""Impossible to include programmatic rules from class '%s': %s"", className, e.getMessage());
}
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1523,"return memoryRulesBinder.forPattern( pattern );
","protected LinkedRuleBuilder forPattern(String pattern) {
return memoryRulesBinder.forPattern(pattern);
}"
CORRECTNESS,NP_NULL_ON_SOME_PATH,FP,2,8,digester,1599,"Object[] paramValues = new Object[paramTypes.length];
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(format(""[CallMethodRule]{%s} parameters[%s]=%s"", getDigester().getMatch(), i, parameters[i]));
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[] { bodyText };
if (paramTypes.length == 0) {
paramTypes = new Class[] { String.class };
}
} else {
parameters = new Object[0];
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
throw new SAXException(format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", getDigester().getMatch(), targetOffset, getDigester().getCount()));
}
if (getDigester().getLogger().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", getDigester().getMatch(), target.getClass().getName(), methodName);
for (int i = 0; i < paramValues.length; i++) {
formatter.format(""%s%s/%s"", (i > 0 ? "", "" : """"), paramValues[i], paramTypes[i].getName());
}
formatter.format("")"");
getDigester().getLogger().debug(formatter.toString());
}
Object result = null;
if (useExactMatch) {
result = invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
PERFORMANCE,URF_UNREAD_FIELD,TP,2,18,digester,1601,private String currChildNamespaceURI = null;,private String currChildNamespaceURI = null;
DODGY_CODE,REC_CATCH_EXCEPTION,FP,3,20,digester,1603,"} catch (Exception e) {
","public SAXParser getParser() {
if (parser != null) {
return (parser);
}
try {
if (validating && (schemaLocation != null)) {
Properties properties = new Properties();
properties.put(""SAXParserFactory"", getFactory());
if (schemaLocation != null) {
properties.put(""schemaLocation"", schemaLocation);
properties.put(""schemaLanguage"", schemaLanguage);
}
parser = ParserFeatureSetterFactory.newSAXParser(properties);
} else {
parser = getFactory().newSAXParser();
}
} catch (Exception e) {
log.error(""Digester.getParser: "", e);
return (null);
}
return (parser);
}"
PERFORMANCE,URF_UNREAD_FIELD,FP,3,20,digester,1605,private final ClassLoader classLoader;,private final ClassLoader classLoader;
PERFORMANCE,SS_SHOULD_BE_STATIC,TP,2,18,digester,1606,"public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";","public final String DFLT_PLUGIN_ID_ATTR = ""plugin-id"";"
PERFORMANCE,UPM_UNCALLED_PRIVATE_METHOD,TP,3,20,digester,1607,"if (keyPattern == null) {
return provider;
}
List<RuleProvider<? extends Rule>> providerLits = providers.get(keyPattern);
if (providerLits == null) {
providerLits = new ArrayList<RuleProvider<? extends Rule>>();
providers.put(keyPattern, providerLits);
}
providerLits.add(provider);
return provider;
","private <R extends Rule> RuleProvider<R> addProvider(RuleProvider<R> provider) {
if (keyPattern == null) {
return provider;
}
List<RuleProvider<? extends Rule>> providerLits = providers.get(keyPattern);
if (providerLits == null) {
providerLits = new ArrayList<RuleProvider<? extends Rule>>();
providers.put(keyPattern, providerLits);
}
providerLits.add(provider);
return provider;
}"
CORRECTNESS,NP_GUARANTEED_DEREF,FP,2,8,digester,1608,"invokeMethod( parent, methodName, new Object[] { child }, paramTypes );
","private void invoke() throws Exception {
final Object child = getChild();
final Object parent = getParent();
if (getDigester().getLogger().isDebugEnabled()) {
if (parent == null) {
getDigester().getLogger().debug(format(""[%s]{%s} Call [NULL PARENT].%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), methodName, child));
} else {
getDigester().getLogger().debug(format(""[%s]{%s} Call %s.%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), parent.getClass().getName(), methodName, child));
}
}
final Class<?>[] paramTypes = new Class<?>[1];
if (paramType != null) {
paramTypes[0] = getDigester().getClassLoader().loadClass(paramTypeName);
} else {
paramTypes[0] = child.getClass();
}
if (useExactMatch) {
invokeExactMethod(parent, methodName, new Object[] { child }, paramTypes);
} else {
invokeMethod(parent, methodName, new Object[] { child }, paramTypes);
}
}"
PERFORMANCE,URF_UNREAD_FIELD,TP,2,18,digester,1609,private Substitutor substitutor;,private Substitutor substitutor;
CORRECTNESS,UWF_NULL_FIELD,FP,3,15,digester,1610,public final String DFLT_PLUGIN_ID_ATTR_NS = null;,public final String DFLT_PLUGIN_ID_ATTR_NS = null;
PERFORMANCE,URF_UNREAD_FIELD,TP,2,18,digester,1611,private String namespaceURI;,private String namespaceURI;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1613,"public static String DFLT_RESOURCE_ATTR = ""resource"";","public static String DFLT_RESOURCE_ATTR = ""resource"";"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1614,"this.rulesBinder.install( rulesModule );
","protected void install(RulesModule rulesModule) {
this.rulesBinder.install(rulesModule);
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1617,"public static String DFLT_PROPS_ATTR = ""setprops"";","public static String DFLT_PROPS_ATTR = ""setprops"";"
PERFORMANCE,URF_UNREAD_FIELD,TP,2,18,digester,1618,private String namespaceURI;,private String namespaceURI;
CORRECTNESS,VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED,TP,2,9,digester,1620,"throw new SAXException( format( ""[ObjectCreateRule]{%s} Class '%s' does not have a construcor with types"",
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
Class<?> clazz = this.clazz;
if (clazz == null) {
String realClassName = className;
if (attributeName != null) {
String value = attributes.getValue(attributeName);
if (value != null) {
realClassName = value;
}
}
if (getDigester().getLogger().isDebugEnabled()) {
getDigester().getLogger().debug(format(""[ObjectCreateRule]{%s} New '%s'"", getDigester().getMatch(), realClassName));
}
clazz = getDigester().getClassLoader().loadClass(realClassName);
}
Object instance;
if (constructorArgumentTypes == null || constructorArgumentTypes.length == 0) {
if (getDigester().getLogger().isDebugEnabled()) {
getDigester().getLogger().debug(format(""[ObjectCreateRule]{%s} New '%s' using default empty constructor"", getDigester().getMatch(), clazz.getName()));
}
instance = clazz.newInstance();
} else {
if (proxyManager == null) {
synchronized (this) {
if (proxyManager == null) {
Constructor<?> constructor = getAccessibleConstructor(clazz, constructorArgumentTypes);
if (constructor == null) {
throw new SAXException(format(""[ObjectCreateRule]{%s} Class '%s' does not have a construcor with types"", getDigester().getMatch(), clazz.getName(), Arrays.toString(constructorArgumentTypes)));
}
proxyManager = new ProxyManager(clazz, constructor, defaultConstructorArguments, getDigester());
}
}
}
instance = proxyManager.createProxy();
}
getDigester().push(instance);
}"
CORRECTNESS,NP_GUARANTEED_DEREF,FP,2,8,digester,1621,"invokeExactMethod( parent, methodName, new Object[] { child }, paramTypes );
","private void invoke() throws Exception {
final Object child = getChild();
final Object parent = getParent();
if (getDigester().getLogger().isDebugEnabled()) {
if (parent == null) {
getDigester().getLogger().debug(format(""[%s]{%s} Call [NULL PARENT].%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), methodName, child));
} else {
getDigester().getLogger().debug(format(""[%s]{%s} Call %s.%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), parent.getClass().getName(), methodName, child));
}
}
final Class<?>[] paramTypes = new Class<?>[1];
if (paramType != null) {
paramTypes[0] = getDigester().getClassLoader().loadClass(paramTypeName);
} else {
paramTypes[0] = child.getClass();
}
if (useExactMatch) {
invokeExactMethod(parent, methodName, new Object[] { child }, paramTypes);
} else {
invokeMethod(parent, methodName, new Object[] { child }, paramTypes);
}
}"
Multithreaded correctness,DC_DOUBLECHECK,TP,2,14,digester,1622,"if ( factory == null )
{
synchronized ( this )
{
// check again for null now that we're in the synchronized block:
if ( factory == null )
","Object createProxy() {
Object[] constructorArguments = new Object[templateConstructorArguments.length];
arraycopy(templateConstructorArguments, 0, constructorArguments, 0, constructorArguments.length);
digester.pushParams(constructorArguments);
DeferredConstructionCallback callback = new DeferredConstructionCallback(constructor, constructorArguments);
Object result;
if (factory == null) {
synchronized (this) {
// check again for null now that we're in the synchronized block:
if (factory == null) {
Enhancer enhancer = new Enhancer();
enhancer.setSuperclass(clazz);
enhancer.setCallback(callback);
enhancer.setClassLoader(digester.getClassLoader());
enhancer.setInterceptDuringConstruction(false);
if (hasDefaultConstructor) {
result = enhancer.create();
} else {
result = enhancer.create(constructor.getParameterTypes(), constructorArguments);
}
factory = (Factory) result;
return result;
}
}
}
if (hasDefaultConstructor) {
result = factory.newInstance(callback);
} else {
result = factory.newInstance(constructor.getParameterTypes(), constructorArguments, new Callback[] { callback });
}
return result;
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1623,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1624,"this.rulesBinder.addError( messagePattern, arguments );
","protected void addError(String messagePattern, Object... arguments) {
this.rulesBinder.addError(messagePattern, arguments);
}"
PERFORMANCE,UUF_UNUSED_FIELD,TP,2,18,digester,1625,private FromXmlRuleSet ruleSet;,private FromXmlRuleSet ruleSet;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1627,"public static String DFLT_RULECLASS_ATTR = ""ruleclass"";","public static String DFLT_RULECLASS_ATTR = ""ruleclass"";"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1628,"return (null);
","public Object[] popParams() {
try {
if (log.isTraceEnabled()) {
log.trace(""Popping params"");
}
return (params.pop());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,FP,3,20,digester,1629,"this.rulesBinder.addError( t );
","protected void addError(Throwable t) {
this.rulesBinder.addError(t);
}"
MALICIOUS_CODE,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED,TP,2,18,digester,1630,"this.classLoader = new BinderClassLoader( classLoader );
","public DigesterLoader setClassLoader(ClassLoader classLoader) {
if (classLoader == null) {
throw new IllegalArgumentException(""Parameter 'classLoader' cannot be null"");
}
this.classLoader = new BinderClassLoader(classLoader);
return this;
}"
BAD_PRACTICE,SE_BAD_FIELD,TP,3,19,digester,1631,private final List<ErrorMessage> errors;,private final List<ErrorMessage> errors;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1632,"public static String DFLT_FILENAME_ATTR = ""file"";","public static String DFLT_FILENAME_ATTR = ""file"";"
PERFORMANCE,SS_SHOULD_BE_STATIC,TP,2,18,digester,1634,"public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";","public final String DFLT_PLUGIN_CLASS_ATTR = ""plugin-class"";"
PERFORMANCE,URF_UNREAD_FIELD,TP,2,18,digester,1638,private boolean useContextClassLoader;,private boolean useContextClassLoader;
MALICIOUS_CODE,EI_EXPOSE_REP2,TP,2,18,digester,1640,"this.annotations = annotations;
","public MethodArgument(int index, Class<?> parameterType, Annotation[] annotations) {
this.index = index;
this.parameterType = parameterType;
this.annotations = annotations;
}"
DODGY_CODE,NP_LOAD_OF_KNOWN_NULL_VALUE,TP,2,16,digester,1643,"log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
","public InputSource resolveEntity(String publicId, String systemId) throws SAXException {
if (saxLog.isDebugEnabled()) {
saxLog.debug(""resolveEntity('"" + publicId + ""', '"" + systemId + ""')"");
}
if (publicId != null)
this.publicId = publicId;
URL entityURL = null;
if (publicId != null) {
entityURL = (URL) entityValidator.get(publicId);
}
if (schemaLocation != null && entityURL == null && systemId != null) {
entityURL = (URL) entityValidator.get(systemId);
}
if (entityURL == null) {
if (systemId == null) {
if (log.isDebugEnabled()) {
log.debug("" Cannot resolve entity: '"" + entityURL + ""'"");
}
return (null);
} else {
if (log.isDebugEnabled()) {
log.debug("" Trying to resolve using system ID '"" + systemId + ""'"");
}
try {
entityURL = new URL(systemId);
} catch (MalformedURLException e) {
throw new IllegalArgumentException(""Malformed URL '"" + systemId + ""' : "" + e.getMessage());
}
}
}
if (log.isDebugEnabled()) {
log.debug("" Resolving to alternate DTD '"" + entityURL + ""'"");
}
try {
return createInputSourceFromURL(entityURL);
} catch (Exception e) {
throw createSAXException(e);
}
}"
CORRECTNESS,NP_GUARANTEED_DEREF,FP,2,8,digester,1644,"invokeExactMethod( parent, methodName, new Object[] { child }, paramTypes );
","private void invoke() throws Exception {
final Object child = getChild();
final Object parent = getParent();
if (getDigester().getLogger().isDebugEnabled()) {
if (parent == null) {
getDigester().getLogger().debug(format(""[%s]{%s} Call [NULL PARENT].%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), methodName, child));
} else {
getDigester().getLogger().debug(format(""[%s]{%s} Call %s.%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), parent.getClass().getName(), methodName, child));
}
}
final Class<?>[] paramTypes = new Class<?>[1];
if (paramType != null) {
paramTypes[0] = getDigester().getClassLoader().loadClass(paramTypeName);
} else {
paramTypes[0] = child.getClass();
}
if (useExactMatch) {
invokeExactMethod(parent, methodName, new Object[] { child }, paramTypes);
} else {
invokeMethod(parent, methodName, new Object[] { child }, paramTypes);
}
}"
PERFORMANCE,URF_UNREAD_FIELD,TP,2,18,digester,1645,private ClassLoader classLoader;,private ClassLoader classLoader;
CORRECTNESS,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,FP,2,11,digester,1646,"if (this.paramTypes.length > 0) {
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (this.paramTypes.length > 0) {
parameters = (Object[]) this.getDigester().popParams();
if (this.getDigester().getLog().isTraceEnabled()) {
Formatter formatter = new Formatter(""[CallMethodRule]"");
for (int i = 0, size = parameters.length; i < size; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""(%s) %s"", i, parameters[i]);
}
this.getDigester().getLog().trace(formatter.toString());
}
if (this.paramTypes.length == 1 && parameters[0] == null) {
return;
}
} else if (this.paramTypes != null && this.paramTypes.length != 0) {
if (this.bodyText == null) {
return;
}
parameters = new Object[] { this.bodyText };
} else {
}
Object[] paramValues = new Object[this.paramTypes.length];
for (int i = 0; i < this.paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(this.paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (this.targetOffset >= 0) {
target = this.getDigester().peek(this.targetOffset);
} else {
target = this.getDigester().peek(this.getDigester().getCount() + this.targetOffset);
}
if (target == null) {
throw this.getDigester().createSAXException(String.format(""[CallMethodRule]{%s} Call target is null (targetOffset=%s, stackdepth=%s)"", this.getDigester().getMatch(), this.targetOffset, this.getDigester().getCount()));
}
if (this.getDigester().getLog().isDebugEnabled()) {
Formatter formatter = new Formatter().format(""[CallMethodRule]{%s} Call %s.%s("", this.getDigester().getMatch(), target.getClass().getName(), this.methodName);
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
formatter.format("", "");
}
formatter.format(""%s/%s"", (paramValues[i] == null ? ""null"" : paramValues[i].toString()), (this.paramTypes[i] == null ? ""null"" : this.paramTypes[i].getName()));
}
formatter.format("")"");
this.getDigester().getLog().debug(formatter.toString());
}
Object result = null;
if (this.useExactMatch) {
result = MethodUtils.invokeExactMethod(target, this.methodName, paramValues, this.paramTypes);
} else {
result = MethodUtils.invokeMethod(target, this.methodName, paramValues, this.paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY,FP,1,7,digester,1647,"return String.format(""ObjectCreateRule[className=%s, attributeName=%s]"", this.type.getClasses(), this.attributeName);
","@Override
public String toString() {
return String.format(""ObjectCreateRule[className=%s, attributeName=%s]"", this.type.getClasses(), this.attributeName);
}"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1648,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1649,"public static String DFLT_METHOD_NAME = ""addRules"";","public static String DFLT_METHOD_NAME = ""addRules"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1650,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1651,"public static String DFLT_METHOD_ATTR = ""method"";","public static String DFLT_METHOD_ATTR = ""method"";"
Multithreaded correctness,IS2_INCONSISTENT_SYNC,FP,2,17,digester,1654,private Object[] defaultConstructorArguments;,private Object[] defaultConstructorArguments;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1658,"public static String DFLT_FALSEVAL = ""false"";","public static String DFLT_FALSEVAL = ""false"";"
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1660,"public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";","public static String DFLT_RULECLASS_SUFFIX = ""RuleInfo"";"
CORRECTNESS,VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED,FP,2,9,digester,1661,"throw new SAXException( format( ""[ObjectCreateRule]{%s} Class '%s' does not have a construcor with types"",
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
Class<?> clazz = this.clazz;
if (clazz == null) {
String realClassName = className;
if (attributeName != null) {
String value = attributes.getValue(attributeName);
if (value != null) {
realClassName = value;
}
}
if (getDigester().getLogger().isDebugEnabled()) {
getDigester().getLogger().debug(format(""[ObjectCreateRule]{%s} New '%s'"", getDigester().getMatch(), realClassName));
}
clazz = getDigester().getClassLoader().loadClass(realClassName);
}
Object instance;
if (constructorArgumentsTypes == null || constructorArgumentsTypes.length == 0) {
if (getDigester().getLogger().isDebugEnabled()) {
getDigester().getLogger().debug(format(""[ObjectCreateRule]{%s} New '%s' using default empty constructor"", getDigester().getMatch(), clazz.getName()));
}
instance = clazz.newInstance();
} else {
Constructor<?> constructor = getAccessibleConstructor(clazz, constructorArgumentsTypes);
if (constructor == null) {
throw new SAXException(format(""[ObjectCreateRule]{%s} Class '%s' does not have a construcor with types"", getDigester().getMatch(), clazz.getName(), Arrays.toString(constructorArgumentsTypes)));
}
instance = createLazyProxy(constructor);
}
getDigester().push(instance);
}"
Multithreaded correctness,IS2_INCONSISTENT_SYNC,TP,2,17,digester,1663,Object delegate;,Object delegate;
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,TP,1,16,digester,1669,"public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";","public static String DFLT_RESOURCE_SUFFIX = ""RuleInfo.xml"";"
Multithreaded correctness,DC_DOUBLECHECK,TP,2,14,digester,1670,"if ( proxyManager == null )
{
synchronized ( this )
{
if ( proxyManager == null )
","@Override
public void begin(String namespace, String name, Attributes attributes) throws Exception {
Class<?> clazz = this.clazz;
if (clazz == null) {
String realClassName = className;
if (attributeName != null) {
String value = attributes.getValue(attributeName);
if (value != null) {
realClassName = value;
}
}
if (getDigester().getLogger().isDebugEnabled()) {
getDigester().getLogger().debug(format(""[ObjectCreateRule]{%s} New '%s'"", getDigester().getMatch(), realClassName));
}
clazz = getDigester().getClassLoader().loadClass(realClassName);
}
Object instance;
if (constructorArgumentTypes == null || constructorArgumentTypes.length == 0) {
if (getDigester().getLogger().isDebugEnabled()) {
getDigester().getLogger().debug(format(""[ObjectCreateRule]{%s} New '%s' using default empty constructor"", getDigester().getMatch(), clazz.getName()));
}
instance = clazz.newInstance();
} else {
if (proxyManager == null) {
synchronized (this) {
if (proxyManager == null) {
Constructor<?> constructor = getAccessibleConstructor(clazz, constructorArgumentTypes);
if (constructor == null) {
throw new SAXException(format(""[ObjectCreateRule]{%s} Class '%s' does not have a construcor with types %s"", getDigester().getMatch(), clazz.getName(), Arrays.toString(constructorArgumentTypes)));
}
proxyManager = new ProxyManager(clazz, constructor, defaultConstructorArguments, getDigester());
}
}
}
instance = proxyManager.createProxy();
}
getDigester().push(instance);
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,3,20,digester,1671,"return (null);
","public Object[] peekParams(int n) {
int index = (params.size() - 1) - n;
if (index < 0) {
log.warn(""Empty stack (returning null)"");
return (null);
}
try {
return (params.get(index));
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
DODGY_CODE,UC_USELESS_CONDITION,FP,1,14,digester,1672,"if (paramTypes.length == 0) {
","@Override
public void end(String namespace, String name) throws Exception {
Object[] parameters = null;
if (paramCount > 0) {
parameters = getDigester().popParams();
if (getDigester().getLogger().isTraceEnabled()) {
for (int i = 0, size = parameters.length; i < size; i++) {
getDigester().getLogger().trace(""[CallMethodRule]("" + i + "")"" + parameters[i]);
}
}
if (paramCount == 1 && parameters[0] == null) {
return;
}
} else if (paramTypes != null && paramTypes.length != 0) {
if (bodyText == null) {
return;
}
parameters = new Object[1];
parameters[0] = bodyText;
if (paramTypes.length == 0) {
paramTypes = new Class[1];
paramTypes[0] = String.class;
}
} else {
}
Object[] paramValues = new Object[paramTypes.length];
for (int i = 0; i < paramTypes.length; i++) {
if (parameters[i] == null || (parameters[i] instanceof String && !String.class.isAssignableFrom(paramTypes[i]))) {
paramValues[i] = ConvertUtils.convert((String) parameters[i], paramTypes[i]);
} else {
paramValues[i] = parameters[i];
}
}
Object target;
if (targetOffset >= 0) {
target = getDigester().peek(targetOffset);
} else {
target = getDigester().peek(getDigester().getCount() + targetOffset);
}
if (target == null) {
StringBuilder sb = new StringBuilder();
sb.append(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call target is null ("");
sb.append(""targetOffset="");
sb.append(targetOffset);
sb.append("",stackdepth="");
sb.append(getDigester().getCount());
sb.append("")"");
throw new org.xml.sax.SAXException(sb.toString());
}
if (getDigester().getLogger().isDebugEnabled()) {
StringBuilder sb = new StringBuilder(""[CallMethodRule]{"");
sb.append(getDigester().getMatch());
sb.append(""} Call "");
sb.append(target.getClass().getName());
sb.append(""."");
sb.append(methodName);
sb.append(""("");
for (int i = 0; i < paramValues.length; i++) {
if (i > 0) {
sb.append("","");
}
if (paramValues[i] == null) {
sb.append(""null"");
} else {
sb.append(paramValues[i].toString());
}
sb.append(""/"");
if (paramTypes[i] == null) {
sb.append(""null"");
} else {
sb.append(paramTypes[i].getName());
}
}
sb.append("")"");
getDigester().getLogger().debug(sb.toString());
}
Object result = null;
if (useExactMatch) {
result = MethodUtils.invokeExactMethod(target, methodName, paramValues, paramTypes);
} else {
result = MethodUtils.invokeMethod(target, methodName, paramValues, paramTypes);
}
processMethodCallResult(result);
}"
CORRECTNESS,NP_GUARANTEED_DEREF,FP,2,8,digester,1674,"invokeMethod( parent, methodName, new Object[] { child }, paramTypes );
","private void invoke() throws Exception {
Object child = getChild();
Object parent = getParent();
if (getDigester().getLogger().isDebugEnabled()) {
if (parent == null) {
getDigester().getLogger().debug(format(""[%s]{%s} Call [NULL PARENT].%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), methodName, child));
} else {
getDigester().getLogger().debug(format(""[%s]{%s} Call %s.%s(%s)"", getClass().getSimpleName(), getDigester().getMatch(), parent.getClass().getName(), methodName, child));
}
}
Class<?>[] paramTypes = new Class<?>[1];
if (paramType != null) {
paramTypes[0] = getDigester().getClassLoader().loadClass(paramTypeName);
} else {
paramTypes[0] = child.getClass();
}
if (useExactMatch) {
invokeExactMethod(parent, methodName, new Object[] { child }, paramTypes);
} else {
invokeMethod(parent, methodName, new Object[] { child }, paramTypes);
}
}"
DODGY_CODE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,FP,,,digester,1675,"return (null);
","public Object[] peekParams() {
try {
return (params.peek());
} catch (EmptyStackException e) {
log.warn(""Empty stack (returning null)"");
return (null);
}
}"
