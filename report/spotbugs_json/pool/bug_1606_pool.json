{
    "category": "BAD_PRACTICE",
    "vtype": "DE_MIGHT_IGNORE",
    "priority": "3",
    "rank": "19",
    "project": "pool",
    "warning_line": "} catch (Exception e) {\n",
    "warning_method": "public void clearOldest() {\nfinal Map<PooledObject<T>, K> map = new TreeMap<PooledObject<T>, K>();\nfor (K k : poolMap.keySet()) {\nfinal LinkedBlockingDeque<PooledObject<T>> idleObjects = poolMap.get(k).getIdleObjects();\nfor (PooledObject<T> p : idleObjects) {\nmap.put(p, k);\n}\n}\nint itemsToRemove = ((int) (map.size() * 0.15)) + 1;\nIterator<Map.Entry<PooledObject<T>, K>> iter = map.entrySet().iterator();\nwhile (iter.hasNext() && itemsToRemove > 0) {\nMap.Entry<PooledObject<T>, K> entry = iter.next();\nK key = entry.getValue();\nPooledObject<T> p = entry.getKey();\nboolean destroyed = true;\ntry {\ndestroyed = destroy(key, p, false);\n} catch (Exception e) {\n}\nif (destroyed) {\nitemsToRemove--;\n}\n}\n}"
}