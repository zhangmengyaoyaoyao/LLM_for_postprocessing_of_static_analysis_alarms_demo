{
    "category": "DODGY_CODE",
    "vtype": "UC_USELESS_CONDITION",
    "priority": "1",
    "rank": "14",
    "project": "pool",
    "warning_line": "if(newlyCreated) {\n",
    "warning_method": "public Object borrowObject(Object key) throws Exception {\nlong starttime = System.currentTimeMillis();\nboolean newlyCreated = false;\nfor (; ; ) {\nObjectTimestampPair pair = null;\nObjectQueue pool = null;\nsynchronized (this) {\nassertOpen();\npool = (ObjectQueue) (_poolMap.get(key));\nif (null == pool) {\npool = new ObjectQueue();\n_poolMap.put(key, pool);\n_poolList.add(key);\n}\ntry {\npair = (ObjectTimestampPair) (pool.queue.removeFirst());\nif (null != pair) {\n_totalIdle--;\n}\n} catch (NoSuchElementException e) {\n}\nif (null == pair) {\nif ((_maxTotal > 0) && (_totalActive + _totalIdle >= _maxTotal)) {\nclearOldest();\n}\nif ((_maxActive < 0 || pool.activeCount < _maxActive) && (_maxTotal < 0 || _totalActive + _totalIdle < _maxTotal)) {\nObject obj = _factory.makeObject(key);\npair = new ObjectTimestampPair(obj);\nnewlyCreated = true;\n} else {\nswitch(_whenExhaustedAction) {\ncase WHEN_EXHAUSTED_GROW:\nObject obj = _factory.makeObject(key);\npair = new ObjectTimestampPair(obj);\nbreak;\ncase WHEN_EXHAUSTED_FAIL:\nthrow new NoSuchElementException();\ncase WHEN_EXHAUSTED_BLOCK:\ntry {\nif (_maxWait <= 0) {\nwait();\n} else {\nfinal long elapsed = (System.currentTimeMillis() - starttime);\nfinal long waitTime = _maxWait - elapsed;\nif (waitTime > 0) {\nwait(waitTime);\n}\n}\n} catch (InterruptedException e) {\n}\nif (_maxWait > 0 && ((System.currentTimeMillis() - starttime) >= _maxWait)) {\nthrow new NoSuchElementException(\"Timeout waiting for idle object\");\n} else {\ncontinue;\n}\ndefault:\nthrow new IllegalArgumentException(\"whenExhaustedAction \" + _whenExhaustedAction + \" not recognized.\");\n}\n}\n}\npool.incrementActiveCount();\n}\nif (newlyCreated) {\nreturn pair.value;\n} else {\ntry {\n_factory.activateObject(key, pair.value);\n} catch (Exception e) {\ntry {\nsynchronized (this) {\npool.decrementActiveCount();\n}\n_factory.destroyObject(key, pair.value);\n} catch (Exception e2) {\n}\ncontinue;\n}\nboolean invalid = true;\ntry {\ninvalid = _testOnBorrow && !_factory.validateObject(key, pair.value);\n} catch (Exception e) {\n}\nif (invalid) {\ntry {\nsynchronized (this) {\npool.decrementActiveCount();\n}\n_factory.destroyObject(key, pair.value);\n} catch (Exception e) {\n}\nif (newlyCreated) {\nthrow new NoSuchElementException(\"Could not create a validated object\");\n}\n} else {\nreturn pair.value;\n}\n}\n}\n}"
}