{
    "category": "BAD_PRACTICE",
    "vtype": "CO_ABSTRACT_SELF",
    "priority": "3",
    "rank": "19",
    "project": "pool",
    "warning_line": "public interface PooledObject<T> extends Comparable<PooledObject<T>> {\nboolean allocate();\n@Override\nint compareTo(PooledObject<T> other);\nboolean deallocate();\nboolean endEvictionTest(Deque<PooledObject<T>> idleQueue);\n@Override\nboolean equals(Object obj);\ndefault Duration getActiveDuration() {\nfinal Instant lastReturnInstant = getLastReturnInstant();\nfinal Instant lastBorrowInstant = getLastBorrowInstant();\n// @formatter:off\nreturn lastReturnInstant.isAfter(lastBorrowInstant) ?\nDuration.between(lastBorrowInstant, lastReturnInstant) :\nDuration.between(lastBorrowInstant, Instant.now());\n// @formatter:on\n}\n@Deprecated\ndefault Duration getActiveTime() {\nreturn getActiveDuration();\n}\n@Deprecated\nlong getActiveTimeMillis();\ndefault long getBorrowedCount() {\nreturn -1;\n}\ndefault Instant getCreateInstant() {\nreturn Instant.ofEpochMilli(getCreateTime());\n}\n@Deprecated\nlong getCreateTime();\ndefault Duration getFullDuration() {\nreturn Duration.between(getCreateInstant(), Instant.now());\n}\ndefault Duration getIdleDuration() {\nreturn Duration.ofMillis(getIdleTimeMillis());\n}\n@Deprecated\ndefault Duration getIdleTime() {\nreturn Duration.ofMillis(getIdleTimeMillis());\n}\n@Deprecated\nlong getIdleTimeMillis();\ndefault Instant getLastBorrowInstant() {\nreturn Instant.ofEpochMilli(getLastBorrowTime());\n}\n@Deprecated\nlong getLastBorrowTime();\ndefault Instant getLastReturnInstant() {\nreturn Instant.ofEpochMilli(getLastReturnTime());\n}\n@Deprecated\nlong getLastReturnTime();\ndefault Instant getLastUsedInstant() {\nreturn Instant.ofEpochMilli(getLastUsedTime());\n}\n@Deprecated\nlong getLastUsedTime();\nT getObject();\nPooledObjectState getState();\n@Override\nint hashCode();\nvoid invalidate();\nvoid markAbandoned();\nvoid markReturning();\nvoid printStackTrace(PrintWriter writer);\nvoid setLogAbandoned(boolean logAbandoned);\ndefault void setRequireFullStackTrace(final boolean requireFullStackTrace) {\n}\n",
    "warning_method": "PooledObjectState getState();"
}