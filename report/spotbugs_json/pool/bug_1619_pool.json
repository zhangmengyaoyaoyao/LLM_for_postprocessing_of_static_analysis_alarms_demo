{
    "category": "DODGY_CODE",
    "vtype": "UCF_USELESS_CONTROL_FLOW",
    "priority": "3",
    "rank": "20",
    "project": "pool",
    "warning_line": "if (!idleQueue.offerFirst(this)) {\n",
    "warning_method": "public synchronized boolean endEvictionTest(LinkedBlockingDeque<PooledObject<T>> idleQueue) {\nif (state == PooledObjectState.MAINTAIN_EVICTION) {\nstate = PooledObjectState.IDLE;\nreturn true;\n} else if (state == PooledObjectState.MAINTAIN_EVICTION_RETURN_TO_HEAD) {\nstate = PooledObjectState.IDLE;\nif (!idleQueue.offerFirst(this)) {\n}\n}\nreturn false;\n}"
}