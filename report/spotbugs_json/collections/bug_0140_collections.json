{
    "category": "CORRECTNESS",
    "vtype": "INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE",
    "priority": "2",
    "rank": "7",
    "project": "collections",
    "warning_line": "if (listSize < 0) {\n",
    "warning_method": "@Override\npublic List<T> get(final int index) {\nfinal int listSize = size();\nif (listSize < 0) {\nthrow new IllegalArgumentException(\"negative size: \" + listSize);\n}\nif (index < 0) {\nthrow new IndexOutOfBoundsException(\"Index \" + index + \" must not be negative\");\n}\nif (index >= listSize) {\nthrow new IndexOutOfBoundsException(\"Index \" + index + \" must be less than size \" + listSize);\n}\nfinal int start = index * size;\nfinal int end = Math.min(start + size, list.size());\nreturn list.subList(start, end);\n}"
}