{
    "category": "Multithreaded correctness",
    "vtype": "DC_DOUBLECHECK",
    "priority": "2",
    "rank": "14",
    "project": "digester",
    "warning_line": "if ( proxyManager == null )\n{\nsynchronized ( this )\n{\nif ( proxyManager == null )\n",
    "warning_method": "@Override\npublic void begin(String namespace, String name, Attributes attributes) throws Exception {\nClass<?> clazz = this.clazz;\nif (clazz == null) {\nString realClassName = className;\nif (attributeName != null) {\nString value = attributes.getValue(attributeName);\nif (value != null) {\nrealClassName = value;\n}\n}\nif (getDigester().getLogger().isDebugEnabled()) {\ngetDigester().getLogger().debug(format(\"[ObjectCreateRule]{%s} New '%s'\", getDigester().getMatch(), realClassName));\n}\nclazz = getDigester().getClassLoader().loadClass(realClassName);\n}\nObject instance;\nif (constructorArgumentTypes == null || constructorArgumentTypes.length == 0) {\nif (getDigester().getLogger().isDebugEnabled()) {\ngetDigester().getLogger().debug(format(\"[ObjectCreateRule]{%s} New '%s' using default empty constructor\", getDigester().getMatch(), clazz.getName()));\n}\ninstance = clazz.newInstance();\n} else {\nif (proxyManager == null) {\nsynchronized (this) {\nif (proxyManager == null) {\nConstructor<?> constructor = getAccessibleConstructor(clazz, constructorArgumentTypes);\nif (constructor == null) {\nthrow new SAXException(format(\"[ObjectCreateRule]{%s} Class '%s' does not have a construcor with types %s\", getDigester().getMatch(), clazz.getName(), Arrays.toString(constructorArgumentTypes)));\n}\nproxyManager = new ProxyManager(clazz, constructor, defaultConstructorArguments, getDigester());\n}\n}\n}\ninstance = proxyManager.createProxy();\n}\ngetDigester().push(instance);\n}"
}