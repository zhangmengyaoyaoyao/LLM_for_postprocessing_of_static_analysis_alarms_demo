{
    "category": "DODGY_CODE",
    "vtype": "NP_LOAD_OF_KNOWN_NULL_VALUE",
    "priority": "2",
    "rank": "16",
    "project": "digester",
    "warning_line": "log.debug(\" Cannot resolve entity: '\" + entityURL + \"'\");\n",
    "warning_method": "public InputSource resolveEntity(String publicId, String systemId) throws SAXException {\nif (saxLog.isDebugEnabled()) {\nsaxLog.debug(\"resolveEntity('\" + publicId + \"', '\" + systemId + \"')\");\n}\nif (publicId != null)\nthis.publicId = publicId;\nURL entityURL = null;\nif (publicId != null) {\nentityURL = (URL) entityValidator.get(publicId);\n}\nif (schemaLocation != null && entityURL == null && systemId != null) {\nentityURL = (URL) entityValidator.get(systemId);\n}\nif (entityURL == null) {\nif (systemId == null) {\nif (log.isDebugEnabled()) {\nlog.debug(\" Cannot resolve entity: '\" + entityURL + \"'\");\n}\nreturn (null);\n} else {\nif (log.isDebugEnabled()) {\nlog.debug(\" Trying to resolve using system ID '\" + systemId + \"'\");\n}\ntry {\nentityURL = new URL(systemId);\n} catch (MalformedURLException e) {\nthrow new IllegalArgumentException(\"Malformed URL '\" + systemId + \"' : \" + e.getMessage());\n}\n}\n}\nif (log.isDebugEnabled()) {\nlog.debug(\" Resolving to alternate DTD '\" + entityURL + \"'\");\n}\ntry {\nreturn createInputSourceFromURL(entityURL);\n} catch (Exception e) {\nthrow createSAXException(e);\n}\n}"
}