{
    "category": "BAD_PRACTICE",
    "vtype": "NM_METHOD_NAMING_CONVENTION",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "String key = null;\nObject value = null;\nConfigurationNode node = new DefaultConfigurationNode();\nkey = String();\nnode.setName(key);\njj_consume_token(EQUAL);\nvalue = Element();\nnode.setValue(value);\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase DICT_SEPARATOR:\njj_consume_token(DICT_SEPARATOR);\nbreak;\ndefault:\njj_la1[1] = jj_gen;\n;\n}\n{if (true) return node;}\n",
    "warning_method": "final public ConfigurationNode Property() throws ParseException {\nString key = null;\nObject value = null;\nConfigurationNode node = new DefaultConfigurationNode();\nkey = String();\nnode.setName(key);\njj_consume_token(EQUAL);\nvalue = Element();\nnode.setValue(value);\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase DICT_SEPARATOR:\njj_consume_token(DICT_SEPARATOR);\nbreak;\ndefault:\njj_la1[1] = jj_gen;\n;\n}\n{\nif (true)\nreturn node;\n}\nthrow new Error(\"Missing return statement in function\");\n}"
}