{
    "category": "PERFORMANCE",
    "vtype": "SIC_INNER_SHOULD_BE_STATIC_ANON",
    "priority": "3",
    "rank": "20",
    "project": "configuration",
    "warning_line": "{\npublic InputSource resolveEntity(String publicId, String systemId)\n{\nreturn new InputSource(getClass().getClassLoader().getResourceAsStream(\"properties.dtd\"));\n",
    "warning_method": "@Override\npublic void save(Writer out) throws ConfigurationException {\nPrintWriter writer = new PrintWriter(out);\nString encoding = getEncoding() != null ? getEncoding() : DEFAULT_ENCODING;\nwriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"\" + encoding + \"\\\"?>\");\nwriter.println(\"<!DOCTYPE properties SYSTEM \\\"http://java.sun.com/dtd/properties.dtd\\\">\");\nwriter.println(\"<properties>\");\nif (getHeader() != null) {\nwriter.println(\"  <comment>\" + StringEscapeUtils.escapeXml(getHeader()) + \"</comment>\");\n}\nIterator<String> keys = getKeys();\nwhile (keys.hasNext()) {\nString key = keys.next();\nObject value = getProperty(key);\nif (value instanceof List) {\nwriteProperty(writer, key, (List<?>) value);\n} else {\nwriteProperty(writer, key, value);\n}\n}\nwriter.println(\"</properties>\");\nwriter.flush();\n}"
}