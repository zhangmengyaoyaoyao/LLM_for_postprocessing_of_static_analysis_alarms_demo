{
    "category": "BAD_PRACTICE",
    "vtype": "NM_METHOD_NAMING_CONVENTION",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "Object value = null;\nToken token;\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase ARRAY_BEGIN:\nvalue = Array();\n{if (true) return value;}\nbreak;\ncase OBJECT_BEGIN:\nvalue = Object();\n{if (true) return value;}\nbreak;\ncase STRING:\nvalue = String();\n{if (true) return value;}\nbreak;\ncase INTEGER:\ntoken = jj_consume_token(INTEGER);\n{if (true) return new BigInteger(token.image);}\nbreak;\ncase REAL:\ntoken = jj_consume_token(REAL);\n{if (true) return new BigDecimal(token.image);}\nbreak;\ncase TRUE:\ntoken = jj_consume_token(TRUE);\n{if (true) return Boolean.TRUE;}\nbreak;\ncase FALSE:\ntoken = jj_consume_token(FALSE);\n{if (true) return Boolean.FALSE;}\nbreak;\ncase NULL:\ntoken = jj_consume_token(NULL);\n{if (true) return null;}\nbreak;\ndefault:\njj_la1[2] = jj_gen;\njj_consume_token(-1);\nthrow new ParseException();\n",
    "warning_method": "final public Object Value() throws ParseException {\nObject value = null;\nToken token;\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase ARRAY_BEGIN:\nvalue = Array();\n{\nif (true)\nreturn value;\n}\nbreak;\ncase OBJECT_BEGIN:\nvalue = Object();\n{\nif (true)\nreturn value;\n}\nbreak;\ncase STRING:\nvalue = String();\n{\nif (true)\nreturn value;\n}\nbreak;\ncase INTEGER:\ntoken = jj_consume_token(INTEGER);\n{\nif (true)\nreturn new BigInteger(token.image);\n}\nbreak;\ncase REAL:\ntoken = jj_consume_token(REAL);\n{\nif (true)\nreturn new BigDecimal(token.image);\n}\nbreak;\ncase TRUE:\ntoken = jj_consume_token(TRUE);\n{\nif (true)\nreturn Boolean.TRUE;\n}\nbreak;\ncase FALSE:\ntoken = jj_consume_token(FALSE);\n{\nif (true)\nreturn Boolean.FALSE;\n}\nbreak;\ncase NULL:\ntoken = jj_consume_token(NULL);\n{\nif (true)\nreturn null;\n}\nbreak;\ndefault:\njj_la1[2] = jj_gen;\njj_consume_token(-1);\nthrow new ParseException();\n}\nthrow new Error(\"Missing return statement in function\");\n}"
}