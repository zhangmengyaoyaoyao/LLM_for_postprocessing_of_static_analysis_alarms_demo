{
    "category": "BAD_PRACTICE",
    "vtype": "NM_METHOD_NAMING_CONVENTION",
    "priority": "3",
    "rank": "19",
    "project": "configuration",
    "warning_line": "PropertyListConfiguration configuration = new PropertyListConfiguration();\nList children = new ArrayList();\nConfigurationNode child = null;\njj_consume_token(DICT_BEGIN);\nlabel_1:\nwhile (true) {\nswitch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\ncase STRING:\ncase QUOTED_STRING:\n;\nbreak;\ndefault:\njj_la1[0] = jj_gen;\nbreak label_1;\n}\nchild = Property();\nif (child.getValue() instanceof AbstractHierarchicalConfiguration)\n{\nAbstractHierarchicalConfiguration conf = (AbstractHierarchicalConfiguration) child.getValue();\nConfigurationNode root = (ConfigurationNode) conf.getRootNode();\nroot.setName(child.getName());\nchildren.add(root);\n}\nelse\n{\nchildren.add(child);\n}\n}\njj_consume_token(DICT_END);\nfor (int i = 0; i < children.size(); i++)\n{\nchild = (ConfigurationNode) children.get(i);\nconfiguration.getRootNode().addChild(child);\n}\n{if (true) return configuration;}\n",
    "warning_method": "final public PropertyListConfiguration Dictionary() throws ParseException {\nPropertyListConfiguration configuration = new PropertyListConfiguration();\nList children = new ArrayList();\nConfigurationNode child = null;\njj_consume_token(DICT_BEGIN);\nlabel_1: while (true) {\nswitch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\ncase STRING:\ncase QUOTED_STRING:\n;\nbreak;\ndefault:\njj_la1[0] = jj_gen;\nbreak label_1;\n}\nchild = Property();\nif (child.getValue() instanceof AbstractHierarchicalConfiguration) {\nAbstractHierarchicalConfiguration conf = (AbstractHierarchicalConfiguration) child.getValue();\nConfigurationNode root = (ConfigurationNode) conf.getRootNode();\nroot.setName(child.getName());\nchildren.add(root);\n} else {\nchildren.add(child);\n}\n}\njj_consume_token(DICT_END);\nfor (int i = 0; i < children.size(); i++) {\nchild = (ConfigurationNode) children.get(i);\nconfiguration.getRootNode().addChild(child);\n}\n{\nif (true)\nreturn configuration;\n}\nthrow new Error(\"Missing return statement in function\");\n}"
}