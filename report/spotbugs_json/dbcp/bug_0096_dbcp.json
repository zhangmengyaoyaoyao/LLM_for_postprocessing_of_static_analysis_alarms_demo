{
    "category": "DODGY_CODE",
    "vtype": "NP_LOAD_OF_KNOWN_NULL_VALUE",
    "priority": "3",
    "rank": "19",
    "project": "dbcp",
    "warning_line": "closeDueToException(info);\n",
    "warning_method": "@Override\npublic Connection getConnection(final String userName, final String userPassword) throws SQLException {\nif (instanceKey == null) {\nthrow new SQLException(\"Must set the ConnectionPoolDataSource \" + \"through setDataSourceName or setConnectionPoolDataSource\" + \" before calling getConnection.\");\n}\ngetConnectionCalled = true;\nPooledConnectionAndInfo info = null;\ntry {\ninfo = getPooledConnectionAndInfo(userName, userPassword);\n} catch (final NoSuchElementException e) {\ncloseDueToException(info);\nthrow new SQLException(\"Cannot borrow connection from pool\", e);\n} catch (final RuntimeException | SQLException e) {\ncloseDueToException(info);\nthrow e;\n} catch (final Exception e) {\ncloseDueToException(info);\nthrow new SQLException(\"Cannot borrow connection from pool\", e);\n}\nif (!(null == userPassword ? null == info.getPassword() : userPassword.equals(info.getPassword()))) {\ntry {\ntestCPDS(userName, userPassword);\n} catch (final SQLException ex) {\ncloseDueToException(info);\nthrow new SQLException(\"Given password did not match password used\" + \" to create the PooledConnection.\", ex);\n} catch (final javax.naming.NamingException ne) {\nthrow new SQLException(\"NamingException encountered connecting to database\", ne);\n}\nfinal UserPassKey upkey = info.getUserPassKey();\nfinal PooledConnectionManager manager = getConnectionManager(upkey);\nmanager.invalidate(info.getPooledConnection());\nmanager.setPassword(upkey.getPassword());\ninfo = null;\nfor (int i = 0; i < 10; i++) {\ntry {\ninfo = getPooledConnectionAndInfo(userName, userPassword);\n} catch (final NoSuchElementException e) {\ncloseDueToException(info);\nthrow new SQLException(\"Cannot borrow connection from pool\", e);\n} catch (final RuntimeException | SQLException e) {\ncloseDueToException(info);\nthrow e;\n} catch (final Exception e) {\ncloseDueToException(info);\nthrow new SQLException(\"Cannot borrow connection from pool\", e);\n}\nif (info != null && userPassword != null && userPassword.equals(info.getPassword())) {\nbreak;\n}\nif (info != null) {\nmanager.invalidate(info.getPooledConnection());\n}\ninfo = null;\n}\nif (info == null) {\nthrow new SQLException(\"Cannot borrow connection from pool - password change failure.\");\n}\n}\nfinal Connection con = info.getPooledConnection().getConnection();\ntry {\nsetupDefaults(con, userName);\ncon.clearWarnings();\nreturn con;\n} catch (final SQLException ex) {\ntry {\ncon.close();\n} catch (final Exception exc) {\ngetLogWriter().println(\"ignoring exception during close: \" + exc);\n}\nthrow ex;\n}\n}"
}