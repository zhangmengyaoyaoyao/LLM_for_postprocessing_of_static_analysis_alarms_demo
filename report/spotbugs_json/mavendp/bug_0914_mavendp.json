{
    "category": "I18N",
    "vtype": "DM_DEFAULT_ENCODING",
    "priority": "1",
    "rank": "19",
    "project": "mavendp",
    "warning_line": "model = pomReader.read( new FileReader( project.getFile() ) );\n",
    "warning_method": "public void execute() throws MojoExecutionException, MojoFailureException {\nMavenXpp3Reader pomReader = new MavenXpp3Reader();\nModel model = null;\ntry {\nmodel = pomReader.read(new FileReader(project.getFile()));\n} catch (Exception e) {\nthrow new MojoExecutionException(\"IOException: \" + e.getMessage(), e);\n}\nSet<String> duplicateDependencies = new HashSet<String>();\nif (model.getDependencies() != null) {\nduplicateDependencies = findDuplicateDependencies(model.getDependencies());\n}\nSet<String> duplicateDependenciesManagement = new HashSet<String>();\nif (model.getDependencyManagement() != null && model.getDependencyManagement().getDependencies() != null) {\nduplicateDependenciesManagement = findDuplicateDependencies(model.getDependencyManagement().getDependencies());\n}\nif (getLog().isInfoEnabled()) {\nStringBuffer sb = new StringBuffer();\nif (!duplicateDependencies.isEmpty()) {\nsb.append(\"List of duplicate dependencies defined in <dependencies/> in your pom.xml:\\n\");\nfor (Iterator<String> it = duplicateDependencies.iterator(); it.hasNext(); ) {\nString dup = it.next();\nsb.append(\"\\to \" + dup);\nif (it.hasNext()) {\nsb.append(\"\\n\");\n}\n}\n}\nif (!duplicateDependenciesManagement.isEmpty()) {\nif (sb.length() > 0) {\nsb.append(\"\\n\");\n}\nsb.append(\"List of duplicate dependencies defined in <dependencyManagement/> in \" + \"your pom.xml:\\n\");\nfor (Iterator<String> it = duplicateDependenciesManagement.iterator(); it.hasNext(); ) {\nString dup = it.next();\nsb.append(\"\\to \" + dup);\nif (it.hasNext()) {\nsb.append(\"\\n\");\n}\n}\n}\nif (sb.length() > 0) {\ngetLog().info(sb.toString());\n} else {\ngetLog().info(\"No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>\");\n}\n}\n}"
}