{
    "category": "DODGY_CODE",
    "vtype": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
    "priority": "3",
    "rank": "20",
    "project": "mavendp",
    "warning_line": "DependencyManagement depMgt = project.getDependencyManagement();\n",
    "warning_method": "private boolean checkDependencyManagement() throws MojoExecutionException {\nboolean foundError = false;\ngetLog().info(\"Found Resolved Dependency / DependencyManagement mismatches:\");\nList depMgtDependencies = null;\nDependencyManagement depMgt = project.getDependencyManagement();\nif (depMgt != null) {\ndepMgtDependencies = depMgt.getDependencies();\n}\nif (depMgtDependencies != null && !depMgtDependencies.isEmpty()) {\nMap depMgtMap = new HashMap();\nMap exclusions = new HashMap();\nIterator iter = depMgtDependencies.iterator();\nwhile (iter.hasNext()) {\nDependency depMgtDependency = (Dependency) iter.next();\ndepMgtMap.put(depMgtDependency.getManagementKey(), depMgtDependency);\nexclusions.putAll(addExclusions(depMgtDependency.getExclusions()));\n}\nSet allDependencyArtifacts = new HashSet(project.getArtifacts());\nif (this.ignoreDirect) {\ngetLog().info(\"\\tIgnoring Direct Dependencies.\");\nSet directDependencies = project.getDependencyArtifacts();\nallDependencyArtifacts.removeAll(directDependencies);\n}\nList exclusionErrors = getExclusionErrors(exclusions, allDependencyArtifacts);\nIterator exclusionIter = exclusionErrors.iterator();\nwhile (exclusionIter.hasNext()) {\nArtifact exclusion = (Artifact) exclusionIter.next();\ngetLog().info(StringUtils.stripEnd(getArtifactManagementKey(exclusion), \":\") + \" was excluded in DepMgt, but version \" + exclusion.getVersion() + \" has been found in the dependency tree.\");\nfoundError = true;\n}\nMap mismatch = getMismatch(depMgtMap, allDependencyArtifacts);\nIterator mismatchIter = mismatch.keySet().iterator();\nwhile (mismatchIter.hasNext()) {\nArtifact resolvedArtifact = (Artifact) mismatchIter.next();\nDependency depMgtDependency = (Dependency) mismatch.get(resolvedArtifact);\nlogMismatch(resolvedArtifact, depMgtDependency);\n}\nif (!foundError) {\ngetLog().info(\"   None\");\n}\n} else {\ngetLog().info(\"   Nothing in DepMgt.\");\n}\nreturn foundError;\n}"
}