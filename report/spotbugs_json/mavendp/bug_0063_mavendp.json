{
    "category": "DODGY_CODE",
    "vtype": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
    "priority": "3",
    "rank": "17",
    "project": "mavendp",
    "warning_line": "filter.addFilter( new ProjectTransitivityFilter( project.getDependencyArtifacts(), this.excludeTransitive ) );\n",
    "warning_method": "protected DependencyStatusSets getDependencySets(boolean stopOnFailure) throws MojoExecutionException {\nFilterArtifacts filter = new FilterArtifacts();\nfilter.addFilter(new ProjectTransitivityFilter(project.getDependencyArtifacts(), this.excludeTransitive));\nfilter.addFilter(new ScopeFilter(DependencyUtil.cleanToBeTokenizedString(this.includeScope), DependencyUtil.cleanToBeTokenizedString(this.excludeScope)));\nfilter.addFilter(new TypeFilter(DependencyUtil.cleanToBeTokenizedString(this.includeTypes), DependencyUtil.cleanToBeTokenizedString(this.excludeTypes)));\nfilter.addFilter(new ClassifierFilter(DependencyUtil.cleanToBeTokenizedString(this.includeClassifiers), DependencyUtil.cleanToBeTokenizedString(this.excludeClassifiers)));\nfilter.addFilter(new GroupIdFilter(DependencyUtil.cleanToBeTokenizedString(this.includeGroupIds), DependencyUtil.cleanToBeTokenizedString(this.excludeGroupIds)));\nfilter.addFilter(new ArtifactIdFilter(DependencyUtil.cleanToBeTokenizedString(this.includeArtifactIds), DependencyUtil.cleanToBeTokenizedString(this.excludeArtifactIds)));\nSet<Artifact> artifacts = project.getArtifacts();\ntry {\nartifacts = filter.filter(artifacts);\n} catch (ArtifactFilterException e) {\nthrow new MojoExecutionException(e.getMessage(), e);\n}\nDependencyStatusSets status = null;\nif (StringUtils.isNotEmpty(classifier)) {\nstatus = getClassifierTranslatedDependencies(artifacts, stopOnFailure);\n} else {\nstatus = filterMarkedDependencies(artifacts);\n}\nreturn status;\n}"
}