{
    "category": "I18N",
    "vtype": "DM_DEFAULT_ENCODING",
    "priority": "1",
    "rank": "19",
    "project": "mavendp",
    "warning_line": "outputWriter = new FileWriter( outputFile );\n",
    "warning_method": "public void execute() throws MojoExecutionException {\nWriter outputWriter = null;\ntry {\nSet plugins = resolvePluginArtifacts();\nif (this.outputFile != null) {\noutputFile.getParentFile().mkdirs();\noutputWriter = new FileWriter(outputFile);\n}\nfor (Iterator i = plugins.iterator(); i.hasNext(); ) {\nArtifact plugin = (Artifact) i.next();\nString logStr = \"Plugin Resolved: \" + DependencyUtil.getFormattedFileName(plugin, false);\nif (!silent) {\nthis.getLog().info(logStr);\n}\nif (outputWriter != null) {\noutputWriter.write(logStr);\noutputWriter.write(\"\\n\");\n}\nif (!excludeTransitive) {\nSet transitiveDependencies = this.resolveArtifactDependencies(plugin);\nfor (Iterator transIter = transitiveDependencies.iterator(); transIter.hasNext(); ) {\nlogStr = \"    Plugin Dependency Resolved: \" + DependencyUtil.getFormattedFileName((Artifact) transIter.next(), false);\nif (!silent) {\nthis.getLog().info(logStr);\n}\nif (outputWriter != null) {\noutputWriter.write(logStr);\noutputWriter.write(\"\\n\");\n}\n}\n}\n}\n} catch (IOException e) {\nthrow new MojoExecutionException(\"Nested:\", e);\n} catch (ArtifactResolutionException e) {\nthrow new MojoExecutionException(\"Nested:\", e);\n} catch (ArtifactNotFoundException e) {\nthrow new MojoExecutionException(\"Nested:\", e);\n} catch (ProjectBuildingException e) {\nthrow new MojoExecutionException(\"Nested:\", e);\n} catch (InvalidDependencyVersionException e) {\nthrow new MojoExecutionException(\"Nested:\", e);\n} finally {\nIOUtil.close(outputWriter);\n}\n}"
}