{
    "category": "BAD_PRACTICE",
    "vtype": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
    "priority": "2",
    "rank": "16",
    "project": "mavendp",
    "warning_line": "location.mkdirs();\n",
    "warning_method": "protected void unpack(File file, File location) throws MojoExecutionException {\ntry {\nlocation.mkdirs();\nUnArchiver unArchiver;\nunArchiver = archiverManager.getUnArchiver(file);\nunArchiver.setSourceFile(file);\nunArchiver.setDestDirectory(location);\nif (this.silent) {\nsilenceUnarchiver(unArchiver);\n}\nunArchiver.extract();\n} catch (NoSuchArchiverException e) {\nthrow new MojoExecutionException(\"Unknown archiver type\", e);\n} catch (IOException e) {\ne.printStackTrace();\nthrow new MojoExecutionException(\"Error unpacking file: \" + (this.outputAbsoluteArtifactFilename ? file.getAbsolutePath() : file.getName()) + \" to: \" + location + \"\\r\\n\" + e.toString(), e);\n} catch (ArchiverException e) {\ne.printStackTrace();\nthrow new MojoExecutionException(\"Error unpacking file: \" + file + \" to: \" + location + \"\\r\\n\" + e.toString(), e);\n}\n}"
}