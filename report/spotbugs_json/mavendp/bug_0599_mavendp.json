{
    "category": "CORRECTNESS",
    "vtype": "NP_NULL_PARAM_DEREF",
    "priority": "2",
    "rank": "8",
    "project": "mavendp",
    "warning_line": "List artList = new ArrayList( artifacts );\n",
    "warning_method": "public void execute() throws MojoExecutionException {\nif (cpFile != null) {\ngetLog().warn(\"The parameter cpFile is deprecated. Use outputFile instead.\");\nthis.outputFile = cpFile;\n}\nif (StringUtils.isEmpty(fileSeparator)) {\nisFileSepSet = false;\n} else {\nisFileSepSet = true;\n}\nif (StringUtils.isEmpty(pathSeparator)) {\nisPathSepSet = false;\n} else {\nisPathSepSet = true;\n}\nif (attach && StringUtils.isEmpty(localRepoProperty)) {\nlocalRepoProperty = \"${M2_REPO}\";\n}\nSet artifacts = getResolvedDependencies(true);\nif (artifacts == null || artifacts.isEmpty()) {\ngetLog().info(\"No dependencies found.\");\n}\nList artList = new ArrayList(artifacts);\nStringBuffer sb = new StringBuffer();\nIterator i = artList.iterator();\nif (i.hasNext()) {\nappendArtifactPath((Artifact) i.next(), sb);\nwhile (i.hasNext()) {\nsb.append(isPathSepSet ? this.pathSeparator : File.pathSeparator);\nappendArtifactPath((Artifact) i.next(), sb);\n}\n}\nString cpString = sb.toString();\nif (isFileSepSet) {\nString separator = File.separator;\nif (File.separator.equals(\"\\\\\")) {\nseparator = \"\\\\\\\\\";\n}\ncpString = cpString.replaceAll(separator, fileSeparator);\n}\nif (outputFilterFile) {\ncpString = \"classpath=\" + cpString;\n}\nif (outputFile == null) {\ngetLog().info(\"Dependencies classpath:\\n\" + cpString);\n} else {\nif (regenerateFile || !isUpdToDate(cpString)) {\nstoreClasspathFile(cpString, outputFile);\n} else {\nthis.getLog().info(\"Skipped writing classpath file '\" + outputFile + \"'.  No changes found.\");\n}\n}\nif (attach) {\nattachFile(cpString);\n}\n}"
}