{
    "category": "I18N",
    "vtype": "DM_DEFAULT_ENCODING",
    "priority": "1",
    "rank": "19",
    "project": "net",
    "warning_line": "_output_.write(Integer.toString(server.getLocalPort()).getBytes());\n",
    "warning_method": "@Override\nInputStream _createErrorStream() throws IOException {\nint localPort;\nServerSocket server;\nSocket socket;\nlocalPort = MAX_CLIENT_PORT;\nserver = null;\nfor (localPort = MAX_CLIENT_PORT; localPort >= MIN_CLIENT_PORT; --localPort) {\ntry {\nserver = _serverSocketFactory_.createServerSocket(localPort, 1, getLocalAddress());\nbreak;\n} catch (SocketException e) {\ncontinue;\n}\n}\nif (server == null) {\nthrow new BindException(\"All ports in use.\");\n}\n_output_.write(Integer.toString(server.getLocalPort()).getBytes());\n_output_.write('\\0');\n_output_.flush();\nsocket = server.accept();\nserver.close();\nif (isRemoteVerificationEnabled() && !verifyRemote(socket)) {\nsocket.close();\nthrow new IOException(\"Security violation: unexpected connection attempt by \" + socket.getInetAddress().getHostAddress());\n}\nreturn (new SocketInputStream(socket, socket.getInputStream()));\n}"
}