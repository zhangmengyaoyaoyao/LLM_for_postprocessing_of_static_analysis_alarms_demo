{
    "category": "BAD_PRACTICE",
    "vtype": "THROWS_METHOD_THROWS_CLAUSE_THROWABLE",
    "priority": "2",
    "rank": "16",
    "project": "net",
    "warning_line": "final Properties fp = new Properties();\nfinal InputStream ras = Main.class.getResourceAsStream(\"examples.properties\");\nif (ras != null) {\nfp.load(ras);\n} else {\nSystem.err.println(\"[Cannot find examples.properties file, so aliases cannot be used]\");\n}\nif (args.length == 0) {\nif (Thread.currentThread().getStackTrace().length > 2) { \nSystem.out.println(\"Usage: mvn -q exec:java  -Dexec.arguments=<alias or\" +\n\" exampleClass>,<exampleClass parameters> (comma-separated, no spaces)\");\nSystem.out.println(\"Or   : mvn -q exec:java  -Dexec.args=\\\"<alias\" +\n\" or exampleClass> <exampleClass parameters>\\\" (space separated)\");\n} else {\nif (fromJar()) {\nSystem.out.println(\n\"Usage: java -jar commons-net-examples-m.n.jar <alias or exampleClass> <exampleClass parameters>\");\n} else {\nSystem.out.println(\n\"Usage: java -cp target/classes examples/Main <alias or exampleClass> <exampleClass parameters>\");\n}\n}\n@SuppressWarnings(\"unchecked\") \nList<String> l = (List<String>) Collections.list(fp.propertyNames());\nif (l.isEmpty()) {\nreturn;\n}\nCollections.sort(l);\nSystem.out.println(\"\\nAliases and their classes:\");\nfor(String s : l) {\nSystem.out.printf(\"%-25s %s%n\",s,fp.getProperty(s));\n}\nreturn;\n}\nString shortName = args[0];\nString fullName = fp.getProperty(shortName);\nif (fullName == null) {\nfullName = shortName;\n}\nfullName = fullName.replace('/', '.');\ntry {\nClass<?> clazz = Class.forName(fullName);\nMethod m = clazz.getDeclaredMethod(\"main\", new Class[]{args.getClass()});\nString[] args2 = new String[args.length-1];\nSystem.arraycopy(args, 1, args2, 0, args2.length);\ntry {\nm.invoke(null, (Object)args2);\n} catch (InvocationTargetException ite) {\nThrowable cause = ite.getCause();\nif (cause != null) {\nthrow cause;\n} else {\nthrow ite;\n}\n}\n} catch (ClassNotFoundException e) {\nSystem.out.println(e);\n}\n}\n",
    "warning_method": "public static void main(String[] args) throws Throwable {\nfinal Properties fp = new Properties();\nfinal InputStream ras = Main.class.getResourceAsStream(\"examples.properties\");\nif (ras != null) {\nfp.load(ras);\n} else {\nSystem.err.println(\"[Cannot find examples.properties file, so aliases cannot be used]\");\n}\nif (args.length == 0) {\nif (Thread.currentThread().getStackTrace().length > 2) {\nSystem.out.println(\"Usage: mvn -q exec:java  -Dexec.arguments=<alias or\" + \" exampleClass>,<exampleClass parameters> (comma-separated, no spaces)\");\nSystem.out.println(\"Or   : mvn -q exec:java  -Dexec.args=\\\"<alias\" + \" or exampleClass> <exampleClass parameters>\\\" (space separated)\");\n} else {\nif (fromJar()) {\nSystem.out.println(\"Usage: java -jar commons-net-examples-m.n.jar <alias or exampleClass> <exampleClass parameters>\");\n} else {\nSystem.out.println(\"Usage: java -cp target/classes examples/Main <alias or exampleClass> <exampleClass parameters>\");\n}\n}\n@SuppressWarnings(\"unchecked\")\nList<String> l = (List<String>) Collections.list(fp.propertyNames());\nif (l.isEmpty()) {\nreturn;\n}\nCollections.sort(l);\nSystem.out.println(\"\\nAliases and their classes:\");\nfor (String s : l) {\nSystem.out.printf(\"%-25s %s%n\", s, fp.getProperty(s));\n}\nreturn;\n}\nString shortName = args[0];\nString fullName = fp.getProperty(shortName);\nif (fullName == null) {\nfullName = shortName;\n}\nfullName = fullName.replace('/', '.');\ntry {\nClass<?> clazz = Class.forName(fullName);\nMethod m = clazz.getDeclaredMethod(\"main\", new Class[] { args.getClass() });\nString[] args2 = new String[args.length - 1];\nSystem.arraycopy(args, 1, args2, 0, args2.length);\ntry {\nm.invoke(null, (Object) args2);\n} catch (InvocationTargetException ite) {\nThrowable cause = ite.getCause();\nif (cause != null) {\nthrow cause;\n} else {\nthrow ite;\n}\n}\n} catch (ClassNotFoundException e) {\nSystem.out.println(e);\n}\n}"
}