{
    "category": "I18N",
    "vtype": "DM_DEFAULT_ENCODING",
    "priority": "1",
    "rank": "19",
    "project": "net",
    "warning_line": "Base64.encodeBase64((\"\\000\" + username + \"\\000\" + password).getBytes())\n",
    "warning_method": "public boolean auth(AUTH_METHOD method, String username, String password) throws IOException, NoSuchAlgorithmException, InvalidKeyException, InvalidKeySpecException {\nif (sendCommand(POP3Command.AUTH, method.getAuthName()) != POP3Reply.OK_INT) {\nreturn false;\n}\nswitch(method) {\ncase PLAIN:\nreturn sendCommand(new String(Base64.encodeBase64((\"\\000\" + username + \"\\000\" + password).getBytes()))) == POP3Reply.OK;\ncase CRAM_MD5:\nbyte[] serverChallenge = Base64.decodeBase64(getReplyString().substring(2).trim());\nMac hmac_md5 = Mac.getInstance(\"HmacMD5\");\nhmac_md5.init(new SecretKeySpec(password.getBytes(), \"HmacMD5\"));\n// compute the result:\nbyte[] hmacResult = _convertToHexString(hmac_md5.doFinal(serverChallenge)).getBytes();\nbyte[] usernameBytes = username.getBytes();\nbyte[] toEncode = new byte[usernameBytes.length + 1 + hmacResult.length];\nSystem.arraycopy(usernameBytes, 0, toEncode, 0, usernameBytes.length);\ntoEncode[usernameBytes.length] = ' ';\nSystem.arraycopy(hmacResult, 0, toEncode, usernameBytes.length + 1, hmacResult.length);\n// send the reply and read the server code:\nreturn sendCommand(new String(Base64.encodeBase64(toEncode))) == POP3Reply.OK;\ndefault:\nreturn false;\n}\n}"
}