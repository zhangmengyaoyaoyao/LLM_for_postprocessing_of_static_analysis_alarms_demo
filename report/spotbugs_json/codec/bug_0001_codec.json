{
    "category": "BAD_PRACTICE",
    "vtype": "SE_COMPARATOR_SHOULD_BE_SERIALIZABLE",
    "priority": "3",
    "rank": "20",
    "project": "codec",
    "warning_line": "public StringEncoderComparator() {\nthis.stringEncoder = null; \n}\npublic StringEncoderComparator(StringEncoder stringEncoder) {\nthis.stringEncoder = stringEncoder;\n}\n@Override\npublic int compare(Object o1, Object o2) {\nint compareCode = 0;\ntry {\nComparable s1 = (Comparable) this.stringEncoder.encode(o1);\nComparable s2 = (Comparable) this.stringEncoder.encode(o2);\ncompareCode = s1.compareTo(s2);\n} catch (EncoderException ee) {\ncompareCode = 0;\n}\nreturn compareCode;\n",
    "warning_method": "@Override\npublic int compare(Object o1, Object o2) {\nint compareCode = 0;\ntry {\nComparable s1 = (Comparable) this.stringEncoder.encode(o1);\nComparable s2 = (Comparable) this.stringEncoder.encode(o2);\ncompareCode = s1.compareTo(s2);\n} catch (EncoderException ee) {\ncompareCode = 0;\n}\nreturn compareCode;\n}"
}