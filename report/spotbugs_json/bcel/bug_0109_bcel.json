{
    "category": "BAD_PRACTICE",
    "vtype": "OS_OPEN_STREAM",
    "priority": "2",
    "rank": "16",
    "project": "bcel",
    "warning_line": "zip = new ZipFile(zip_file);\n",
    "warning_method": "public JavaClass parse() throws IOException, ClassFormatException {\nZipFile zip = null;\ntry {\nif (fileOwned) {\nif (is_zip) {\nzip = new ZipFile(zip_file);\nZipEntry entry = zip.getEntry(file_name);\nif (entry == null) {\nthrow new IOException(\"File \" + file_name + \" not found\");\n}\ndataInputStream = new DataInputStream(new BufferedInputStream(zip.getInputStream(entry), BUFSIZE));\n} else {\ndataInputStream = new DataInputStream(new BufferedInputStream(new FileInputStream(file_name), BUFSIZE));\n}\n}\nreadID();\nreadVersion();\nreadConstantPool();\nreadClassInfo();\nreadInterfaces();\nreadFields();\nreadMethods();\nreadAttributes();\n// System.err.println(\"WARNING: \" + u[i]);\n// System.err.println(\"WARNING: Trailing garbage at end of \" + file_name);\n// System.err.println(bytes + \" extra bytes: \" + Utility.toHexString(buf));\n} finally {\nif (fileOwned) {\ntry {\nif (dataInputStream != null) {\ndataInputStream.close();\n}\nif (zip != null) {\nzip.close();\n}\n} catch (IOException ioe) {\n}\n}\n}\nreturn new JavaClass(class_name_index, superclass_name_index, file_name, major, minor, access_flags, constant_pool, interfaces, fields, methods, attributes, is_zip ? JavaClass.ZIP : JavaClass.FILE);\n}"
}