{
    "category": "I18N",
    "vtype": "DM_CONVERT_CASE",
    "priority": "3",
    "rank": "20",
    "project": "fileupload",
    "warning_line": "&&  subContentType.toLowerCase()\n",
    "warning_method": "private boolean findNextItem() throws IOException {\nif (eof) {\nreturn false;\n}\nif (currentItem != null) {\ncurrentItem.close();\ncurrentItem = null;\n}\nfor (; ; ) {\nboolean nextPart;\nif (skipPreamble) {\nnextPart = multi.skipPreamble();\n} else {\nnextPart = multi.readBoundary();\n}\nif (!nextPart) {\nif (currentFieldName == null) {\neof = true;\nreturn false;\n}\nmulti.setBoundary(boundary);\ncurrentFieldName = null;\ncontinue;\n}\nFileItemHeaders headers = getParsedHeaders(multi.readHeaders());\nif (currentFieldName == null) {\nString fieldName = getFieldName(headers);\nif (fieldName != null) {\nString subContentType = headers.getHeader(CONTENT_TYPE);\nif (subContentType != null && subContentType.toLowerCase().startsWith(MULTIPART_MIXED)) {\ncurrentFieldName = fieldName;\nbyte[] subBoundary = getBoundary(subContentType);\nmulti.setBoundary(subBoundary);\nskipPreamble = true;\ncontinue;\n}\nString fileName = getFileName(headers);\ncurrentItem = new FileItemStreamImpl(fileName, fieldName, headers.getHeader(CONTENT_TYPE), fileName == null, getContentLength(headers));\nnotifier.noteItem();\nitemValid = true;\nreturn true;\n}\n} else {\nString fileName = getFileName(headers);\nif (fileName != null) {\ncurrentItem = new FileItemStreamImpl(fileName, currentFieldName, headers.getHeader(CONTENT_TYPE), false, getContentLength(headers));\nnotifier.noteItem();\nitemValid = true;\nreturn true;\n}\n}\nmulti.discardBodyData();\n}\n}"
}